

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed May 22 13:35:21 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F15214
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	cinit,global,class=CODE,merge=1,delta=2
    15                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	dabs	1,0x7E,2
    54     0000                     
    55                           ; Generated 19/10/2023 GMT
    56                           ; 
    57                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F15214 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89     0000                     	;# 
    90     0001                     	;# 
    91     0002                     	;# 
    92     0003                     	;# 
    93     0004                     	;# 
    94     0005                     	;# 
    95     0006                     	;# 
    96     0007                     	;# 
    97     0008                     	;# 
    98     0009                     	;# 
    99     000A                     	;# 
   100     000B                     	;# 
   101     000C                     	;# 
   102     0012                     	;# 
   103     0018                     	;# 
   104     009A                     	;# 
   105     009B                     	;# 
   106     009B                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     0119                     	;# 
   112     011A                     	;# 
   113     011B                     	;# 
   114     011B                     	;# 
   115     011C                     	;# 
   116     011D                     	;# 
   117     011E                     	;# 
   118     011F                     	;# 
   119     018C                     	;# 
   120     018D                     	;# 
   121     018E                     	;# 
   122     018F                     	;# 
   123     0190                     	;# 
   124     0191                     	;# 
   125     0192                     	;# 
   126     020C                     	;# 
   127     020C                     	;# 
   128     020D                     	;# 
   129     020E                     	;# 
   130     020E                     	;# 
   131     020F                     	;# 
   132     020F                     	;# 
   133     0210                     	;# 
   134     0210                     	;# 
   135     0211                     	;# 
   136     0211                     	;# 
   137     0211                     	;# 
   138     028C                     	;# 
   139     028C                     	;# 
   140     028D                     	;# 
   141     028D                     	;# 
   142     028E                     	;# 
   143     028F                     	;# 
   144     0290                     	;# 
   145     0291                     	;# 
   146     030C                     	;# 
   147     030C                     	;# 
   148     030D                     	;# 
   149     030E                     	;# 
   150     030F                     	;# 
   151     0310                     	;# 
   152     0310                     	;# 
   153     0311                     	;# 
   154     0312                     	;# 
   155     0313                     	;# 
   156     0314                     	;# 
   157     0314                     	;# 
   158     0315                     	;# 
   159     0316                     	;# 
   160     0318                     	;# 
   161     0318                     	;# 
   162     0319                     	;# 
   163     031A                     	;# 
   164     059C                     	;# 
   165     059C                     	;# 
   166     059D                     	;# 
   167     059D                     	;# 
   168     059E                     	;# 
   169     059F                     	;# 
   170     070C                     	;# 
   171     070D                     	;# 
   172     070E                     	;# 
   173     0716                     	;# 
   174     0717                     	;# 
   175     0718                     	;# 
   176     080C                     	;# 
   177     0811                     	;# 
   178     0813                     	;# 
   179     0814                     	;# 
   180     081A                     	;# 
   181     081A                     	;# 
   182     081B                     	;# 
   183     081C                     	;# 
   184     081C                     	;# 
   185     081D                     	;# 
   186     081E                     	;# 
   187     081F                     	;# 
   188     088E                     	;# 
   189     0890                     	;# 
   190     0891                     	;# 
   191     0892                     	;# 
   192     0893                     	;# 
   193     090C                     	;# 
   194     1E8F                     	;# 
   195     1E90                     	;# 
   196     1E91                     	;# 
   197     1E92                     	;# 
   198     1E93                     	;# 
   199     1E9C                     	;# 
   200     1EA1                     	;# 
   201     1EA2                     	;# 
   202     1EC3                     	;# 
   203     1EC5                     	;# 
   204     1EC6                     	;# 
   205     1EC7                     	;# 
   206     1ECB                     	;# 
   207     1ECB                     	;# 
   208     1ECB                     	;# 
   209     1ECC                     	;# 
   210     1ECC                     	;# 
   211     1ECC                     	;# 
   212     1F10                     	;# 
   213     1F11                     	;# 
   214     1F12                     	;# 
   215     1F14                     	;# 
   216     1F15                     	;# 
   217     1F38                     	;# 
   218     1F39                     	;# 
   219     1F3A                     	;# 
   220     1F3B                     	;# 
   221     1F3C                     	;# 
   222     1F3D                     	;# 
   223     1F3E                     	;# 
   224     1F3F                     	;# 
   225     1FE4                     	;# 
   226     1FE5                     	;# 
   227     1FE6                     	;# 
   228     1FE7                     	;# 
   229     1FE8                     	;# 
   230     1FE8                     	;# 
   231     1FE9                     	;# 
   232     1FEA                     	;# 
   233     1FEB                     	;# 
   234     1FED                     	;# 
   235     1FEE                     	;# 
   236     1FEF                     	;# 
   237                           
   238                           	psect	stringtext1
   239     05CA                     __pstringtext1:
   240     05CA                     EUSART_print_hex@ref:
   241     05CA  3430               	retlw	48
   242     05CB  3431               	retlw	49
   243     05CC  3432               	retlw	50
   244     05CD  3433               	retlw	51
   245     05CE  3434               	retlw	52
   246     05CF  3435               	retlw	53
   247     05D0  3436               	retlw	54
   248     05D1  3437               	retlw	55
   249     05D2  3438               	retlw	56
   250     05D3  3439               	retlw	57
   251     05D4  3441               	retlw	65
   252     05D5  3442               	retlw	66
   253     05D6  3443               	retlw	67
   254     05D7  3444               	retlw	68
   255     05D8  3445               	retlw	69
   256     05D9  3446               	retlw	70
   257     05DA                     __end_ofEUSART_print_hex@ref:
   258     000C                     _PORTA	set	12
   259     000C                     _PORTAbits	set	12
   260     0012                     _TRISA	set	18
   261     000B                     _INTCONbits	set	11
   262     0012                     _TRISAbits	set	18
   263     009B                     _ADRES	set	155
   264     009E                     _ADCON1bits	set	158
   265     009D                     _ADCON0bits	set	157
   266     0119                     _RC1REG	set	281
   267     011A                     _TX1REG	set	282
   268     011C                     _SP1BRGH	set	284
   269     011B                     _SP1BRGL	set	283
   270     011D                     _RC1STAbits	set	285
   271     011E                     _TX1STAbits	set	286
   272     011F                     _BAUD1CONbits	set	287
   273     018C                     _SSP1BUF	set	396
   274     018F                     _SSP1STAT	set	399
   275     0192                     _SSP1CON3bits	set	402
   276     0191                     _SSP1CON2bits	set	401
   277     018D                     _SSP1ADD	set	397
   278     0191                     _SSP1CON2	set	401
   279     0190                     _SSP1CON1bits	set	400
   280     018F                     _SSP1STATbits	set	399
   281     0717                     _PIE1bits	set	1815
   282     070D                     _PIR1bits	set	1805
   283     080C                     _WDTCONbits	set	2060
   284     1EC6                     _SSP1DATPPS	set	7878
   285     1EC5                     _SSP1CLKPPS	set	7877
   286     1ECB                     _RX1PPS	set	7883
   287     1F38                     _ANSELA	set	7992
   288     1F3A                     _ODCONAbits	set	7994
   289     1F12                     _RA2PPS	set	7954
   290     1F11                     _RA1PPS	set	7953
   291     1F15                     _RA5PPS	set	7957
   292     05DA                     STR_8:
   293     05DA  342B               	retlw	43	;'+'
   294     05DB  344A               	retlw	74	;'J'
   295     05DC  344F               	retlw	79	;'O'
   296     05DD  3449               	retlw	73	;'I'
   297     05DE  344E               	retlw	78	;'N'
   298     05DF  343A               	retlw	58	;':'
   299     05E0  3420               	retlw	32	;' '
   300     05E1  344A               	retlw	74	;'J'
   301     05E2  346F               	retlw	111	;'o'
   302     05E3  3469               	retlw	105	;'i'
   303     05E4  346E               	retlw	110	;'n'
   304     05E5  3465               	retlw	101	;'e'
   305     05E6  3464               	retlw	100	;'d'
   306     05E7  3420               	retlw	32	;' '
   307     05E8  3461               	retlw	97	;'a'
   308     05E9  346C               	retlw	108	;'l'
   309     05EA  3472               	retlw	114	;'r'
   310     05EB  3465               	retlw	101	;'e'
   311     05EC  3461               	retlw	97	;'a'
   312     05ED  3464               	retlw	100	;'d'
   313     05EE  3479               	retlw	121	;'y'
   314     05EF  3400               	retlw	0
   315                           
   316                           	psect	stringtext2
   317     0729                     __pstringtext2:
   318     0729                     STR_11:
   319     0729  3443               	retlw	67	;'C'
   320     072A  346F               	retlw	111	;'o'
   321     072B  346E               	retlw	110	;'n'
   322     072C  346E               	retlw	110	;'n'
   323     072D  3465               	retlw	101	;'e'
   324     072E  3463               	retlw	99	;'c'
   325     072F  3474               	retlw	116	;'t'
   326     0730  3465               	retlw	101	;'e'
   327     0731  3464               	retlw	100	;'d'
   328     0732  3420               	retlw	32	;' '
   329     0733  3421               	retlw	33	;'!'
   330     0734  3400               	retlw	0
   331                           
   332                           	psect	stringtext3
   333     0735                     __pstringtext3:
   334     0735                     STR_13:
   335     0735  3441               	retlw	65	;'A'
   336     0736  3454               	retlw	84	;'T'
   337     0737  342B               	retlw	43	;'+'
   338     0738  344C               	retlw	76	;'L'
   339     0739  344F               	retlw	79	;'O'
   340     073A  3457               	retlw	87	;'W'
   341     073B  3450               	retlw	80	;'P'
   342     073C  344F               	retlw	79	;'O'
   343     073D  3457               	retlw	87	;'W'
   344     073E  3445               	retlw	69	;'E'
   345     073F  3452               	retlw	82	;'R'
   346     0740  3400               	retlw	0
   347                           
   348                           	psect	stringtext4
   349     0759                     __pstringtext4:
   350     0759                     STR_1:
   351     0759  3457               	retlw	87	;'W'
   352     075A  3461               	retlw	97	;'a'
   353     075B  346B               	retlw	107	;'k'
   354     075C  3465               	retlw	101	;'e'
   355     075D  3420               	retlw	32	;' '
   356     075E  3475               	retlw	117	;'u'
   357     075F  3470               	retlw	112	;'p'
   358     0760  3420               	retlw	32	;' '
   359     0761  3421               	retlw	33	;'!'
   360     0762  3421               	retlw	33	;'!'
   361     0763  3400               	retlw	0
   362                           
   363                           	psect	stringtext5
   364     0764                     __pstringtext5:
   365     0764                     STR_12:
   366     0764  3441               	retlw	65	;'A'
   367     0765  3454               	retlw	84	;'T'
   368     0766  342B               	retlw	43	;'+'
   369     0767  344D               	retlw	77	;'M'
   370     0768  3453               	retlw	83	;'S'
   371     0769  3447               	retlw	71	;'G'
   372     076A  3448               	retlw	72	;'H'
   373     076B  3445               	retlw	69	;'E'
   374     076C  3458               	retlw	88	;'X'
   375     076D  343D               	retlw	61	;'='
   376     076E  3400               	retlw	0
   377                           
   378                           	psect	stringtext6
   379     076F                     __pstringtext6:
   380     076F                     STR_6:
   381     076F  3452               	retlw	82	;'R'
   382     0770  3458               	retlw	88	;'X'
   383     0771  342F               	retlw	47	;'/'
   384     0772  3454               	retlw	84	;'T'
   385     0773  3458               	retlw	88	;'X'
   386     0774  3420               	retlw	32	;' '
   387     0775  3446               	retlw	70	;'F'
   388     0776  3461               	retlw	97	;'a'
   389     0777  3469               	retlw	105	;'i'
   390     0778  346C               	retlw	108	;'l'
   391     0779  3400               	retlw	0
   392                           
   393                           	psect	stringtext7
   394     0784                     __pstringtext7:
   395     0784                     STR_3:
   396     0784  342B               	retlw	43	;'+'
   397     0785  3441               	retlw	65	;'A'
   398     0786  3454               	retlw	84	;'T'
   399     0787  343A               	retlw	58	;':'
   400     0788  3420               	retlw	32	;' '
   401     0789  344F               	retlw	79	;'O'
   402     078A  344B               	retlw	75	;'K'
   403     078B  3400               	retlw	0
   404                           
   405                           	psect	stringtext8
   406     078C                     __pstringtext8:
   407     078C                     STR_7:
   408     078C  3441               	retlw	65	;'A'
   409     078D  3454               	retlw	84	;'T'
   410     078E  342B               	retlw	43	;'+'
   411     078F  344A               	retlw	74	;'J'
   412     0790  344F               	retlw	79	;'O'
   413     0791  3449               	retlw	73	;'I'
   414     0792  344E               	retlw	78	;'N'
   415     0793  3400               	retlw	0
   416                           
   417                           	psect	stringtext9
   418     07B4                     __pstringtext9:
   419     07B4                     STR_2:
   420     07B4  3441               	retlw	65	;'A'
   421     07B5  3454               	retlw	84	;'T'
   422     07B6  3400               	retlw	0
   423                           
   424                           	psect	stringtext10
   425     0000                     __pstringtext10:
   426     0759                     
   427                           	psect	cinit
   428     0034                     start_initialization:	
   429                           ; #config settings
   430                           
   431     0034                     __initialization:
   432                           
   433                           ; Clear objects allocated to COMMON
   434     0034  01FC               	clrf	__pbssCOMMON& (0+127)
   435                           
   436                           ; Clear objects allocated to BANK1
   437     0035  30A0               	movlw	low __pbssBANK1
   438     0036  0084               	movwf	4
   439     0037  3000               	movlw	high __pbssBANK1
   440     0038  0085               	movwf	5
   441     0039  3050               	movlw	80
   442     003A  3187  279C  3180   	fcall	clear_ram0
   443     003D                     end_of_initialization:	
   444                           ;End of C runtime variable initialization code
   445                           
   446     003D                     __end_of__initialization:
   447     003D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   448     003E  0140               	movlb	0
   449     003F  3183  2B27         	ljmp	_main	;jump to C main() function
   450                           
   451                           	psect	bssCOMMON
   452     007C                     __pbssCOMMON:
   453     007C                     _RX_index:
   454     007C                     	ds	1
   455                           
   456                           	psect	bssBANK1
   457     00A0                     __pbssBANK1:
   458     00A0                     _RX_buffer:
   459     00A0                     	ds	80
   460                           
   461                           	psect	clrtext
   462     079C                     clear_ram0:	
   463                           ;	Called with FSR0 containing the base address, and
   464                           ;	WREG with the size to clear
   465                           
   466     079C  0064               	clrwdt	;clear the watchdog before getting into this loop
   467     079D                     clrloop0:
   468     079D  0180               	clrf	0	;clear RAM location pointed to by FSR
   469     079E  3101               	addfsr 0,1
   470     079F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   471     07A0  2F9D               	goto	clrloop0	;have we reached the end yet?
   472     07A1  3400               	retlw	0	;all done for this memory range, return
   473                           
   474                           	psect	cstackCOMMON
   475     0070                     __pcstackCOMMON:
   476     0070                     ?_WDT_setup:
   477     0070                     ?_SLEEP_start:	
   478                           ; 1 bytes @ 0x0
   479                           
   480     0070                     ?_EUSART_setup:	
   481                           ; 1 bytes @ 0x0
   482                           
   483     0070                     ?_EUSART_write:	
   484                           ; 1 bytes @ 0x0
   485                           
   486     0070                     ?_EUSART_print_hex:	
   487                           ; 1 bytes @ 0x0
   488                           
   489     0070                     ?_I2C_setup:	
   490                           ; 1 bytes @ 0x0
   491                           
   492     0070                     ?_I2C_setup_slave:	
   493                           ; 1 bytes @ 0x0
   494                           
   495     0070                     ?_I2C_wait:	
   496                           ; 1 bytes @ 0x0
   497                           
   498     0070                     ?_I2C_start:	
   499                           ; 1 bytes @ 0x0
   500                           
   501     0070                     ?_I2C_stop:	
   502                           ; 1 bytes @ 0x0
   503                           
   504     0070                     ?_I2C_write:	
   505                           ; 1 bytes @ 0x0
   506                           
   507     0070                     ?_I2C_read:	
   508                           ; 1 bytes @ 0x0
   509                           
   510     0070                     ?_Analog_setup:	
   511                           ; 1 bytes @ 0x0
   512                           
   513     0070                     ?_Analog_read_percent:	
   514                           ; 1 bytes @ 0x0
   515                           
   516     0070                     ?_LoRa_setup:	
   517                           ; 1 bytes @ 0x0
   518                           
   519     0070                     ?_ISR:	
   520                           ; 1 bytes @ 0x0
   521                           
   522     0070                     ??_ISR:	
   523                           ; 1 bytes @ 0x0
   524                           
   525     0070                     ?_main:	
   526                           ; 1 bytes @ 0x0
   527                           
   528                           
   529                           ; 1 bytes @ 0x0
   530     0070                     	ds	1
   531     0071                     ??_WDT_setup:
   532     0071                     ??_SLEEP_start:	
   533                           ; 1 bytes @ 0x1
   534                           
   535     0071                     ??_EUSART_setup:	
   536                           ; 1 bytes @ 0x1
   537                           
   538     0071                     ??_EUSART_write:	
   539                           ; 1 bytes @ 0x1
   540                           
   541     0071                     ?_EUSART_clear_buffer:	
   542                           ; 1 bytes @ 0x1
   543                           
   544     0071                     ??_I2C_setup:	
   545                           ; 1 bytes @ 0x1
   546                           
   547     0071                     ??_I2C_setup_slave:	
   548                           ; 1 bytes @ 0x1
   549                           
   550     0071                     ??_I2C_wait:	
   551                           ; 1 bytes @ 0x1
   552                           
   553     0071                     ??_I2C_start:	
   554                           ; 1 bytes @ 0x1
   555                           
   556     0071                     ??_I2C_stop:	
   557                           ; 1 bytes @ 0x1
   558                           
   559     0071                     ??_I2C_write:	
   560                           ; 1 bytes @ 0x1
   561                           
   562     0071                     ??_I2C_read:	
   563                           ; 1 bytes @ 0x1
   564                           
   565     0071                     ??_Analog_setup:	
   566                           ; 1 bytes @ 0x1
   567                           
   568     0071                     ?__Umul8_16:	
   569                           ; 1 bytes @ 0x1
   570                           
   571     0071                     ?_Analog_read_raw:	
   572                           ; 2 bytes @ 0x1
   573                           
   574     0071                     ?_remote_check:	
   575                           ; 2 bytes @ 0x1
   576                           
   577     0071                     ?___xxtofl:	
   578                           ; 2 bytes @ 0x1
   579                           
   580     0071                     EUSART_write@txData:	
   581                           ; 4 bytes @ 0x1
   582                           
   583     0071                     EUSART_clear_buffer@size:	
   584                           ; 1 bytes @ 0x1
   585                           
   586     0071                     I2C_setup_slave@slaveAddress:	
   587                           ; 1 bytes @ 0x1
   588                           
   589     0071                     I2C_write@data:	
   590                           ; 1 bytes @ 0x1
   591                           
   592     0071                     I2C_read@tmp:	
   593                           ; 1 bytes @ 0x1
   594                           
   595     0071                     __Umul8_16@multiplicand:	
   596                           ; 1 bytes @ 0x1
   597                           
   598     0071                     ___xxtofl@val:	
   599                           ; 1 bytes @ 0x1
   600                           
   601                           
   602                           ; 4 bytes @ 0x1
   603     0071                     	ds	1
   604     0072                     ?_EUSART_print:
   605     0072                     ??_EUSART_print_hex:	
   606                           ; 1 bytes @ 0x2
   607                           
   608     0072                     ??_EUSART_clear_buffer:	
   609                           ; 1 bytes @ 0x2
   610                           
   611     0072                     ?_I2C_write_query:	
   612                           ; 1 bytes @ 0x2
   613                           
   614     0072                     ?_I2C_read_query:	
   615                           ; 1 bytes @ 0x2
   616                           
   617     0072                     I2C_write_query@data:	
   618                           ; 1 bytes @ 0x2
   619                           
   620     0072                     I2C_read_query@data:	
   621                           ; 1 bytes @ 0x2
   622                           
   623     0072                     EUSART_print@string:	
   624                           ; 1 bytes @ 0x2
   625                           
   626                           
   627                           ; 2 bytes @ 0x2
   628     0072                     	ds	1
   629     0073                     ??__Umul8_16:
   630     0073                     ??_I2C_write_query:	
   631                           ; 1 bytes @ 0x3
   632                           
   633     0073                     ??_Analog_read_raw:	
   634                           ; 1 bytes @ 0x3
   635                           
   636     0073                     ??_remote_check:	
   637                           ; 1 bytes @ 0x3
   638                           
   639     0073                     EUSART_print_hex@number:	
   640                           ; 1 bytes @ 0x3
   641                           
   642     0073                     EUSART_clear_buffer@buffer:	
   643                           ; 1 bytes @ 0x3
   644                           
   645     0073                     I2C_write_query@address:	
   646                           ; 1 bytes @ 0x3
   647                           
   648     0073                     I2C_read_query@number_of_bytes:	
   649                           ; 1 bytes @ 0x3
   650                           
   651                           
   652                           ; 1 bytes @ 0x3
   653     0073                     	ds	1
   654     0074                     ??_EUSART_print:
   655     0074                     ??_I2C_read_query:	
   656                           ; 1 bytes @ 0x4
   657                           
   658     0074                     EUSART_print_hex@a:	
   659                           ; 1 bytes @ 0x4
   660                           
   661     0074                     EUSART_clear_buffer@i:	
   662                           ; 1 bytes @ 0x4
   663                           
   664                           
   665                           ; 1 bytes @ 0x4
   666     0074                     	ds	1
   667     0075                     ??___xxtofl:
   668     0075                     I2C_read_query@i:	
   669                           ; 1 bytes @ 0x5
   670                           
   671     0075                     __Umul8_16@product:	
   672                           ; 2 bytes @ 0x5
   673                           
   674                           
   675                           ; 2 bytes @ 0x5
   676     0075                     	ds	2
   677     0077                     EUSART_print@c:
   678     0077                     I2C_read_query@address:	
   679                           ; 1 bytes @ 0x7
   680                           
   681     0077                     __Umul8_16@word_mpld:	
   682                           ; 1 bytes @ 0x7
   683                           
   684                           
   685                           ; 2 bytes @ 0x7
   686     0077                     	ds	1
   687     0078                     ?_AT_command:
   688     0078                     ??_AT_command_check:	
   689                           ; 1 bytes @ 0x8
   690                           
   691     0078                     ?_I2C_SHT4x_read_raw:	
   692                           ; 1 bytes @ 0x8
   693                           
   694     0078                     ??_LoRa_send_data:	
   695                           ; 1 bytes @ 0x8
   696                           
   697     0078                     I2C_SHT4x_read_raw@raw_rh:	
   698                           ; 1 bytes @ 0x8
   699                           
   700     0078                     AT_command@at_command:	
   701                           ; 1 bytes @ 0x8
   702                           
   703                           
   704                           ; 2 bytes @ 0x8
   705     0078                     	ds	1
   706     0079                     ??_I2C_SHT4x_read_raw:
   707     0079                     __Umul8_16@multiplier:	
   708                           ; 1 bytes @ 0x9
   709                           
   710                           
   711                           ; 1 bytes @ 0x9
   712     0079                     	ds	1
   713     007A                     ??_AT_command:
   714     007A                     ___fltol@sign1:	
   715                           ; 1 bytes @ 0xA
   716                           
   717                           
   718                           ; 1 bytes @ 0xA
   719     007A                     	ds	1
   720     007B                     AT_command_check@i:
   721     007B                     ___fltol@exp1:	
   722                           ; 1 bytes @ 0xB
   723                           
   724                           
   725                           ; 1 bytes @ 0xB
   726     007B                     	ds	1
   727     007C                     ??_Analog_read_percent:
   728                           
   729                           	psect	cstackBANK0
   730     0020                     __pcstackBANK0:	
   731                           ; 1 bytes @ 0xC
   732                           
   733     0020                     ?_AT_command_check:
   734     0020                     ?_LoRa_send_data:	
   735                           ; 1 bytes @ 0x0
   736                           
   737     0020                     ___xxtofl@sign:	
   738                           ; 1 bytes @ 0x0
   739                           
   740     0020                     LoRa_send_data@temperature:	
   741                           ; 1 bytes @ 0x0
   742                           
   743     0020                     AT_command_check@at_command:	
   744                           ; 2 bytes @ 0x0
   745                           
   746     0020                     I2C_SHT4x_read_raw@rx_data:	
   747                           ; 2 bytes @ 0x0
   748                           
   749                           
   750                           ; 6 bytes @ 0x0
   751     0020                     	ds	1
   752     0021                     ___xxtofl@exp:
   753                           
   754                           ; 1 bytes @ 0x1
   755     0021                     	ds	1
   756     0022                     LoRa_send_data@humidity:
   757     0022                     AT_command_check@expected_response:	
   758                           ; 2 bytes @ 0x2
   759                           
   760     0022                     ___xxtofl@arg:	
   761                           ; 2 bytes @ 0x2
   762                           
   763                           
   764                           ; 4 bytes @ 0x2
   765     0022                     	ds	2
   766     0024                     LoRa_send_data@battery:
   767     0024                     AT_command_check@response_size:	
   768                           ; 1 bytes @ 0x4
   769                           
   770                           
   771                           ; 1 bytes @ 0x4
   772     0024                     	ds	1
   773     0025                     ??_LoRa_setup:
   774                           
   775                           ; 1 bytes @ 0x5
   776     0025                     	ds	1
   777     0026                     ?___flmul:
   778     0026                     I2C_SHT4x_read_raw@raw_temp:	
   779                           ; 4 bytes @ 0x6
   780                           
   781     0026                     ___flmul@b:	
   782                           ; 1 bytes @ 0x6
   783                           
   784                           
   785                           ; 4 bytes @ 0x6
   786     0026                     	ds	1
   787     0027                     LoRa_setup@attempts:
   788                           
   789                           ; 1 bytes @ 0x7
   790     0027                     	ds	3
   791     002A                     ___flmul@a:
   792                           
   793                           ; 4 bytes @ 0xA
   794     002A                     	ds	4
   795     002E                     ??___flmul:
   796                           
   797                           ; 1 bytes @ 0xE
   798     002E                     	ds	5
   799     0033                     ___flmul@sign:
   800                           
   801                           ; 1 bytes @ 0x13
   802     0033                     	ds	1
   803     0034                     ___flmul@grs:
   804                           
   805                           ; 4 bytes @ 0x14
   806     0034                     	ds	4
   807     0038                     ___flmul@aexp:
   808                           
   809                           ; 1 bytes @ 0x18
   810     0038                     	ds	1
   811     0039                     ___flmul@bexp:
   812                           
   813                           ; 1 bytes @ 0x19
   814     0039                     	ds	1
   815     003A                     ___flmul@prod:
   816                           
   817                           ; 4 bytes @ 0x1A
   818     003A                     	ds	4
   819     003E                     ___flmul@temp:
   820                           
   821                           ; 2 bytes @ 0x1E
   822     003E                     	ds	2
   823     0040                     ?___fltol:
   824     0040                     ___fltol@f1:	
   825                           ; 4 bytes @ 0x20
   826                           
   827                           
   828                           ; 4 bytes @ 0x20
   829     0040                     	ds	4
   830     0044                     ??___fltol:
   831                           
   832                           ; 1 bytes @ 0x24
   833     0044                     	ds	4
   834     0048                     Analog_read_percent@a:
   835                           
   836                           ; 2 bytes @ 0x28
   837     0048                     	ds	2
   838     004A                     Analog_read_percent@voltage:
   839                           
   840                           ; 2 bytes @ 0x2A
   841     004A                     	ds	2
   842     004C                     Analog_read_percent@batt_voltage:
   843                           
   844                           ; 2 bytes @ 0x2C
   845     004C                     	ds	2
   846     004E                     Analog_read_percent@percent:
   847                           
   848                           ; 1 bytes @ 0x2E
   849     004E                     	ds	1
   850     004F                     ??_main:
   851                           
   852                           ; 1 bytes @ 0x2F
   853     004F                     	ds	2
   854     0051                     main@battery:
   855                           
   856                           ; 1 bytes @ 0x31
   857     0051                     	ds	1
   858     0052                     main@sleep_counter:
   859                           
   860                           ; 1 bytes @ 0x32
   861     0052                     	ds	1
   862     0053                     main@rawtemp:
   863                           
   864                           ; 2 bytes @ 0x33
   865     0053                     	ds	2
   866     0055                     main@rawhum:
   867                           
   868                           ; 2 bytes @ 0x35
   869     0055                     	ds	2
   870                           
   871                           	psect	maintext
   872     0327                     __pmaintext:	
   873 ;;
   874 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   875 ;;
   876 ;; *************** function _main *****************
   877 ;; Defined at:
   878 ;;		line 120 in file "main.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  rawhum          2   53[BANK0 ] unsigned short 
   883 ;;  rawtemp         2   51[BANK0 ] unsigned short 
   884 ;;  sleep_counte    1   50[BANK0 ] unsigned char 
   885 ;;  battery         1   49[BANK0 ] unsigned char 
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : B3F/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   895 ;;      Params:         0       0       0       0       0       0       0       0
   896 ;;      Locals:         0       6       0       0       0       0       0       0
   897 ;;      Temps:          0       2       0       0       0       0       0       0
   898 ;;      Totals:         0       8       0       0       0       0       0       0
   899 ;;Total ram usage:        8 bytes
   900 ;; Hardware stack levels required when called: 5
   901 ;; This function calls:
   902 ;;		_AT_command
   903 ;;		_AT_command_check
   904 ;;		_Analog_read_percent
   905 ;;		_Analog_setup
   906 ;;		_EUSART_clear_buffer
   907 ;;		_EUSART_setup
   908 ;;		_I2C_SHT4x_read_raw
   909 ;;		_I2C_setup
   910 ;;		_I2C_setup_slave
   911 ;;		_LoRa_send_data
   912 ;;		_LoRa_setup
   913 ;;		_SLEEP_start
   914 ;;		_WDT_setup
   915 ;;		_remote_check
   916 ;; This function is called by:
   917 ;;		Startup code after reset
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921     0327                     _main:	
   922                           ;psect for function _main
   923                           
   924     0327                     l2129:	
   925                           ;incstack = 0
   926                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   927                           
   928                           
   929                           ;main.c: 122:     INTCONbits.PEIE = 1;
   930     0327  170B               	bsf	11,6	;volatile
   931                           
   932                           ;main.c: 123:     INTCONbits.GIE = 1;
   933     0328  178B               	bsf	11,7	;volatile
   934     0329                     l2131:
   935                           
   936                           ;main.c: 126:     TRISA &= !(1<<0);
   937     0329  0140               	movlb	0	; select bank0
   938     032A  0192               	clrf	18	;volatile
   939                           
   940                           ;main.c: 128:     ANSELA = 0x0;
   941     032B  017E               	movlb	62	; select bank62
   942     032C  01B8               	clrf	56	;volatile
   943     032D                     l2133:
   944                           
   945                           ;main.c: 131:     if(remote_check()){
   946     032D  3186  26B5  3183   	fcall	_remote_check
   947     0330  0871               	movf	?_remote_check,w
   948     0331  0472               	iorwf	?_remote_check+1,w
   949     0332  1903               	btfsc	3,2
   950     0333  2B35               	goto	u1681
   951     0334  2B36               	goto	u1680
   952     0335                     u1681:
   953     0335  2B48               	goto	l2141
   954     0336                     u1680:
   955     0336                     l2135:
   956                           
   957                           ;main.c: 133:         I2C_setup_slave(0x30);
   958     0336  3030               	movlw	48
   959     0337  3186  263A  3183   	fcall	_I2C_setup_slave
   960     033A                     l2137:
   961                           
   962                           ;main.c: 136:             PORTA ^= (1<<0);
   963     033A  3001               	movlw	1
   964     033B  0140               	movlb	0	; select bank0
   965     033C  00CF               	movwf	??_main
   966     033D  084F               	movf	??_main,w
   967     033E  068C               	xorwf	12,f	;volatile
   968     033F                     l2139:
   969                           
   970                           ;main.c: 137:             _delay((unsigned long)((500)*(1000000/4000.0)));
   971     033F  30A3               	movlw	163
   972     0340  0140               	movlb	0	; select bank0
   973     0341  00CF               	movwf	??_main
   974     0342  3055               	movlw	85
   975     0343                     u1717:
   976     0343  0B89               	decfsz	9,f
   977     0344  2B43               	goto	u1717
   978     0345  0BCF               	decfsz	??_main,f
   979     0346  2B43               	goto	u1717
   980     0347  2B3A               	goto	l2137
   981     0348                     l2141:
   982                           
   983                           ;main.c: 143:     I2C_setup();
   984     0348  3186  2680  3183   	fcall	_I2C_setup
   985                           
   986                           ;main.c: 147:     EUSART_setup();
   987     034B  3187  2708  3183   	fcall	_EUSART_setup
   988     034E                     l2143:
   989                           
   990                           ;main.c: 148:     EUSART_clear_buffer(RX_buffer, 80);
   991     034E  3050               	movlw	80
   992     034F  00F1               	movwf	EUSART_clear_buffer@size
   993     0350  30A0               	movlw	(low (_RX_buffer| 0))& (0+255)
   994     0351  3186  26CB  3183   	fcall	_EUSART_clear_buffer
   995     0354                     l2145:
   996                           
   997                           ;main.c: 151:     Analog_setup();
   998     0354  3187  271C  3183   	fcall	_Analog_setup
   999     0357                     l2147:
  1000                           
  1001                           ;main.c: 155:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  1002     0357  3002               	movlw	2
  1003     0358  0140               	movlb	0	; select bank0
  1004     0359  00D0               	movwf	??_main+1
  1005     035A  3045               	movlw	69
  1006     035B  00CF               	movwf	??_main
  1007     035C  30A9               	movlw	169
  1008     035D                     u1727:
  1009     035D  0B89               	decfsz	9,f
  1010     035E  2B5D               	goto	u1727
  1011     035F  0BCF               	decfsz	??_main,f
  1012     0360  2B5D               	goto	u1727
  1013     0361  0BD0               	decfsz	??_main+1,f
  1014     0362  2B5D               	goto	u1727
  1015     0363  3200               	nop2
  1016     0364                     l2149:
  1017                           
  1018                           ;main.c: 156:     LoRa_setup();
  1019     0364  3184  24F9  3183   	fcall	_LoRa_setup
  1020     0367                     l2151:
  1021                           
  1022                           ;main.c: 161:     WDT_setup();
  1023     0367  3187  27A2  3183   	fcall	_WDT_setup
  1024     036A                     l2153:
  1025                           
  1026                           ;main.c: 164:     uint8_t sleep_counter = 0;
  1027     036A  0140               	movlb	0	; select bank0
  1028     036B  01D2               	clrf	main@sleep_counter
  1029     036C                     l2155:
  1030                           
  1031                           ;main.c: 176:         AT_command("AT+LOWPOWER");
  1032     036C  3035               	movlw	low (STR_13| (0+32768))
  1033     036D  00F8               	movwf	AT_command@at_command
  1034     036E  3087               	movlw	high (STR_13| (0+32768))
  1035     036F  00F9               	movwf	AT_command@at_command+1
  1036     0370  3186  26E0  3183   	fcall	_AT_command
  1037     0373                     l2157:
  1038                           
  1039                           ;main.c: 177:         SLEEP_start();
  1040     0373  3187  27B7  3183   	fcall	_SLEEP_start
  1041     0376                     l2159:
  1042                           
  1043                           ;main.c: 183:         sleep_counter++;
  1044     0376  3001               	movlw	1
  1045     0377  0140               	movlb	0	; select bank0
  1046     0378  00CF               	movwf	??_main
  1047     0379  084F               	movf	??_main,w
  1048     037A  07D2               	addwf	main@sleep_counter,f
  1049     037B                     l2161:
  1050                           
  1051                           ;main.c: 185:         if(sleep_counter >= 1){
  1052     037B  0852               	movf	main@sleep_counter,w
  1053     037C  1903               	btfsc	3,2
  1054     037D  2B7F               	goto	u1691
  1055     037E  2B80               	goto	u1690
  1056     037F                     u1691:
  1057     037F  2B6C               	goto	l2155
  1058     0380                     u1690:
  1059     0380                     l2163:
  1060                           
  1061                           ;main.c: 187:             sleep_counter = 0;
  1062     0380  01D2               	clrf	main@sleep_counter
  1063     0381                     l2165:
  1064                           
  1065                           ;main.c: 189:             AT_command("Wake up !!");
  1066     0381  3059               	movlw	low (STR_1| (0+32768))
  1067     0382  00F8               	movwf	AT_command@at_command
  1068     0383  3087               	movlw	high (STR_1| (0+32768))
  1069     0384  00F9               	movwf	AT_command@at_command+1
  1070     0385  3186  26E0  3183   	fcall	_AT_command
  1071     0388                     l2167:
  1072                           
  1073                           ;main.c: 191:             if(!AT_command_check("AT+JOIN", "+JOIN: Joined already", 21)){
  1074     0388  308C               	movlw	low (STR_7| (0+32768))
  1075     0389  0140               	movlb	0	; select bank0
  1076     038A  00A0               	movwf	AT_command_check@at_command
  1077     038B  3087               	movlw	high (STR_7| (0+32768))
  1078     038C  00A1               	movwf	AT_command_check@at_command+1
  1079     038D  30DA               	movlw	low (STR_8| (0+32768))
  1080     038E  00A2               	movwf	AT_command_check@expected_response
  1081     038F  3085               	movlw	high (STR_8| (0+32768))
  1082     0390  00A3               	movwf	AT_command_check@expected_response+1
  1083     0391  3015               	movlw	21
  1084     0392  00A4               	movwf	AT_command_check@response_size
  1085     0393  3184  2498  3183   	fcall	_AT_command_check
  1086     0396  3A00               	xorlw	0
  1087     0397  1D03               	skipz
  1088     0398  2B9A               	goto	u1701
  1089     0399  2B9B               	goto	u1700
  1090     039A                     u1701:
  1091     039A  2BA2               	goto	l2175
  1092     039B                     u1700:
  1093     039B                     l2169:
  1094                           
  1095                           ;main.c: 193:                 PORTA |= (1<<0);
  1096     039B  0140               	movlb	0	; select bank0
  1097     039C  140C               	bsf	12,0	;volatile
  1098     039D                     l2171:
  1099                           
  1100                           ;main.c: 194:                 LoRa_setup();
  1101     039D  3184  24F9  3183   	fcall	_LoRa_setup
  1102     03A0                     l2173:
  1103                           
  1104                           ;main.c: 195:                 PORTA &= !(1<<0);
  1105     03A0  0140               	movlb	0	; select bank0
  1106     03A1  018C               	clrf	12	;volatile
  1107     03A2                     l2175:
  1108                           
  1109                           ;main.c: 200:             I2C_SHT4x_read_raw(&rawtemp, &rawhum);
  1110     03A2  3055               	movlw	(low (main@rawhum| 0))& (0+255)
  1111     03A3  00F8               	movwf	I2C_SHT4x_read_raw@raw_rh
  1112     03A4  3053               	movlw	(low (main@rawtemp| 0))& (0+255)
  1113     03A5  3185  25A3  3183   	fcall	_I2C_SHT4x_read_raw
  1114     03A8                     l2177:
  1115                           
  1116                           ;main.c: 201:             battery = Analog_read_percent();
  1117     03A8  3184  242E  3183   	fcall	_Analog_read_percent
  1118     03AB  0140               	movlb	0	; select bank0
  1119     03AC  00D1               	movwf	main@battery
  1120     03AD                     l2179:
  1121                           
  1122                           ;main.c: 205:             LoRa_send_data(rawtemp, rawhum, battery);
  1123     03AD  0854               	movf	main@rawtemp+1,w
  1124     03AE  00A1               	movwf	LoRa_send_data@temperature+1
  1125     03AF  0853               	movf	main@rawtemp,w
  1126     03B0  00A0               	movwf	LoRa_send_data@temperature
  1127     03B1  0856               	movf	main@rawhum+1,w
  1128     03B2  00A3               	movwf	LoRa_send_data@humidity+1
  1129     03B3  0855               	movf	main@rawhum,w
  1130     03B4  00A2               	movwf	LoRa_send_data@humidity
  1131     03B5  0851               	movf	main@battery,w
  1132     03B6  00A4               	movwf	LoRa_send_data@battery
  1133     03B7  3185  2576  3183   	fcall	_LoRa_send_data
  1134     03BA  2B6C               	goto	l2155
  1135     03BB  3180  2832         	ljmp	start
  1136     03BD                     __end_of_main:
  1137                           
  1138                           	psect	text1
  1139     06B5                     __ptext1:	
  1140 ;; *************** function _remote_check *****************
  1141 ;; Defined at:
  1142 ;;		line 4 in file "./remote_mode_driver.h"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;		None
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;		None
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  2    1[COMMON] int 
  1149 ;; Registers used:
  1150 ;;		wreg, status,2
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1156 ;;      Params:         2       0       0       0       0       0       0       0
  1157 ;;      Locals:         0       0       0       0       0       0       0       0
  1158 ;;      Temps:          0       0       0       0       0       0       0       0
  1159 ;;      Totals:         2       0       0       0       0       0       0       0
  1160 ;;Total ram usage:        2 bytes
  1161 ;; Hardware stack levels used: 1
  1162 ;; Hardware stack levels required when called: 1
  1163 ;; This function calls:
  1164 ;;		Nothing
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170     06B5                     _remote_check:	
  1171                           ;psect for function _remote_check
  1172                           
  1173     06B5                     l1895:	
  1174                           ;incstack = 0
  1175                           ; Regs used in _remote_check: [wreg+status,2]
  1176                           
  1177                           
  1178                           ;./remote_mode_driver.h: 5:     TRISAbits.TRISA1 = 1;
  1179     06B5  0140               	movlb	0	; select bank0
  1180     06B6  1492               	bsf	18,1	;volatile
  1181                           
  1182                           ;./remote_mode_driver.h: 6:     TRISAbits.TRISA2 = 0;
  1183     06B7  1112               	bcf	18,2	;volatile
  1184                           
  1185                           ;./remote_mode_driver.h: 9:     if (PORTAbits.RA1 == 0){
  1186     06B8  188C               	btfsc	12,1	;volatile
  1187     06B9  2EBB               	goto	u1481
  1188     06BA  2EBC               	goto	u1480
  1189     06BB                     u1481:
  1190     06BB  2EC8               	goto	l1903
  1191     06BC                     u1480:
  1192     06BC                     l1897:
  1193                           
  1194                           ;./remote_mode_driver.h: 11:         PORTAbits.RA2 = 0;
  1195     06BC  110C               	bcf	12,2	;volatile
  1196                           
  1197                           ;./remote_mode_driver.h: 12:         while(PORTAbits.RA1 == 0){
  1198     06BD  2EBF               	goto	l218
  1199     06BE                     l219:
  1200                           
  1201                           ;./remote_mode_driver.h: 14:             PORTAbits.RA2 = 1;
  1202     06BE  150C               	bsf	12,2	;volatile
  1203     06BF                     l218:	
  1204                           ;./remote_mode_driver.h: 15:         }
  1205                           
  1206                           
  1207                           ;./remote_mode_driver.h: 12:         while(PORTAbits.RA1 == 0){
  1208     06BF  1C8C               	btfss	12,1	;volatile
  1209     06C0  2EC2               	goto	u1491
  1210     06C1  2EC3               	goto	u1490
  1211     06C2                     u1491:
  1212     06C2  2EBE               	goto	l219
  1213     06C3                     u1490:
  1214     06C3                     l1899:
  1215                           
  1216                           ;./remote_mode_driver.h: 16:         return 1;
  1217     06C3  3001               	movlw	1
  1218     06C4  00F1               	movwf	?_remote_check
  1219     06C5  3000               	movlw	0
  1220     06C6  00F2               	movwf	?_remote_check+1
  1221     06C7  2ECA               	goto	l221
  1222     06C8                     l1903:
  1223                           
  1224                           ;./remote_mode_driver.h: 19:     return 0;
  1225     06C8  01F1               	clrf	?_remote_check
  1226     06C9  01F2               	clrf	?_remote_check+1
  1227     06CA                     l221:
  1228     06CA  0008               	return
  1229     06CB                     __end_of_remote_check:
  1230                           
  1231                           	psect	text2
  1232     07A2                     __ptext2:	
  1233 ;; *************** function _WDT_setup *****************
  1234 ;; Defined at:
  1235 ;;		line 4 in file "./watchdog_driver.h"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2, status,0
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1249 ;;      Params:         0       0       0       0       0       0       0       0
  1250 ;;      Locals:         0       0       0       0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0       0       0       0
  1252 ;;      Totals:         0       0       0       0       0       0       0       0
  1253 ;;Total ram usage:        0 bytes
  1254 ;; Hardware stack levels used: 1
  1255 ;; Hardware stack levels required when called: 1
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263     07A2                     _WDT_setup:	
  1264                           ;psect for function _WDT_setup
  1265                           
  1266     07A2                     l1771:	
  1267                           ;incstack = 0
  1268                           ; Regs used in _WDT_setup: [wreg+status,2+status,0]
  1269                           
  1270                           
  1271                           ;./watchdog_driver.h: 8:     WDTCONbits.PS = 0b10000;
  1272     07A2  0150               	movlb	16	; select bank16
  1273     07A3  080C               	movf	12,w	;volatile
  1274     07A4  39C1               	andlw	-63
  1275     07A5  3820               	iorlw	32
  1276     07A6  008C               	movwf	12	;volatile
  1277     07A7                     l81:
  1278     07A7  0008               	return
  1279     07A8                     __end_of_WDT_setup:
  1280                           
  1281                           	psect	text3
  1282     07B7                     __ptext3:	
  1283 ;; *************** function _SLEEP_start *****************
  1284 ;; Defined at:
  1285 ;;		line 11 in file "./watchdog_driver.h"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		None
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1299 ;;      Params:         0       0       0       0       0       0       0       0
  1300 ;;      Locals:         0       0       0       0       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0       0
  1302 ;;      Totals:         0       0       0       0       0       0       0       0
  1303 ;;Total ram usage:        0 bytes
  1304 ;; Hardware stack levels used: 1
  1305 ;; Hardware stack levels required when called: 1
  1306 ;; This function calls:
  1307 ;;		Nothing
  1308 ;; This function is called by:
  1309 ;;		_main
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313     07B7                     _SLEEP_start:	
  1314                           ;psect for function _SLEEP_start
  1315                           
  1316     07B7                     l1773:	
  1317                           ;incstack = 0
  1318                           ; Regs used in _SLEEP_start: []
  1319                           
  1320     07B7  0064               	clrwdt	;# 
  1321     07B8  0063               	sleep	;# 
  1322     07B9                     l84:
  1323     07B9  0008               	return
  1324     07BA                     __end_of_SLEEP_start:
  1325                           
  1326                           	psect	text4
  1327     04F9                     __ptext4:	
  1328 ;; *************** function _LoRa_setup *****************
  1329 ;; Defined at:
  1330 ;;		line 12 in file "./lora_driver.h"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;		None
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  attempts        1    7[BANK0 ] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      unsigned char 
  1337 ;; Registers used:
  1338 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1344 ;;      Params:         0       0       0       0       0       0       0       0
  1345 ;;      Locals:         0       1       0       0       0       0       0       0
  1346 ;;      Temps:          0       2       0       0       0       0       0       0
  1347 ;;      Totals:         0       3       0       0       0       0       0       0
  1348 ;;Total ram usage:        3 bytes
  1349 ;; Hardware stack levels used: 1
  1350 ;; Hardware stack levels required when called: 4
  1351 ;; This function calls:
  1352 ;;		_AT_command
  1353 ;;		_AT_command_check
  1354 ;;		_EUSART_print
  1355 ;; This function is called by:
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360     04F9                     _LoRa_setup:	
  1361                           ;psect for function _LoRa_setup
  1362                           
  1363     04F9                     l2093:	
  1364                           ;incstack = 0
  1365                           ; Regs used in _LoRa_setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1366                           
  1367                           
  1368                           ;./lora_driver.h: 14:     AT_command("Wake up !!");
  1369     04F9  3059               	movlw	low (STR_1| (0+32768))
  1370     04FA  00F8               	movwf	AT_command@at_command
  1371     04FB  3087               	movlw	high (STR_1| (0+32768))
  1372     04FC  00F9               	movwf	AT_command@at_command+1
  1373     04FD  3186  26E0  3184   	fcall	_AT_command
  1374     0500                     l2095:
  1375                           
  1376                           ;./lora_driver.h: 16:     if(!AT_command_check("AT", "+AT: OK", 7)){
  1377     0500  30B4               	movlw	low (STR_2| (0+32768))
  1378     0501  0140               	movlb	0	; select bank0
  1379     0502  00A0               	movwf	AT_command_check@at_command
  1380     0503  3087               	movlw	high (STR_2| (0+32768))
  1381     0504  00A1               	movwf	AT_command_check@at_command+1
  1382     0505  3084               	movlw	low (STR_3| (0+32768))
  1383     0506  00A2               	movwf	AT_command_check@expected_response
  1384     0507  3087               	movlw	high (STR_3| (0+32768))
  1385     0508  00A3               	movwf	AT_command_check@expected_response+1
  1386     0509  3007               	movlw	7
  1387     050A  00A4               	movwf	AT_command_check@response_size
  1388     050B  3184  2498  3184   	fcall	_AT_command_check
  1389     050E  3A00               	xorlw	0
  1390     050F  1D03               	skipz
  1391     0510  2D12               	goto	u1661
  1392     0511  2D13               	goto	u1660
  1393     0512                     u1661:
  1394     0512  2D1A               	goto	l2099
  1395     0513                     u1660:
  1396     0513                     l2097:
  1397                           
  1398                           ;./lora_driver.h: 17:         EUSART_print("RX/TX Fail");
  1399     0513  306F               	movlw	low (STR_6| (0+32768))
  1400     0514  00F2               	movwf	EUSART_print@string
  1401     0515  3087               	movlw	high (STR_6| (0+32768))
  1402     0516  00F3               	movwf	EUSART_print@string+1
  1403     0517  3185  25F0  3184   	fcall	_EUSART_print
  1404     051A                     l2099:
  1405                           
  1406                           ;./lora_driver.h: 21:     while((!AT_command_check("AT+JOIN", "+JOIN: Joined already", 2
      +                          1))){
  1407     051A  2D2D               	goto	l2109
  1408     051B                     l2101:
  1409                           
  1410                           ;./lora_driver.h: 22:         if(attempts = 0){
  1411     051B  0140               	movlb	0	; select bank0
  1412     051C  01A7               	clrf	LoRa_setup@attempts
  1413     051D                     l2105:
  1414                           
  1415                           ;./lora_driver.h: 25:         _delay((unsigned long)((20000)*(1000000/4000.0)));
  1416     051D  301A               	movlw	26
  1417     051E  0140               	movlb	0	; select bank0
  1418     051F  00A6               	movwf	??_LoRa_setup+1
  1419     0520  305E               	movlw	94
  1420     0521  00A5               	movwf	??_LoRa_setup
  1421     0522  306E               	movlw	110
  1422     0523                     u1737:
  1423     0523  0B89               	decfsz	9,f
  1424     0524  2D23               	goto	u1737
  1425     0525  0BA5               	decfsz	??_LoRa_setup,f
  1426     0526  2D23               	goto	u1737
  1427     0527  0BA6               	decfsz	??_LoRa_setup+1,f
  1428     0528  2D23               	goto	u1737
  1429     0529  0000               	nop
  1430     052A                     l2107:
  1431                           
  1432                           ;./lora_driver.h: 26:         attempts --;
  1433     052A  3001               	movlw	1
  1434     052B  0140               	movlb	0	; select bank0
  1435     052C  02A7               	subwf	LoRa_setup@attempts,f
  1436     052D                     l2109:
  1437                           
  1438                           ;./lora_driver.h: 21:     while((!AT_command_check("AT+JOIN", "+JOIN: Joined already", 2
      +                          1))){
  1439     052D  308C               	movlw	low (STR_7| (0+32768))
  1440     052E  0140               	movlb	0	; select bank0
  1441     052F  00A0               	movwf	AT_command_check@at_command
  1442     0530  3087               	movlw	high (STR_7| (0+32768))
  1443     0531  00A1               	movwf	AT_command_check@at_command+1
  1444     0532  30DA               	movlw	low (STR_8| (0+32768))
  1445     0533  00A2               	movwf	AT_command_check@expected_response
  1446     0534  3085               	movlw	high (STR_8| (0+32768))
  1447     0535  00A3               	movwf	AT_command_check@expected_response+1
  1448     0536  3015               	movlw	21
  1449     0537  00A4               	movwf	AT_command_check@response_size
  1450     0538  3184  2498  3184   	fcall	_AT_command_check
  1451     053B  3A00               	xorlw	0
  1452     053C  1903               	skipnz
  1453     053D  2D3F               	goto	u1671
  1454     053E  2D40               	goto	u1670
  1455     053F                     u1671:
  1456     053F  2D1B               	goto	l2101
  1457     0540                     u1670:
  1458     0540                     l2111:
  1459                           
  1460                           ;./lora_driver.h: 28:     EUSART_print("Connected !");
  1461     0540  3029               	movlw	low (STR_11| (0+32768))
  1462     0541  00F2               	movwf	EUSART_print@string
  1463     0542  3087               	movlw	high (STR_11| (0+32768))
  1464     0543  00F3               	movwf	EUSART_print@string+1
  1465     0544  3185  25F0  3184   	fcall	_EUSART_print
  1466     0547                     l194:
  1467     0547  0008               	return
  1468     0548                     __end_of_LoRa_setup:
  1469                           
  1470                           	psect	text5
  1471     0498                     __ptext5:	
  1472 ;; *************** function _AT_command_check *****************
  1473 ;; Defined at:
  1474 ;;		line 47 in file "./lora_driver.h"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  at_command      2    0[BANK0 ] PTR const unsigned char 
  1477 ;;		 -> STR_17(8), STR_9(8), STR_4(3), 
  1478 ;;  expected_res    2    2[BANK0 ] PTR const unsigned char 
  1479 ;;		 -> STR_18(22), STR_10(22), STR_5(8), 
  1480 ;;  response_siz    1    4[BANK0 ] unsigned char 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  i               1   11[COMMON] unsigned char 
  1483 ;;  tmp             1    0        unsigned char 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      unsigned char 
  1486 ;; Registers used:
  1487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1493 ;;      Params:         0       5       0       0       0       0       0       0
  1494 ;;      Locals:         1       0       0       0       0       0       0       0
  1495 ;;      Temps:          3       0       0       0       0       0       0       0
  1496 ;;      Totals:         4       5       0       0       0       0       0       0
  1497 ;;Total ram usage:        9 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; Hardware stack levels required when called: 3
  1500 ;; This function calls:
  1501 ;;		_EUSART_clear_buffer
  1502 ;;		_EUSART_print
  1503 ;;		_EUSART_write
  1504 ;; This function is called by:
  1505 ;;		_LoRa_setup
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510     0498                     _AT_command_check:	
  1511                           ;psect for function _AT_command_check
  1512                           
  1513     0498                     l2059:	
  1514                           ;incstack = 0
  1515                           ; Regs used in _AT_command_check: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1516                           
  1517                           
  1518                           ;./lora_driver.h: 49:     EUSART_clear_buffer(RX_buffer, 80);
  1519     0498  3050               	movlw	80
  1520     0499  00F1               	movwf	EUSART_clear_buffer@size
  1521     049A  30A0               	movlw	(low (_RX_buffer| 0))& (0+255)
  1522     049B  3186  26CB  3184   	fcall	_EUSART_clear_buffer
  1523     049E                     l2061:
  1524                           
  1525                           ;./lora_driver.h: 50:     RX_index = 0;
  1526     049E  01FC               	clrf	_RX_index
  1527                           
  1528                           ;./lora_driver.h: 52:     uint8_t tmp;;./lora_driver.h: 53:     while(PIR1bits.RC1IF){
  1529     049F  2CA2               	goto	l2065
  1530     04A0                     l2063:
  1531     04A0  0142               	movlb	2	; select bank2
  1532     04A1  0819               	movf	25,w	;volatile
  1533     04A2                     l2065:
  1534                           
  1535                           ;./lora_driver.h: 53:     while(PIR1bits.RC1IF){
  1536     04A2  014E               	movlb	14	; select bank14
  1537     04A3  1A0D               	btfsc	13,4	;volatile
  1538     04A4  2CA6               	goto	u1621
  1539     04A5  2CA7               	goto	u1620
  1540     04A6                     u1621:
  1541     04A6  2CA0               	goto	l2063
  1542     04A7                     u1620:
  1543     04A7                     l203:
  1544                           
  1545                           ;./lora_driver.h: 56:     RC1STAbits.CREN = 0;
  1546     04A7  0142               	movlb	2	; select bank2
  1547     04A8  121D               	bcf	29,4	;volatile
  1548                           
  1549                           ;./lora_driver.h: 57:     RC1STAbits.CREN = 1;
  1550     04A9  161D               	bsf	29,4	;volatile
  1551                           
  1552                           ;./lora_driver.h: 59:     PIE1bits.RC1IE = 1;
  1553     04AA  014E               	movlb	14	; select bank14
  1554     04AB  1617               	bsf	23,4	;volatile
  1555     04AC                     l2067:
  1556                           
  1557                           ;./lora_driver.h: 61:     EUSART_print(at_command);
  1558     04AC  0140               	movlb	0	; select bank0
  1559     04AD  0821               	movf	AT_command_check@at_command+1,w
  1560     04AE  00F3               	movwf	EUSART_print@string+1
  1561     04AF  0820               	movf	AT_command_check@at_command,w
  1562     04B0  00F2               	movwf	EUSART_print@string
  1563     04B1  3185  25F0  3184   	fcall	_EUSART_print
  1564     04B4                     l2069:
  1565                           
  1566                           ;./lora_driver.h: 62:     EUSART_write(0x0A);
  1567     04B4  300A               	movlw	10
  1568     04B5  3187  277A  3184   	fcall	_EUSART_write
  1569     04B8                     l2071:	
  1570                           ;./lora_driver.h: 65:     while(RX_index < response_size+2);
  1571                           
  1572     04B8  0140               	movlb	0	; select bank0
  1573     04B9  0824               	movf	AT_command_check@response_size,w
  1574     04BA  3E02               	addlw	2
  1575     04BB  00F8               	movwf	??_AT_command_check
  1576     04BC  3000               	movlw	0
  1577     04BD  1803               	skipnc
  1578     04BE  3001               	movlw	1
  1579     04BF  00F9               	movwf	??_AT_command_check+1
  1580     04C0  0879               	movf	??_AT_command_check+1,w
  1581     04C1  3A80               	xorlw	128
  1582     04C2  3C80               	sublw	128
  1583     04C3  1D03               	skipz
  1584     04C4  2CC7               	goto	u1635
  1585     04C5  0878               	movf	??_AT_command_check,w
  1586     04C6  027C               	subwf	_RX_index,w
  1587     04C7                     u1635:
  1588     04C7  1C03               	skipc
  1589     04C8  2CCA               	goto	u1631
  1590     04C9  2CCB               	goto	u1630
  1591     04CA                     u1631:
  1592     04CA  2CB8               	goto	l2071
  1593     04CB                     u1630:
  1594     04CB                     l2073:
  1595                           
  1596                           ;./lora_driver.h: 66:     _delay((unsigned long)((5)*(1000000/4000.0)));
  1597     04CB  30FA               	movlw	250
  1598     04CC                     u1747:
  1599     04CC  3200               	nop2
  1600     04CD  0B89               	decfsz	9,f
  1601     04CE  2CCC               	goto	u1747
  1602     04CF                     l2075:
  1603                           
  1604                           ;./lora_driver.h: 68:     PIE1bits.RC1IE = 0;
  1605     04CF  014E               	movlb	14	; select bank14
  1606     04D0  1217               	bcf	23,4	;volatile
  1607     04D1                     l2077:
  1608                           
  1609                           ;./lora_driver.h: 69:     for(uint8_t i=0; i<response_size; i++){
  1610     04D1  01FB               	clrf	AT_command_check@i
  1611     04D2  2CF0               	goto	l2087
  1612     04D3                     l2079:
  1613                           
  1614                           ;./lora_driver.h: 71:         if(RX_buffer[i] != expected_response[i]){
  1615     04D3  0823               	movf	AT_command_check@expected_response+1,w
  1616     04D4  00F9               	movwf	??_AT_command_check+1
  1617     04D5  0822               	movf	AT_command_check@expected_response,w
  1618     04D6  00F8               	movwf	??_AT_command_check
  1619     04D7  087B               	movf	AT_command_check@i,w
  1620     04D8  0778               	addwf	??_AT_command_check,w
  1621     04D9  0084               	movwf	4
  1622     04DA  0879               	movf	??_AT_command_check+1,w
  1623     04DB  1803               	skipnc
  1624     04DC  0A79               	incf	??_AT_command_check+1,w
  1625     04DD  0085               	movwf	5
  1626     04DE  0800               	movf	0,w	;code access
  1627     04DF  00FA               	movwf	??_AT_command_check+2
  1628     04E0  087B               	movf	AT_command_check@i,w
  1629     04E1  3EA0               	addlw	(low (_RX_buffer| 0))& (0+255)
  1630     04E2  0086               	movwf	6
  1631     04E3  0187               	clrf	7
  1632     04E4  0801               	movf	1,w
  1633     04E5  067A               	xorwf	??_AT_command_check+2,w
  1634     04E6  1903               	skipnz
  1635     04E7  2CE9               	goto	u1641
  1636     04E8  2CEA               	goto	u1640
  1637     04E9                     u1641:
  1638     04E9  2CEC               	goto	l2085
  1639     04EA                     u1640:
  1640     04EA                     l2081:
  1641                           
  1642                           ;./lora_driver.h: 72:             return 0;
  1643     04EA  3000               	movlw	0
  1644     04EB  2CF8               	goto	l210
  1645     04EC                     l2085:
  1646                           
  1647                           ;./lora_driver.h: 74:     }
  1648     04EC  3001               	movlw	1
  1649     04ED  00F8               	movwf	??_AT_command_check
  1650     04EE  0878               	movf	??_AT_command_check,w
  1651     04EF  07FB               	addwf	AT_command_check@i,f
  1652     04F0                     l2087:
  1653     04F0  0140               	movlb	0	; select bank0
  1654     04F1  0824               	movf	AT_command_check@response_size,w
  1655     04F2  027B               	subwf	AT_command_check@i,w
  1656     04F3  1C03               	skipc
  1657     04F4  2CF6               	goto	u1651
  1658     04F5  2CF7               	goto	u1650
  1659     04F6                     u1651:
  1660     04F6  2CD3               	goto	l2079
  1661     04F7                     u1650:
  1662     04F7                     l2089:
  1663                           
  1664                           ;./lora_driver.h: 75:     return 1;
  1665     04F7  3001               	movlw	1
  1666     04F8                     l210:
  1667     04F8  0008               	return
  1668     04F9                     __end_of_AT_command_check:
  1669                           
  1670                           	psect	text6
  1671     06CB                     __ptext6:	
  1672 ;; *************** function _EUSART_clear_buffer *****************
  1673 ;; Defined at:
  1674 ;;		line 69 in file "./eusart_driver.h"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  buffer          1    wreg     PTR unsigned char 
  1677 ;;		 -> RX_buffer(80), 
  1678 ;;  size            1    1[COMMON] unsigned char 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  buffer          1    3[COMMON] PTR unsigned char 
  1681 ;;		 -> RX_buffer(80), 
  1682 ;;  i               1    4[COMMON] unsigned char 
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  1    wreg      void 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1692 ;;      Params:         1       0       0       0       0       0       0       0
  1693 ;;      Locals:         2       0       0       0       0       0       0       0
  1694 ;;      Temps:          1       0       0       0       0       0       0       0
  1695 ;;      Totals:         4       0       0       0       0       0       0       0
  1696 ;;Total ram usage:        4 bytes
  1697 ;; Hardware stack levels used: 1
  1698 ;; Hardware stack levels required when called: 1
  1699 ;; This function calls:
  1700 ;;		Nothing
  1701 ;; This function is called by:
  1702 ;;		_AT_command_check
  1703 ;;		_main
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707     06CB                     _EUSART_clear_buffer:	
  1708                           ;psect for function _EUSART_clear_buffer
  1709                           
  1710                           
  1711                           ;incstack = 0
  1712                           ; Regs used in _EUSART_clear_buffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  1713                           ;EUSART_clear_buffer@buffer stored from wreg
  1714     06CB  00F3               	movwf	EUSART_clear_buffer@buffer
  1715     06CC                     l2037:
  1716                           
  1717                           ;./eusart_driver.h: 70:     for(uint8_t i=0; i<size; i++){
  1718     06CC  01F4               	clrf	EUSART_clear_buffer@i
  1719     06CD  2ED9               	goto	l2043
  1720     06CE                     l2039:
  1721                           
  1722                           ;./eusart_driver.h: 71:         buffer[i] = 0;
  1723     06CE  0874               	movf	EUSART_clear_buffer@i,w
  1724     06CF  0773               	addwf	EUSART_clear_buffer@buffer,w
  1725     06D0  00F2               	movwf	??_EUSART_clear_buffer
  1726     06D1  0872               	movf	??_EUSART_clear_buffer,w
  1727     06D2  0086               	movwf	6
  1728     06D3  0187               	clrf	7
  1729     06D4  0181               	clrf	1
  1730     06D5                     l2041:
  1731                           
  1732                           ;./eusart_driver.h: 72:     }
  1733     06D5  3001               	movlw	1
  1734     06D6  00F2               	movwf	??_EUSART_clear_buffer
  1735     06D7  0872               	movf	??_EUSART_clear_buffer,w
  1736     06D8  07F4               	addwf	EUSART_clear_buffer@i,f
  1737     06D9                     l2043:
  1738     06D9  0871               	movf	EUSART_clear_buffer@size,w
  1739     06DA  0274               	subwf	EUSART_clear_buffer@i,w
  1740     06DB  1C03               	skipc
  1741     06DC  2EDE               	goto	u1601
  1742     06DD  2EDF               	goto	u1600
  1743     06DE                     u1601:
  1744     06DE  2ECE               	goto	l2039
  1745     06DF                     u1600:
  1746     06DF                     l119:
  1747     06DF  0008               	return
  1748     06E0                     __end_of_EUSART_clear_buffer:
  1749                           
  1750                           	psect	text7
  1751     06E0                     __ptext7:	
  1752 ;; *************** function _AT_command *****************
  1753 ;; Defined at:
  1754 ;;		line 78 in file "./lora_driver.h"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;  at_command      2    8[COMMON] PTR const unsigned char 
  1757 ;;		 -> STR_14(11), STR_13(12), STR_1(11), 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1769 ;;      Params:         2       0       0       0       0       0       0       0
  1770 ;;      Locals:         0       0       0       0       0       0       0       0
  1771 ;;      Temps:          1       0       0       0       0       0       0       0
  1772 ;;      Totals:         3       0       0       0       0       0       0       0
  1773 ;;Total ram usage:        3 bytes
  1774 ;; Hardware stack levels used: 1
  1775 ;; Hardware stack levels required when called: 3
  1776 ;; This function calls:
  1777 ;;		_EUSART_print
  1778 ;;		_EUSART_write
  1779 ;; This function is called by:
  1780 ;;		_LoRa_setup
  1781 ;;		_main
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785     06E0                     _AT_command:	
  1786                           ;psect for function _AT_command
  1787                           
  1788     06E0                     l2053:	
  1789                           ;incstack = 0
  1790                           ; Regs used in _AT_command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1791                           
  1792                           
  1793                           ;./lora_driver.h: 79:     EUSART_print(at_command);
  1794     06E0  0879               	movf	AT_command@at_command+1,w
  1795     06E1  00F3               	movwf	EUSART_print@string+1
  1796     06E2  0878               	movf	AT_command@at_command,w
  1797     06E3  00F2               	movwf	EUSART_print@string
  1798     06E4  3185  25F0  3186   	fcall	_EUSART_print
  1799     06E7                     l2055:
  1800                           
  1801                           ;./lora_driver.h: 80:     EUSART_write(0x0A);
  1802     06E7  300A               	movlw	10
  1803     06E8  3187  277A  3186   	fcall	_EUSART_write
  1804     06EB                     l2057:
  1805                           
  1806                           ;./lora_driver.h: 81:     _delay((unsigned long)((20)*(1000000/4000.0)));
  1807     06EB  3007               	movlw	7
  1808     06EC  00FA               	movwf	??_AT_command
  1809     06ED  307D               	movlw	125
  1810     06EE                     u1757:
  1811     06EE  0B89               	decfsz	9,f
  1812     06EF  2EEE               	goto	u1757
  1813     06F0  0BFA               	decfsz	??_AT_command,f
  1814     06F1  2EEE               	goto	u1757
  1815     06F2  0000               	nop
  1816     06F3                     l214:
  1817     06F3  0008               	return
  1818     06F4                     __end_of_AT_command:
  1819                           
  1820                           	psect	text8
  1821     0576                     __ptext8:	
  1822 ;; *************** function _LoRa_send_data *****************
  1823 ;; Defined at:
  1824 ;;		line 32 in file "./lora_driver.h"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  temperature     2    0[BANK0 ] unsigned short 
  1827 ;;  humidity        2    2[BANK0 ] unsigned short 
  1828 ;;  battery         1    4[BANK0 ] unsigned char 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1840 ;;      Params:         0       5       0       0       0       0       0       0
  1841 ;;      Locals:         0       0       0       0       0       0       0       0
  1842 ;;      Temps:          1       0       0       0       0       0       0       0
  1843 ;;      Totals:         1       5       0       0       0       0       0       0
  1844 ;;Total ram usage:        6 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; Hardware stack levels required when called: 3
  1847 ;; This function calls:
  1848 ;;		_EUSART_print
  1849 ;;		_EUSART_print_hex
  1850 ;;		_EUSART_write
  1851 ;; This function is called by:
  1852 ;;		_main
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856     0576                     _LoRa_send_data:	
  1857                           ;psect for function _LoRa_send_data
  1858                           
  1859     0576                     l2115:	
  1860                           ;incstack = 0
  1861                           ; Regs used in _LoRa_send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1862                           
  1863                           
  1864                           ;./lora_driver.h: 33:     EUSART_print("AT+MSGHEX=");
  1865     0576  3064               	movlw	low (STR_12| (0+32768))
  1866     0577  00F2               	movwf	EUSART_print@string
  1867     0578  3087               	movlw	high (STR_12| (0+32768))
  1868     0579  00F3               	movwf	EUSART_print@string+1
  1869     057A  3185  25F0  3185   	fcall	_EUSART_print
  1870                           
  1871                           ;./lora_driver.h: 35:     EUSART_print_hex(temperature&0xFF);
  1872     057D  0140               	movlb	0	; select bank0
  1873     057E  0820               	movf	LoRa_send_data@temperature,w
  1874     057F  3186  2616  3185   	fcall	_EUSART_print_hex
  1875                           
  1876                           ;./lora_driver.h: 36:     EUSART_print_hex((temperature >> 8)&0xFF);
  1877     0582  0140               	movlb	0	; select bank0
  1878     0583  0821               	movf	LoRa_send_data@temperature+1,w
  1879     0584  3186  2616  3185   	fcall	_EUSART_print_hex
  1880                           
  1881                           ;./lora_driver.h: 38:     EUSART_print_hex(humidity&0xFF);
  1882     0587  0140               	movlb	0	; select bank0
  1883     0588  0822               	movf	LoRa_send_data@humidity,w
  1884     0589  3186  2616  3185   	fcall	_EUSART_print_hex
  1885                           
  1886                           ;./lora_driver.h: 39:     EUSART_print_hex((humidity >> 8)&0xFF);
  1887     058C  0140               	movlb	0	; select bank0
  1888     058D  0823               	movf	LoRa_send_data@humidity+1,w
  1889     058E  3186  2616  3185   	fcall	_EUSART_print_hex
  1890                           
  1891                           ;./lora_driver.h: 41:     EUSART_print_hex(battery);
  1892     0591  0140               	movlb	0	; select bank0
  1893     0592  0824               	movf	LoRa_send_data@battery,w
  1894     0593  3186  2616  3185   	fcall	_EUSART_print_hex
  1895     0596                     l2117:
  1896                           
  1897                           ;./lora_driver.h: 43:     EUSART_write(0x0A);
  1898     0596  300A               	movlw	10
  1899     0597  3187  277A  3185   	fcall	_EUSART_write
  1900     059A                     l2119:
  1901                           
  1902                           ;./lora_driver.h: 44:     _delay((unsigned long)((20)*(1000000/4000.0)));
  1903     059A  3007               	movlw	7
  1904     059B  00F8               	movwf	??_LoRa_send_data
  1905     059C  307D               	movlw	125
  1906     059D                     u1767:
  1907     059D  0B89               	decfsz	9,f
  1908     059E  2D9D               	goto	u1767
  1909     059F  0BF8               	decfsz	??_LoRa_send_data,f
  1910     05A0  2D9D               	goto	u1767
  1911     05A1  0000               	nop
  1912     05A2                     l198:
  1913     05A2  0008               	return
  1914     05A3                     __end_of_LoRa_send_data:
  1915                           
  1916                           	psect	text9
  1917     0616                     __ptext9:	
  1918 ;; *************** function _EUSART_print_hex *****************
  1919 ;; Defined at:
  1920 ;;		line 61 in file "./eusart_driver.h"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  number          1    wreg     unsigned char 
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;  number          1    3[COMMON] unsigned char 
  1925 ;;  a               1    4[COMMON] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1935 ;;      Params:         0       0       0       0       0       0       0       0
  1936 ;;      Locals:         2       0       0       0       0       0       0       0
  1937 ;;      Temps:          1       0       0       0       0       0       0       0
  1938 ;;      Totals:         3       0       0       0       0       0       0       0
  1939 ;;Total ram usage:        3 bytes
  1940 ;; Hardware stack levels used: 1
  1941 ;; Hardware stack levels required when called: 2
  1942 ;; This function calls:
  1943 ;;		_EUSART_write
  1944 ;; This function is called by:
  1945 ;;		_LoRa_send_data
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949     0616                     _EUSART_print_hex:	
  1950                           ;psect for function _EUSART_print_hex
  1951                           
  1952                           
  1953                           ;incstack = 0
  1954                           ; Regs used in _EUSART_print_hex: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1955                           ;EUSART_print_hex@number stored from wreg
  1956     0616  00F3               	movwf	EUSART_print_hex@number
  1957     0617                     l2045:
  1958                           
  1959                           ;./eusart_driver.h: 62:     const char ref[] = {'0','1','2','3','4','5','6','7','8','9',
      +                          'A','B','C','D','E','F'};;./eusart_driver.h: 63:     uint8_t a = (number >> 4)&0b0000111
      +                          1;
  1960     0617  0873               	movf	EUSART_print_hex@number,w
  1961     0618  00F2               	movwf	??_EUSART_print_hex
  1962     0619  3004               	movlw	4
  1963     061A                     u1615:
  1964     061A  36F2               	lsrf	??_EUSART_print_hex,f
  1965     061B  0B89               	decfsz	9,f
  1966     061C  2E1A               	goto	u1615
  1967     061D  0872               	movf	??_EUSART_print_hex,w
  1968     061E  390F               	andlw	15
  1969     061F  00F4               	movwf	EUSART_print_hex@a
  1970     0620                     l2047:
  1971                           
  1972                           ;./eusart_driver.h: 64:     EUSART_write(ref[a]);
  1973     0620  0874               	movf	EUSART_print_hex@a,w
  1974     0621  3ECA               	addlw	low (EUSART_print_hex@ref| (0+32768))
  1975     0622  0084               	movwf	4
  1976     0623  3085               	movlw	high (EUSART_print_hex@ref| (0+32768))
  1977     0624  1803               	skipnc
  1978     0625  3E01               	addlw	1
  1979     0626  0085               	movwf	5
  1980     0627  0800               	movf	0,w	;code access
  1981     0628  3187  277A  3186   	fcall	_EUSART_write
  1982     062B                     l2049:
  1983                           
  1984                           ;./eusart_driver.h: 65:     a = number & 0b00001111;
  1985     062B  0873               	movf	EUSART_print_hex@number,w
  1986     062C  390F               	andlw	15
  1987     062D  00F4               	movwf	EUSART_print_hex@a
  1988     062E                     l2051:
  1989                           
  1990                           ;./eusart_driver.h: 66:     EUSART_write(ref[a]);
  1991     062E  0874               	movf	EUSART_print_hex@a,w
  1992     062F  3ECA               	addlw	low (EUSART_print_hex@ref| (0+32768))
  1993     0630  0084               	movwf	4
  1994     0631  3085               	movlw	high (EUSART_print_hex@ref| (0+32768))
  1995     0632  1803               	skipnc
  1996     0633  3E01               	addlw	1
  1997     0634  0085               	movwf	5
  1998     0635  0800               	movf	0,w	;code access
  1999     0636  3187  277A  3186   	fcall	_EUSART_write
  2000     0639                     l113:
  2001     0639  0008               	return
  2002     063A                     __end_of_EUSART_print_hex:
  2003                           
  2004                           	psect	text10
  2005     05F0                     __ptext10:	
  2006 ;; *************** function _EUSART_print *****************
  2007 ;; Defined at:
  2008 ;;		line 44 in file "./eusart_driver.h"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;  string          2    2[COMMON] PTR const unsigned char 
  2011 ;;		 -> STR_17(8), STR_14(11), STR_13(12), STR_12(11), 
  2012 ;;		 -> STR_11(12), STR_9(8), STR_6(11), STR_4(3), 
  2013 ;;		 -> STR_1(11), 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  c               1    7[COMMON] unsigned char 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      void 
  2018 ;; Registers used:
  2019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2025 ;;      Params:         2       0       0       0       0       0       0       0
  2026 ;;      Locals:         1       0       0       0       0       0       0       0
  2027 ;;      Temps:          3       0       0       0       0       0       0       0
  2028 ;;      Totals:         6       0       0       0       0       0       0       0
  2029 ;;Total ram usage:        6 bytes
  2030 ;; Hardware stack levels used: 1
  2031 ;; Hardware stack levels required when called: 2
  2032 ;; This function calls:
  2033 ;;		_EUSART_write
  2034 ;; This function is called by:
  2035 ;;		_LoRa_setup
  2036 ;;		_LoRa_send_data
  2037 ;;		_AT_command_check
  2038 ;;		_AT_command
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042     05F0                     _EUSART_print:	
  2043                           ;psect for function _EUSART_print
  2044                           
  2045     05F0                     l2029:	
  2046                           ;incstack = 0
  2047                           ; Regs used in _EUSART_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2048                           
  2049                           
  2050                           ;./eusart_driver.h: 45:     uint8_t c=0;
  2051     05F0  01F7               	clrf	EUSART_print@c
  2052                           
  2053                           ;./eusart_driver.h: 46:     while(string[c]!=0){
  2054     05F1  2E05               	goto	l2035
  2055     05F2                     l2031:
  2056                           
  2057                           ;./eusart_driver.h: 47:         EUSART_write(string[c]);
  2058     05F2  0873               	movf	EUSART_print@string+1,w
  2059     05F3  00F5               	movwf	??_EUSART_print+1
  2060     05F4  0872               	movf	EUSART_print@string,w
  2061     05F5  00F4               	movwf	??_EUSART_print
  2062     05F6  0877               	movf	EUSART_print@c,w
  2063     05F7  0774               	addwf	??_EUSART_print,w
  2064     05F8  0084               	movwf	4
  2065     05F9  0875               	movf	??_EUSART_print+1,w
  2066     05FA  1803               	skipnc
  2067     05FB  0A75               	incf	??_EUSART_print+1,w
  2068     05FC  0085               	movwf	5
  2069     05FD  0800               	movf	0,w	;code access
  2070     05FE  3187  277A  3185   	fcall	_EUSART_write
  2071     0601                     l2033:
  2072                           
  2073                           ;./eusart_driver.h: 48:         c++;
  2074     0601  3001               	movlw	1
  2075     0602  00F4               	movwf	??_EUSART_print
  2076     0603  0874               	movf	??_EUSART_print,w
  2077     0604  07F7               	addwf	EUSART_print@c,f
  2078     0605                     l2035:
  2079                           
  2080                           ;./eusart_driver.h: 46:     while(string[c]!=0){
  2081     0605  0873               	movf	EUSART_print@string+1,w
  2082     0606  00F5               	movwf	??_EUSART_print+1
  2083     0607  0872               	movf	EUSART_print@string,w
  2084     0608  00F4               	movwf	??_EUSART_print
  2085     0609  0877               	movf	EUSART_print@c,w
  2086     060A  0774               	addwf	??_EUSART_print,w
  2087     060B  0084               	movwf	4
  2088     060C  0875               	movf	??_EUSART_print+1,w
  2089     060D  1803               	skipnc
  2090     060E  0A75               	incf	??_EUSART_print+1,w
  2091     060F  0085               	movwf	5
  2092     0610  0012               	moviw fsr0++
  2093     0611  1D03               	btfss	3,2
  2094     0612  2E14               	goto	u1591
  2095     0613  2E15               	goto	u1590
  2096     0614                     u1591:
  2097     0614  2DF2               	goto	l2031
  2098     0615                     u1590:
  2099     0615                     l105:
  2100     0615  0008               	return
  2101     0616                     __end_of_EUSART_print:
  2102                           
  2103                           	psect	text11
  2104     077A                     __ptext11:	
  2105 ;; *************** function _EUSART_write *****************
  2106 ;; Defined at:
  2107 ;;		line 34 in file "./eusart_driver.h"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  txData          1    wreg     unsigned char 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  txData          1    1[COMMON] unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		wreg
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2121 ;;      Params:         0       0       0       0       0       0       0       0
  2122 ;;      Locals:         1       0       0       0       0       0       0       0
  2123 ;;      Temps:          0       0       0       0       0       0       0       0
  2124 ;;      Totals:         1       0       0       0       0       0       0       0
  2125 ;;Total ram usage:        1 bytes
  2126 ;; Hardware stack levels used: 1
  2127 ;; Hardware stack levels required when called: 1
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_EUSART_print
  2132 ;;		_EUSART_print_hex
  2133 ;;		_LoRa_send_data
  2134 ;;		_AT_command_check
  2135 ;;		_AT_command
  2136 ;;		_EUSART_print_dec
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140     077A                     _EUSART_write:	
  2141                           ;psect for function _EUSART_write
  2142                           
  2143                           
  2144                           ;incstack = 0
  2145                           ; Regs used in _EUSART_write: [wreg]
  2146                           ;EUSART_write@txData stored from wreg
  2147     077A  00F1               	movwf	EUSART_write@txData
  2148     077B                     l2025:
  2149     077B                     l90:	
  2150                           ;./eusart_driver.h: 35:     while(PIR1bits.TX1IF == 0){}
  2151                           
  2152     077B  014E               	movlb	14	; select bank14
  2153     077C  1D8D               	btfss	13,3	;volatile
  2154     077D  2F7F               	goto	u1581
  2155     077E  2F80               	goto	u1580
  2156     077F                     u1581:
  2157     077F  2F7B               	goto	l90
  2158     0780                     u1580:
  2159     0780                     l2027:
  2160                           
  2161                           ;./eusart_driver.h: 36:     TX1REG = txData;
  2162     0780  0871               	movf	EUSART_write@txData,w
  2163     0781  0142               	movlb	2	; select bank2
  2164     0782  009A               	movwf	26	;volatile
  2165     0783                     l93:
  2166     0783  0008               	return
  2167     0784                     __end_of_EUSART_write:
  2168                           
  2169                           	psect	text12
  2170     063A                     __ptext12:	
  2171 ;; *************** function _I2C_setup_slave *****************
  2172 ;; Defined at:
  2173 ;;		line 48 in file "./i2c_driver.h"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  slaveAddress    1    wreg     unsigned char 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  slaveAddress    1    1[COMMON] unsigned char 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2187 ;;      Params:         0       0       0       0       0       0       0       0
  2188 ;;      Locals:         1       0       0       0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0       0
  2190 ;;      Totals:         1       0       0       0       0       0       0       0
  2191 ;;Total ram usage:        1 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 1
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_main
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201     063A                     _I2C_setup_slave:	
  2202                           ;psect for function _I2C_setup_slave
  2203                           
  2204                           
  2205                           ;incstack = 0
  2206                           ; Regs used in _I2C_setup_slave: [wreg+status,2+status,0]
  2207                           ;I2C_setup_slave@slaveAddress stored from wreg
  2208     063A  00F1               	movwf	I2C_setup_slave@slaveAddress
  2209     063B                     l1813:
  2210                           
  2211                           ;./i2c_driver.h: 50:     TRISAbits.TRISA1 = 1;
  2212     063B  0140               	movlb	0	; select bank0
  2213     063C  1492               	bsf	18,1	;volatile
  2214                           
  2215                           ;./i2c_driver.h: 51:     TRISAbits.TRISA2 = 1;
  2216     063D  1512               	bsf	18,2	;volatile
  2217                           
  2218                           ;./i2c_driver.h: 52:     ODCONAbits.ODCA1 = 1;
  2219     063E  017E               	movlb	62	; select bank62
  2220     063F  14BA               	bsf	58,1	;volatile
  2221                           
  2222                           ;./i2c_driver.h: 53:     ODCONAbits.ODCA2 = 1;
  2223     0640  153A               	bsf	58,2	;volatile
  2224     0641                     l1815:
  2225                           
  2226                           ;./i2c_driver.h: 54:     RA1PPS = 0x07;
  2227     0641  3007               	movlw	7
  2228     0642  0091               	movwf	17	;volatile
  2229                           
  2230                           ;./i2c_driver.h: 55:     RA2PPS = 0x08;
  2231     0643  3008               	movlw	8
  2232     0644  0092               	movwf	18	;volatile
  2233                           
  2234                           ;./i2c_driver.h: 56:     SSP1CLKPPS = 0x1;
  2235     0645  3001               	movlw	1
  2236     0646  017D               	movlb	61	; select bank61
  2237     0647  00C5               	movwf	69	;volatile
  2238                           
  2239                           ;./i2c_driver.h: 57:     SSP1DATPPS = 0x2;
  2240     0648  3002               	movlw	2
  2241     0649  00C6               	movwf	70	;volatile
  2242     064A                     l1817:
  2243                           
  2244                           ;./i2c_driver.h: 59:     SSP1STATbits.SMP = 1;
  2245     064A  0143               	movlb	3	; select bank3
  2246     064B  178F               	bsf	15,7	;volatile
  2247     064C                     l1819:
  2248                           
  2249                           ;./i2c_driver.h: 61:     SSP1CON1bits.SSPM = 0b0110;
  2250     064C  0810               	movf	16,w	;volatile
  2251     064D  39F0               	andlw	-16
  2252     064E  3806               	iorlw	6
  2253     064F  0090               	movwf	16	;volatile
  2254     0650                     l1821:
  2255                           
  2256                           ;./i2c_driver.h: 62:     SSP1CON2bits.SEN = 1;
  2257     0650  1411               	bsf	17,0	;volatile
  2258     0651                     l1823:
  2259                           
  2260                           ;./i2c_driver.h: 63:     SSP1CON3bits.SBCDE = 1;
  2261     0651  1512               	bsf	18,2	;volatile
  2262     0652                     l1825:
  2263                           
  2264                           ;./i2c_driver.h: 64:     SSP1ADD = slaveAddress;
  2265     0652  0871               	movf	I2C_setup_slave@slaveAddress,w
  2266     0653  008D               	movwf	13	;volatile
  2267     0654                     l1827:
  2268                           
  2269                           ;./i2c_driver.h: 65:     SSP1CON1bits.SSPEN = 1;
  2270     0654  1690               	bsf	16,5	;volatile
  2271     0655                     l1829:
  2272                           
  2273                           ;./i2c_driver.h: 67:     PIR1bits.BCL1IF = 0;
  2274     0655  014E               	movlb	14	; select bank14
  2275     0656  110D               	bcf	13,2	;volatile
  2276     0657                     l1831:
  2277                           
  2278                           ;./i2c_driver.h: 68:     PIR1bits.SSP1IF = 0;
  2279     0657  108D               	bcf	13,1	;volatile
  2280     0658                     l1833:
  2281                           
  2282                           ;./i2c_driver.h: 69:     PIE1bits.BCL1IE = 1;
  2283     0658  1517               	bsf	23,2	;volatile
  2284     0659                     l1835:
  2285                           
  2286                           ;./i2c_driver.h: 70:     PIE1bits.SSP1IE = 1;
  2287     0659  1497               	bsf	23,1	;volatile
  2288     065A                     l1837:
  2289                           
  2290                           ;./i2c_driver.h: 71:     INTCONbits.PEIE = 1;
  2291     065A  170B               	bsf	11,6	;volatile
  2292     065B                     l1839:
  2293                           
  2294                           ;./i2c_driver.h: 72:     INTCONbits.GIE = 1;
  2295     065B  178B               	bsf	11,7	;volatile
  2296     065C                     l125:
  2297     065C  0008               	return
  2298     065D                     __end_of_I2C_setup_slave:
  2299                           
  2300                           	psect	text13
  2301     0680                     __ptext13:	
  2302 ;; *************** function _I2C_setup *****************
  2303 ;; Defined at:
  2304 ;;		line 17 in file "./i2c_driver.h"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  i2c_freq        1    0        unsigned char 
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  1    wreg      void 
  2311 ;; Registers used:
  2312 ;;		wreg, status,2, status,0
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2318 ;;      Params:         0       0       0       0       0       0       0       0
  2319 ;;      Locals:         0       0       0       0       0       0       0       0
  2320 ;;      Temps:          0       0       0       0       0       0       0       0
  2321 ;;      Totals:         0       0       0       0       0       0       0       0
  2322 ;;Total ram usage:        0 bytes
  2323 ;; Hardware stack levels used: 1
  2324 ;; Hardware stack levels required when called: 1
  2325 ;; This function calls:
  2326 ;;		Nothing
  2327 ;; This function is called by:
  2328 ;;		_main
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332     0680                     _I2C_setup:	
  2333                           ;psect for function _I2C_setup
  2334                           
  2335     0680                     l1789:	
  2336                           ;incstack = 0
  2337                           ; Regs used in _I2C_setup: [wreg+status,2+status,0]
  2338                           
  2339     0680                     l1791:
  2340                           
  2341                           ;./i2c_driver.h: 22:     TRISAbits.TRISA1 = 1;
  2342     0680  0140               	movlb	0	; select bank0
  2343     0681  1492               	bsf	18,1	;volatile
  2344     0682                     l1793:
  2345                           
  2346                           ;./i2c_driver.h: 23:     TRISAbits.TRISA2 = 1;
  2347     0682  1512               	bsf	18,2	;volatile
  2348                           
  2349                           ;./i2c_driver.h: 26:     RA1PPS = 0x07;
  2350     0683  3007               	movlw	7
  2351     0684  017E               	movlb	62	; select bank62
  2352     0685  0091               	movwf	17	;volatile
  2353                           
  2354                           ;./i2c_driver.h: 27:     RA2PPS = 0x08;
  2355     0686  3008               	movlw	8
  2356     0687  0092               	movwf	18	;volatile
  2357                           
  2358                           ;./i2c_driver.h: 28:     SSP1CLKPPS = 0x1;
  2359     0688  3001               	movlw	1
  2360     0689  017D               	movlb	61	; select bank61
  2361     068A  00C5               	movwf	69	;volatile
  2362                           
  2363                           ;./i2c_driver.h: 29:     SSP1DATPPS = 0x2;
  2364     068B  3002               	movlw	2
  2365     068C  00C6               	movwf	70	;volatile
  2366     068D                     l1795:
  2367                           
  2368                           ;./i2c_driver.h: 31:     SSP1STATbits.SMP = 1;
  2369     068D  0143               	movlb	3	; select bank3
  2370     068E  178F               	bsf	15,7	;volatile
  2371     068F                     l1797:
  2372                           
  2373                           ;./i2c_driver.h: 33:     SSP1CON1bits.SSPM = 0b1000;
  2374     068F  0810               	movf	16,w	;volatile
  2375     0690  39F0               	andlw	-16
  2376     0691  3808               	iorlw	8
  2377     0692  0090               	movwf	16	;volatile
  2378     0693                     l1799:
  2379                           
  2380                           ;./i2c_driver.h: 35:     SSP1CON2 = 0;
  2381     0693  0191               	clrf	17	;volatile
  2382     0694                     l1801:
  2383                           
  2384                           ;./i2c_driver.h: 37:     SSP1ADD = 3;
  2385     0694  3003               	movlw	3
  2386     0695  008D               	movwf	13	;volatile
  2387     0696                     l1803:
  2388                           
  2389                           ;./i2c_driver.h: 39:     SSP1CON1bits.SSPEN = 1;
  2390     0696  1690               	bsf	16,5	;volatile
  2391     0697                     l1805:
  2392                           
  2393                           ;./i2c_driver.h: 41:     PIR1bits.BCL1IF = 0;
  2394     0697  014E               	movlb	14	; select bank14
  2395     0698  110D               	bcf	13,2	;volatile
  2396     0699                     l1807:
  2397                           
  2398                           ;./i2c_driver.h: 42:     PIR1bits.SSP1IF = 0;
  2399     0699  108D               	bcf	13,1	;volatile
  2400     069A                     l1809:
  2401                           
  2402                           ;./i2c_driver.h: 43:     PIE1bits.BCL1IE = 1;
  2403     069A  1517               	bsf	23,2	;volatile
  2404     069B                     l1811:
  2405                           
  2406                           ;./i2c_driver.h: 44:     PIE1bits.SSP1IE = 1;
  2407     069B  1497               	bsf	23,1	;volatile
  2408     069C                     l122:
  2409     069C  0008               	return
  2410     069D                     __end_of_I2C_setup:
  2411                           
  2412                           	psect	text14
  2413     05A3                     __ptext14:	
  2414 ;; *************** function _I2C_SHT4x_read_raw *****************
  2415 ;; Defined at:
  2416 ;;		line 152 in file "./i2c_driver.h"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  raw_temp        1    wreg     PTR unsigned short 
  2419 ;;		 -> main@rawtemp(2), 
  2420 ;;  raw_rh          1    8[COMMON] PTR unsigned short 
  2421 ;;		 -> main@rawhum(2), 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  raw_temp        1    6[BANK0 ] PTR unsigned short 
  2424 ;;		 -> main@rawtemp(2), 
  2425 ;;  rx_data         6    0[BANK0 ] unsigned char [6]
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      unsigned char 
  2428 ;; Registers used:
  2429 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2435 ;;      Params:         1       0       0       0       0       0       0       0
  2436 ;;      Locals:         0       7       0       0       0       0       0       0
  2437 ;;      Temps:          1       0       0       0       0       0       0       0
  2438 ;;      Totals:         2       7       0       0       0       0       0       0
  2439 ;;Total ram usage:        9 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; Hardware stack levels required when called: 4
  2442 ;; This function calls:
  2443 ;;		_I2C_read_query
  2444 ;;		_I2C_write_query
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450     05A3                     _I2C_SHT4x_read_raw:	
  2451                           ;psect for function _I2C_SHT4x_read_raw
  2452                           
  2453                           
  2454                           ;incstack = 0
  2455                           ; Regs used in _I2C_SHT4x_read_raw: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2456                           ;I2C_SHT4x_read_raw@raw_temp stored from wreg
  2457     05A3  0140               	movlb	0	; select bank0
  2458     05A4  00A6               	movwf	I2C_SHT4x_read_raw@raw_temp
  2459     05A5                     l1841:
  2460                           
  2461                           ;./i2c_driver.h: 153:     I2C_write_query(0x46,0xFD);
  2462     05A5  30FD               	movlw	253
  2463     05A6  00F2               	movwf	I2C_write_query@data
  2464     05A7  3046               	movlw	70
  2465     05A8  3186  26F4  3185   	fcall	_I2C_write_query
  2466     05AB                     l1843:
  2467                           
  2468                           ;./i2c_driver.h: 154:     _delay((unsigned long)((10)*(1000000/4000.0)));
  2469     05AB  3004               	movlw	4
  2470     05AC  00F9               	movwf	??_I2C_SHT4x_read_raw
  2471     05AD  303E               	movlw	62
  2472     05AE                     u1777:
  2473     05AE  0B89               	decfsz	9,f
  2474     05AF  2DAE               	goto	u1777
  2475     05B0  0BF9               	decfsz	??_I2C_SHT4x_read_raw,f
  2476     05B1  2DAE               	goto	u1777
  2477     05B2                     l1845:
  2478                           
  2479                           ;./i2c_driver.h: 155:     uint8_t rx_data[6];;./i2c_driver.h: 156:     I2C_read_query(0x
      +                          46, rx_data, 6);
  2480     05B2  3020               	movlw	(low (I2C_SHT4x_read_raw@rx_data| 0))& (0+255)
  2481     05B3  00F2               	movwf	I2C_read_query@data
  2482     05B4  3006               	movlw	6
  2483     05B5  00F3               	movwf	I2C_read_query@number_of_bytes
  2484     05B6  3046               	movlw	70
  2485     05B7  3185  2548  3185   	fcall	_I2C_read_query
  2486                           
  2487                           ;./i2c_driver.h: 157:     *raw_temp = (rx_data[0]<<8) + rx_data[1];
  2488     05BA  0140               	movlb	0	; select bank0
  2489     05BB  0826               	movf	I2C_SHT4x_read_raw@raw_temp,w
  2490     05BC  0086               	movwf	6
  2491     05BD  0187               	clrf	7
  2492     05BE  0821               	movf	I2C_SHT4x_read_raw@rx_data+1,w
  2493     05BF  3FC0               	movwi [0]fsr1
  2494     05C0  0820               	movf	I2C_SHT4x_read_raw@rx_data,w
  2495     05C1  3FC1               	movwi [1]fsr1
  2496                           
  2497                           ;./i2c_driver.h: 159:     *raw_rh = (rx_data[3]<<8) + rx_data[4];
  2498     05C2  0878               	movf	I2C_SHT4x_read_raw@raw_rh,w
  2499     05C3  0086               	movwf	6
  2500     05C4  0187               	clrf	7
  2501     05C5  0824               	movf	I2C_SHT4x_read_raw@rx_data+4,w
  2502     05C6  3FC0               	movwi [0]fsr1
  2503     05C7  0823               	movf	I2C_SHT4x_read_raw@rx_data+3,w
  2504     05C8  3FC1               	movwi [1]fsr1
  2505     05C9                     l166:
  2506     05C9  0008               	return
  2507     05CA                     __end_of_I2C_SHT4x_read_raw:
  2508                           
  2509                           	psect	text15
  2510     06F4                     __ptext15:	
  2511 ;; *************** function _I2C_write_query *****************
  2512 ;; Defined at:
  2513 ;;		line 112 in file "./i2c_driver.h"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  address         1    wreg     unsigned char 
  2516 ;;  data            1    2[COMMON] unsigned char 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  address         1    3[COMMON] unsigned char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  1    wreg      unsigned char 
  2521 ;; Registers used:
  2522 ;;		wreg, status,2, status,0, pclath, cstack
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2528 ;;      Params:         1       0       0       0       0       0       0       0
  2529 ;;      Locals:         1       0       0       0       0       0       0       0
  2530 ;;      Temps:          0       0       0       0       0       0       0       0
  2531 ;;      Totals:         2       0       0       0       0       0       0       0
  2532 ;;Total ram usage:        2 bytes
  2533 ;; Hardware stack levels used: 1
  2534 ;; Hardware stack levels required when called: 3
  2535 ;; This function calls:
  2536 ;;		_I2C_start
  2537 ;;		_I2C_stop
  2538 ;;		_I2C_write
  2539 ;; This function is called by:
  2540 ;;		_I2C_SHT4x_read_raw
  2541 ;;		_I2C_SHT4x_read
  2542 ;; This function uses a non-reentrant model
  2543 ;;
  2544                           
  2545     06F4                     _I2C_write_query:	
  2546                           ;psect for function _I2C_write_query
  2547                           
  2548                           
  2549                           ;incstack = 0
  2550                           ; Regs used in _I2C_write_query: [wreg+status,2+status,0+pclath+cstack]
  2551                           ;I2C_write_query@address stored from wreg
  2552     06F4  00F3               	movwf	I2C_write_query@address
  2553     06F5                     l1475:
  2554                           
  2555                           ;./i2c_driver.h: 113:     I2C_start();
  2556     06F5  3187  27AE  3186   	fcall	_I2C_start
  2557     06F8                     l1477:
  2558                           
  2559                           ;./i2c_driver.h: 114:     address = (address << 1)&0b11111110;
  2560     06F8  3573               	lslf	I2C_write_query@address,w
  2561     06F9  39FE               	andlw	254
  2562     06FA  00F3               	movwf	I2C_write_query@address
  2563     06FB                     l1479:
  2564                           
  2565                           ;./i2c_driver.h: 115:     I2C_write(address & 0b11111110);
  2566     06FB  0873               	movf	I2C_write_query@address,w
  2567     06FC  39FE               	andlw	254
  2568     06FD  3187  2794  3186   	fcall	_I2C_write
  2569     0700                     l1481:
  2570                           
  2571                           ;./i2c_driver.h: 116:     I2C_write(data);
  2572     0700  0872               	movf	I2C_write_query@data,w
  2573     0701  3187  2794  3186   	fcall	_I2C_write
  2574     0704                     l1483:
  2575                           
  2576                           ;./i2c_driver.h: 117:     I2C_stop();
  2577     0704  3187  27A8  3186   	fcall	_I2C_stop
  2578     0707                     l152:
  2579     0707  0008               	return
  2580     0708                     __end_of_I2C_write_query:
  2581                           
  2582                           	psect	text16
  2583     0548                     __ptext16:	
  2584 ;; *************** function _I2C_read_query *****************
  2585 ;; Defined at:
  2586 ;;		line 121 in file "./i2c_driver.h"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  address         1    wreg     unsigned char 
  2589 ;;  data            1    2[COMMON] PTR unsigned char 
  2590 ;;		 -> I2C_MCP23008_read@rx_data(11), I2C_SHT4x_read_raw@rx_data(6), I2C_SHT4x_read@rx_data(6), 
  2591 ;;  number_of_by    1    3[COMMON] unsigned char 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  address         1    7[COMMON] unsigned char 
  2594 ;;  i               2    5[COMMON] int 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      unsigned char 
  2597 ;; Registers used:
  2598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2604 ;;      Params:         2       0       0       0       0       0       0       0
  2605 ;;      Locals:         3       0       0       0       0       0       0       0
  2606 ;;      Temps:          1       0       0       0       0       0       0       0
  2607 ;;      Totals:         6       0       0       0       0       0       0       0
  2608 ;;Total ram usage:        6 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 3
  2611 ;; This function calls:
  2612 ;;		_I2C_read
  2613 ;;		_I2C_start
  2614 ;;		_I2C_stop
  2615 ;;		_I2C_write
  2616 ;; This function is called by:
  2617 ;;		_I2C_SHT4x_read_raw
  2618 ;;		_I2C_SHT4x_read
  2619 ;;		_I2C_MCP23008_read
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623     0548                     _I2C_read_query:	
  2624                           ;psect for function _I2C_read_query
  2625                           
  2626                           
  2627                           ;incstack = 0
  2628                           ; Regs used in _I2C_read_query: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2629                           ;I2C_read_query@address stored from wreg
  2630     0548  00F7               	movwf	I2C_read_query@address
  2631     0549                     l1487:
  2632                           
  2633                           ;./i2c_driver.h: 122:     I2C_start();
  2634     0549  3187  27AE  3185   	fcall	_I2C_start
  2635     054C                     l1489:
  2636                           
  2637                           ;./i2c_driver.h: 123:     address = (address << 1)&0b11111110;
  2638     054C  3577               	lslf	I2C_read_query@address,w
  2639     054D  39FE               	andlw	254
  2640     054E  00F7               	movwf	I2C_read_query@address
  2641     054F                     l1491:
  2642                           
  2643                           ;./i2c_driver.h: 124:     I2C_write(address | 0b00000001);
  2644     054F  0877               	movf	I2C_read_query@address,w
  2645     0550  3801               	iorlw	1
  2646     0551  3187  2794  3185   	fcall	_I2C_write
  2647     0554                     l1493:
  2648                           
  2649                           ;./i2c_driver.h: 125:     for(int i=0; i<number_of_bytes; i++){
  2650     0554  01F5               	clrf	I2C_read_query@i
  2651     0555  01F6               	clrf	I2C_read_query@i+1
  2652     0556  2D65               	goto	l1499
  2653     0557                     l1495:
  2654                           
  2655                           ;./i2c_driver.h: 126:         data[i] = I2C_read();
  2656     0557  0875               	movf	I2C_read_query@i,w
  2657     0558  0772               	addwf	I2C_read_query@data,w
  2658     0559  00F4               	movwf	??_I2C_read_query
  2659     055A  0874               	movf	??_I2C_read_query,w
  2660     055B  0086               	movwf	6
  2661     055C  0187               	clrf	7
  2662     055D  3186  269D  3185   	fcall	_I2C_read
  2663     0560  0081               	movwf	1
  2664     0561                     l1497:
  2665                           
  2666                           ;./i2c_driver.h: 127:     }
  2667     0561  3001               	movlw	1
  2668     0562  07F5               	addwf	I2C_read_query@i,f
  2669     0563  3000               	movlw	0
  2670     0564  3DF6               	addwfc	I2C_read_query@i+1,f
  2671     0565                     l1499:
  2672     0565  0876               	movf	I2C_read_query@i+1,w
  2673     0566  3A80               	xorlw	128
  2674     0567  00F4               	movwf	??_I2C_read_query
  2675     0568  3080               	movlw	128
  2676     0569  0274               	subwf	??_I2C_read_query,w
  2677     056A  1D03               	skipz
  2678     056B  2D6E               	goto	u905
  2679     056C  0873               	movf	I2C_read_query@number_of_bytes,w
  2680     056D  0275               	subwf	I2C_read_query@i,w
  2681     056E                     u905:
  2682     056E  1C03               	skipc
  2683     056F  2D71               	goto	u901
  2684     0570  2D72               	goto	u900
  2685     0571                     u901:
  2686     0571  2D57               	goto	l1495
  2687     0572                     u900:
  2688     0572                     l1501:
  2689                           
  2690                           ;./i2c_driver.h: 128:     I2C_stop();
  2691     0572  3187  27A8  3185   	fcall	_I2C_stop
  2692     0575                     l158:
  2693     0575  0008               	return
  2694     0576                     __end_of_I2C_read_query:
  2695                           
  2696                           	psect	text17
  2697     0794                     __ptext17:	
  2698 ;; *************** function _I2C_write *****************
  2699 ;; Defined at:
  2700 ;;		line 94 in file "./i2c_driver.h"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  data            1    wreg     unsigned char 
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;  data            1    1[COMMON] unsigned char 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0, pclath, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2714 ;;      Params:         0       0       0       0       0       0       0       0
  2715 ;;      Locals:         1       0       0       0       0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0
  2717 ;;      Totals:         1       0       0       0       0       0       0       0
  2718 ;;Total ram usage:        1 bytes
  2719 ;; Hardware stack levels used: 1
  2720 ;; Hardware stack levels required when called: 2
  2721 ;; This function calls:
  2722 ;;		_I2C_wait
  2723 ;; This function is called by:
  2724 ;;		_I2C_write_query
  2725 ;;		_I2C_read_query
  2726 ;;		_I2C_MCP23008_write
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730     0794                     _I2C_write:	
  2731                           ;psect for function _I2C_write
  2732                           
  2733                           
  2734                           ;incstack = 0
  2735                           ; Regs used in _I2C_write: [wreg+status,2+status,0+pclath+cstack]
  2736                           ;I2C_write@data stored from wreg
  2737     0794  00F1               	movwf	I2C_write@data
  2738     0795                     l1433:
  2739                           
  2740                           ;./i2c_driver.h: 95:   I2C_wait();
  2741     0795  3187  2741  3187   	fcall	_I2C_wait
  2742     0798                     l1435:
  2743                           
  2744                           ;./i2c_driver.h: 96:   SSP1BUF = data;
  2745     0798  0871               	movf	I2C_write@data,w
  2746     0799  0143               	movlb	3	; select bank3
  2747     079A  008C               	movwf	12	;volatile
  2748     079B                     l143:
  2749     079B  0008               	return
  2750     079C                     __end_of_I2C_write:
  2751                           
  2752                           	psect	text18
  2753     07A8                     __ptext18:	
  2754 ;; *************** function _I2C_stop *****************
  2755 ;; Defined at:
  2756 ;;		line 89 in file "./i2c_driver.h"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;		None
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;		None
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		wreg, status,2, status,0, pclath, cstack
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2770 ;;      Params:         0       0       0       0       0       0       0       0
  2771 ;;      Locals:         0       0       0       0       0       0       0       0
  2772 ;;      Temps:          0       0       0       0       0       0       0       0
  2773 ;;      Totals:         0       0       0       0       0       0       0       0
  2774 ;;Total ram usage:        0 bytes
  2775 ;; Hardware stack levels used: 1
  2776 ;; Hardware stack levels required when called: 2
  2777 ;; This function calls:
  2778 ;;		_I2C_wait
  2779 ;; This function is called by:
  2780 ;;		_I2C_write_query
  2781 ;;		_I2C_read_query
  2782 ;;		_I2C_MCP23008_write
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786     07A8                     _I2C_stop:	
  2787                           ;psect for function _I2C_stop
  2788                           
  2789     07A8                     l1429:	
  2790                           ;incstack = 0
  2791                           ; Regs used in _I2C_stop: [wreg+status,2+status,0+pclath+cstack]
  2792                           
  2793                           
  2794                           ;./i2c_driver.h: 90:   I2C_wait();
  2795     07A8  3187  2741  3187   	fcall	_I2C_wait
  2796     07AB                     l1431:
  2797                           
  2798                           ;./i2c_driver.h: 91:   SSP1CON2bits.PEN = 1;
  2799     07AB  0143               	movlb	3	; select bank3
  2800     07AC  1511               	bsf	17,2	;volatile
  2801     07AD                     l140:
  2802     07AD  0008               	return
  2803     07AE                     __end_of_I2C_stop:
  2804                           
  2805                           	psect	text19
  2806     07AE                     __ptext19:	
  2807 ;; *************** function _I2C_start *****************
  2808 ;; Defined at:
  2809 ;;		line 79 in file "./i2c_driver.h"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;		None
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;		None
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0, pclath, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2823 ;;      Params:         0       0       0       0       0       0       0       0
  2824 ;;      Locals:         0       0       0       0       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0       0       0       0
  2826 ;;      Totals:         0       0       0       0       0       0       0       0
  2827 ;;Total ram usage:        0 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; Hardware stack levels required when called: 2
  2830 ;; This function calls:
  2831 ;;		_I2C_wait
  2832 ;; This function is called by:
  2833 ;;		_I2C_write_query
  2834 ;;		_I2C_read_query
  2835 ;;		_I2C_MCP23008_write
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839     07AE                     _I2C_start:	
  2840                           ;psect for function _I2C_start
  2841                           
  2842     07AE                     l1425:	
  2843                           ;incstack = 0
  2844                           ; Regs used in _I2C_start: [wreg+status,2+status,0+pclath+cstack]
  2845                           
  2846                           
  2847                           ;./i2c_driver.h: 80:   I2C_wait();
  2848     07AE  3187  2741  3187   	fcall	_I2C_wait
  2849     07B1                     l1427:
  2850                           
  2851                           ;./i2c_driver.h: 81:   SSP1CON2bits.SEN = 1;
  2852     07B1  0143               	movlb	3	; select bank3
  2853     07B2  1411               	bsf	17,0	;volatile
  2854     07B3                     l134:
  2855     07B3  0008               	return
  2856     07B4                     __end_of_I2C_start:
  2857                           
  2858                           	psect	text20
  2859     069D                     __ptext20:	
  2860 ;; *************** function _I2C_read *****************
  2861 ;; Defined at:
  2862 ;;		line 99 in file "./i2c_driver.h"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  tmp             1    1[COMMON] unsigned char 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      unsigned char 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0, pclath, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2876 ;;      Params:         0       0       0       0       0       0       0       0
  2877 ;;      Locals:         1       0       0       0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0       0
  2879 ;;      Totals:         1       0       0       0       0       0       0       0
  2880 ;;Total ram usage:        1 bytes
  2881 ;; Hardware stack levels used: 1
  2882 ;; Hardware stack levels required when called: 2
  2883 ;; This function calls:
  2884 ;;		_I2C_wait
  2885 ;; This function is called by:
  2886 ;;		_I2C_read_query
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890     069D                     _I2C_read:	
  2891                           ;psect for function _I2C_read
  2892                           
  2893     069D                     l1437:	
  2894                           ;incstack = 0
  2895                           ; Regs used in _I2C_read: [wreg+status,2+status,0+pclath+cstack]
  2896                           
  2897                           
  2898                           ;./i2c_driver.h: 100:   uint8_t tmp;;./i2c_driver.h: 101:   I2C_wait();
  2899     069D  3187  2741  3186   	fcall	_I2C_wait
  2900     06A0                     l1439:
  2901                           
  2902                           ;./i2c_driver.h: 102:   SSP1CON2bits.RCEN = 1;
  2903     06A0  0143               	movlb	3	; select bank3
  2904     06A1  1591               	bsf	17,3	;volatile
  2905                           
  2906                           ;./i2c_driver.h: 103:   I2C_wait();
  2907     06A2  3187  2741  3186   	fcall	_I2C_wait
  2908     06A5                     l146:	
  2909                           ;./i2c_driver.h: 104:   while(PIR1bits.SSP1IF == 1);
  2910                           
  2911     06A5  014E               	movlb	14	; select bank14
  2912     06A6  188D               	btfsc	13,1	;volatile
  2913     06A7  2EA9               	goto	u851
  2914     06A8  2EAA               	goto	u850
  2915     06A9                     u851:
  2916     06A9  2EA5               	goto	l146
  2917     06AA                     u850:
  2918     06AA                     l1441:
  2919                           
  2920                           ;./i2c_driver.h: 105:   tmp = SSP1BUF;
  2921     06AA  0143               	movlb	3	; select bank3
  2922     06AB  080C               	movf	12,w	;volatile
  2923     06AC  00F1               	movwf	I2C_read@tmp
  2924     06AD                     l1443:
  2925                           
  2926                           ;./i2c_driver.h: 106:   I2C_wait();
  2927     06AD  3187  2741  3186   	fcall	_I2C_wait
  2928     06B0                     l1445:
  2929                           
  2930                           ;./i2c_driver.h: 107:   SSP1CON2bits.ACKDT = 0;
  2931     06B0  0143               	movlb	3	; select bank3
  2932     06B1  1291               	bcf	17,5	;volatile
  2933     06B2                     l1447:
  2934                           
  2935                           ;./i2c_driver.h: 108:   SSP1CON2bits.ACKEN = 1;
  2936     06B2  1611               	bsf	17,4	;volatile
  2937     06B3                     l1449:
  2938                           
  2939                           ;./i2c_driver.h: 109:   return tmp;
  2940     06B3  0871               	movf	I2C_read@tmp,w
  2941     06B4                     l149:
  2942     06B4  0008               	return
  2943     06B5                     __end_of_I2C_read:
  2944                           
  2945                           	psect	text21
  2946     0741                     __ptext21:	
  2947 ;; *************** function _I2C_wait *****************
  2948 ;; Defined at:
  2949 ;;		line 75 in file "./i2c_driver.h"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;		None
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2963 ;;      Params:         0       0       0       0       0       0       0       0
  2964 ;;      Locals:         0       0       0       0       0       0       0       0
  2965 ;;      Temps:          0       0       0       0       0       0       0       0
  2966 ;;      Totals:         0       0       0       0       0       0       0       0
  2967 ;;Total ram usage:        0 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; Hardware stack levels required when called: 1
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_I2C_start
  2974 ;;		_I2C_stop
  2975 ;;		_I2C_write
  2976 ;;		_I2C_read
  2977 ;;		_I2C_RepeatedStart
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981     0741                     _I2C_wait:	
  2982                           ;psect for function _I2C_wait
  2983                           
  2984     0741                     l1405:	
  2985                           ;incstack = 0
  2986                           ; Regs used in _I2C_wait: [wreg+status,2]
  2987                           
  2988     0741                     l128:	
  2989                           ;./i2c_driver.h: 76:    while ((SSP1STAT & 0b00000100) || (SSP1CON2 & 0x00011111));
  2990                           
  2991     0741  0143               	movlb	3	; select bank3
  2992     0742  190F               	btfsc	15,2	;volatile
  2993     0743  2F45               	goto	u811
  2994     0744  2F46               	goto	u810
  2995     0745                     u811:
  2996     0745  2F41               	goto	l128
  2997     0746                     u810:
  2998     0746                     l1407:
  2999     0746  0811               	movf	17,w	;volatile
  3000     0747  3911               	andlw	17
  3001     0748  1D03               	btfss	3,2
  3002     0749  2F4B               	goto	u821
  3003     074A  2F4C               	goto	u820
  3004     074B                     u821:
  3005     074B  2F41               	goto	l128
  3006     074C                     u820:
  3007     074C                     l131:
  3008     074C  0008               	return
  3009     074D                     __end_of_I2C_wait:
  3010                           
  3011                           	psect	text22
  3012     0708                     __ptext22:	
  3013 ;; *************** function _EUSART_setup *****************
  3014 ;; Defined at:
  3015 ;;		line 8 in file "./eusart_driver.h"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;		None
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;		None
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      void 
  3022 ;; Registers used:
  3023 ;;		wreg, status,2
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3029 ;;      Params:         0       0       0       0       0       0       0       0
  3030 ;;      Locals:         0       0       0       0       0       0       0       0
  3031 ;;      Temps:          0       0       0       0       0       0       0       0
  3032 ;;      Totals:         0       0       0       0       0       0       0       0
  3033 ;;Total ram usage:        0 bytes
  3034 ;; Hardware stack levels used: 1
  3035 ;; Hardware stack levels required when called: 1
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_main
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043     0708                     _EUSART_setup:	
  3044                           ;psect for function _EUSART_setup
  3045                           
  3046     0708                     l1775:	
  3047                           ;incstack = 0
  3048                           ; Regs used in _EUSART_setup: [wreg+status,2]
  3049                           
  3050                           
  3051                           ;./eusart_driver.h: 10:     BAUD1CONbits.BRG16 = 1;
  3052     0708  0142               	movlb	2	; select bank2
  3053     0709  159F               	bsf	31,3	;volatile
  3054                           
  3055                           ;./eusart_driver.h: 12:     TX1STAbits.SYNC = 0;
  3056     070A  121E               	bcf	30,4	;volatile
  3057                           
  3058                           ;./eusart_driver.h: 14:     TX1STAbits.TXEN = 1;
  3059     070B  169E               	bsf	30,5	;volatile
  3060                           
  3061                           ;./eusart_driver.h: 16:     TX1STAbits.BRGH = 1;
  3062     070C  151E               	bsf	30,2	;volatile
  3063                           
  3064                           ;./eusart_driver.h: 18:     RC1STAbits.CREN = 1;
  3065     070D  161D               	bsf	29,4	;volatile
  3066                           
  3067                           ;./eusart_driver.h: 20:     RC1STAbits.SPEN = 1;
  3068     070E  179D               	bsf	29,7	;volatile
  3069     070F                     l1777:
  3070                           
  3071                           ;./eusart_driver.h: 22:     SP1BRGL = 25;
  3072     070F  3019               	movlw	25
  3073     0710  009B               	movwf	27	;volatile
  3074     0711                     l1779:
  3075                           
  3076                           ;./eusart_driver.h: 23:     SP1BRGH = 0;
  3077     0711  019C               	clrf	28	;volatile
  3078     0712                     l1781:
  3079                           
  3080                           ;./eusart_driver.h: 25:     RA5PPS = 0x05;
  3081     0712  3005               	movlw	5
  3082     0713  017E               	movlb	62	; select bank62
  3083     0714  0095               	movwf	21	;volatile
  3084     0715                     l1783:
  3085                           
  3086                           ;./eusart_driver.h: 27:     RX1PPS = 0x4;
  3087     0715  3004               	movlw	4
  3088     0716  017D               	movlb	61	; select bank61
  3089     0717  00CB               	movwf	75	;volatile
  3090     0718                     l1785:
  3091                           
  3092                           ;./eusart_driver.h: 29:     TRISAbits.TRISA5 = 0;
  3093     0718  0140               	movlb	0	; select bank0
  3094     0719  1292               	bcf	18,5	;volatile
  3095     071A                     l1787:
  3096                           
  3097                           ;./eusart_driver.h: 31:     TRISAbits.TRISA4 = 1;
  3098     071A  1612               	bsf	18,4	;volatile
  3099     071B                     l87:
  3100     071B  0008               	return
  3101     071C                     __end_of_EUSART_setup:
  3102                           
  3103                           	psect	text23
  3104     071C                     __ptext23:	
  3105 ;; *************** function _Analog_setup *****************
  3106 ;; Defined at:
  3107 ;;		line 8 in file "./analog_driver.h"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2, status,0
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3121 ;;      Params:         0       0       0       0       0       0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0
  3124 ;;      Totals:         0       0       0       0       0       0       0       0
  3125 ;;Total ram usage:        0 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; Hardware stack levels required when called: 1
  3128 ;; This function calls:
  3129 ;;		Nothing
  3130 ;; This function is called by:
  3131 ;;		_main
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135     071C                     _Analog_setup:	
  3136                           ;psect for function _Analog_setup
  3137                           
  3138     071C                     l1849:	
  3139                           ;incstack = 0
  3140                           ; Regs used in _Analog_setup: [wreg+status,2+status,0]
  3141                           
  3142                           
  3143                           ;./analog_driver.h: 10:     TRISA |= (1<<0);
  3144     071C  0140               	movlb	0	; select bank0
  3145     071D  1412               	bsf	18,0	;volatile
  3146                           
  3147                           ;./analog_driver.h: 11:     ANSELA |= (1<<0);
  3148     071E  017E               	movlb	62	; select bank62
  3149     071F  1438               	bsf	56,0	;volatile
  3150     0720                     l1851:
  3151                           
  3152                           ;./analog_driver.h: 12:     ADCON0bits.CHS = 0;
  3153     0720  3003               	movlw	-253
  3154     0721  0141               	movlb	1	; select bank1
  3155     0722  059D               	andwf	29,f	;volatile
  3156                           
  3157                           ;./analog_driver.h: 13:     ADCON1bits.PREF = 0x0;
  3158     0723  30FC               	movlw	-4
  3159     0724  059E               	andwf	30,f	;volatile
  3160                           
  3161                           ;./analog_driver.h: 14:     ADCON1bits.CS = 0x0;
  3162     0725  308F               	movlw	-113
  3163     0726  059E               	andwf	30,f	;volatile
  3164     0727                     l1853:
  3165                           
  3166                           ;./analog_driver.h: 15:     ADCON1bits.FM = 1;
  3167     0727  179E               	bsf	30,7	;volatile
  3168     0728                     l175:
  3169     0728  0008               	return
  3170     0729                     __end_of_Analog_setup:
  3171                           
  3172                           	psect	text24
  3173     042E                     __ptext24:	
  3174 ;; *************** function _Analog_read_percent *****************
  3175 ;; Defined at:
  3176 ;;		line 32 in file "./analog_driver.h"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;		None
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  batt_voltage    2   44[BANK0 ] unsigned short 
  3181 ;;  voltage         2   42[BANK0 ] unsigned short 
  3182 ;;  a               2   40[BANK0 ] unsigned short 
  3183 ;;  percent         1   46[BANK0 ] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      unsigned char 
  3186 ;; Registers used:
  3187 ;;		wreg, status,2, status,0, pclath, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3193 ;;      Params:         0       0       0       0       0       0       0       0
  3194 ;;      Locals:         0       7       0       0       0       0       0       0
  3195 ;;      Temps:          0       0       0       0       0       0       0       0
  3196 ;;      Totals:         0       7       0       0       0       0       0       0
  3197 ;;Total ram usage:        7 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 3
  3200 ;; This function calls:
  3201 ;;		_Analog_read_raw
  3202 ;;		___flmul
  3203 ;;		___fltol
  3204 ;;		___xxtofl
  3205 ;; This function is called by:
  3206 ;;		_main
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210     042E                     _Analog_read_percent:	
  3211                           ;psect for function _Analog_read_percent
  3212                           
  3213     042E                     l1855:	
  3214                           ;incstack = 0
  3215                           ; Regs used in _Analog_read_percent: [wreg+status,2+status,0+pclath+cstack]
  3216                           
  3217                           
  3218                           ;./analog_driver.h: 33:     uint16_t a = Analog_read_raw();
  3219     042E  3187  274D  3184   	fcall	_Analog_read_raw
  3220     0431  0872               	movf	?_Analog_read_raw+1,w
  3221     0432  0140               	movlb	0	; select bank0
  3222     0433  00C9               	movwf	Analog_read_percent@a+1
  3223     0434  0871               	movf	?_Analog_read_raw,w
  3224     0435  00C8               	movwf	Analog_read_percent@a
  3225     0436                     l1857:
  3226                           
  3227                           ;./analog_driver.h: 34:     uint16_t voltage = a*(3300.0/1023.0);
  3228     0436  0848               	movf	Analog_read_percent@a,w
  3229     0437  00F1               	movwf	___xxtofl@val
  3230     0438  0849               	movf	Analog_read_percent@a+1,w
  3231     0439  00F2               	movwf	___xxtofl@val+1
  3232     043A  01F3               	clrf	___xxtofl@val+2
  3233     043B  01F4               	clrf	___xxtofl@val+3
  3234     043C  3000               	movlw	0
  3235     043D  3182  227C  3184   	fcall	___xxtofl
  3236     0440  0874               	movf	?___xxtofl+3,w
  3237     0441  0140               	movlb	0	; select bank0
  3238     0442  00AD               	movwf	___flmul@a+3
  3239     0443  0873               	movf	?___xxtofl+2,w
  3240     0444  00AC               	movwf	___flmul@a+2
  3241     0445  0872               	movf	?___xxtofl+1,w
  3242     0446  00AB               	movwf	___flmul@a+1
  3243     0447  0871               	movf	?___xxtofl,w
  3244     0448  00AA               	movwf	___flmul@a
  3245     0449  3040               	movlw	64
  3246     044A  00A9               	movwf	___flmul@b+3
  3247     044B  304E               	movlw	78
  3248     044C  00A8               	movwf	___flmul@b+2
  3249     044D  3073               	movlw	115
  3250     044E  00A7               	movwf	___flmul@b+1
  3251     044F  309D               	movlw	157
  3252     0450  00A6               	movwf	___flmul@b
  3253     0451  3180  2041  3184   	fcall	___flmul
  3254     0454  0140               	movlb	0	; select bank0
  3255     0455  0829               	movf	?___flmul+3,w
  3256     0456  00C3               	movwf	___fltol@f1+3
  3257     0457  0828               	movf	?___flmul+2,w
  3258     0458  00C2               	movwf	___fltol@f1+2
  3259     0459  0827               	movf	?___flmul+1,w
  3260     045A  00C1               	movwf	___fltol@f1+1
  3261     045B  0826               	movf	?___flmul,w
  3262     045C  00C0               	movwf	___fltol@f1
  3263     045D  3183  23BD  3184   	fcall	___fltol
  3264     0460  0140               	movlb	0	; select bank0
  3265     0461  0841               	movf	?___fltol+1,w
  3266     0462  00CB               	movwf	Analog_read_percent@voltage+1
  3267     0463  0840               	movf	?___fltol,w
  3268     0464  00CA               	movwf	Analog_read_percent@voltage
  3269     0465                     l1859:
  3270                           
  3271                           ;./analog_driver.h: 36:     uint16_t batt_voltage = voltage*2;
  3272     0465  354A               	lslf	Analog_read_percent@voltage,w
  3273     0466  00CC               	movwf	Analog_read_percent@batt_voltage
  3274     0467  0D4B               	rlf	Analog_read_percent@voltage+1,w
  3275     0468  00CD               	movwf	Analog_read_percent@batt_voltage+1
  3276     0469                     l1861:
  3277                           
  3278                           ;./analog_driver.h: 38:     uint8_t percent = batt_voltage*(100.0/6000.0);
  3279     0469  084C               	movf	Analog_read_percent@batt_voltage,w
  3280     046A  00F1               	movwf	___xxtofl@val
  3281     046B  084D               	movf	Analog_read_percent@batt_voltage+1,w
  3282     046C  00F2               	movwf	___xxtofl@val+1
  3283     046D  01F3               	clrf	___xxtofl@val+2
  3284     046E  01F4               	clrf	___xxtofl@val+3
  3285     046F  3000               	movlw	0
  3286     0470  3182  227C  3184   	fcall	___xxtofl
  3287     0473  0874               	movf	?___xxtofl+3,w
  3288     0474  0140               	movlb	0	; select bank0
  3289     0475  00AD               	movwf	___flmul@a+3
  3290     0476  0873               	movf	?___xxtofl+2,w
  3291     0477  00AC               	movwf	___flmul@a+2
  3292     0478  0872               	movf	?___xxtofl+1,w
  3293     0479  00AB               	movwf	___flmul@a+1
  3294     047A  0871               	movf	?___xxtofl,w
  3295     047B  00AA               	movwf	___flmul@a
  3296     047C  303C               	movlw	60
  3297     047D  00A9               	movwf	___flmul@b+3
  3298     047E  3088               	movlw	136
  3299     047F  00A8               	movwf	___flmul@b+2
  3300     0480  3088               	movlw	136
  3301     0481  00A7               	movwf	___flmul@b+1
  3302     0482  3089               	movlw	137
  3303     0483  00A6               	movwf	___flmul@b
  3304     0484  3180  2041  3184   	fcall	___flmul
  3305     0487  0140               	movlb	0	; select bank0
  3306     0488  0829               	movf	?___flmul+3,w
  3307     0489  00C3               	movwf	___fltol@f1+3
  3308     048A  0828               	movf	?___flmul+2,w
  3309     048B  00C2               	movwf	___fltol@f1+2
  3310     048C  0827               	movf	?___flmul+1,w
  3311     048D  00C1               	movwf	___fltol@f1+1
  3312     048E  0826               	movf	?___flmul,w
  3313     048F  00C0               	movwf	___fltol@f1
  3314     0490  3183  23BD  3184   	fcall	___fltol
  3315     0493  0140               	movlb	0	; select bank0
  3316     0494  0840               	movf	?___fltol,w
  3317     0495  00CE               	movwf	Analog_read_percent@percent
  3318     0496                     l1863:
  3319                           
  3320                           ;./analog_driver.h: 39:     return percent;
  3321     0496  084E               	movf	Analog_read_percent@percent,w
  3322     0497                     l187:
  3323     0497  0008               	return
  3324     0498                     __end_of_Analog_read_percent:
  3325                           
  3326                           	psect	text25
  3327     027C                     __ptext25:	
  3328 ;; *************** function ___xxtofl *****************
  3329 ;; Defined at:
  3330 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  sign            1    wreg     unsigned char 
  3333 ;;  val             4    1[COMMON] long 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  sign            1    0[BANK0 ] unsigned char 
  3336 ;;  arg             4    2[BANK0 ] unsigned long 
  3337 ;;  exp             1    1[BANK0 ] unsigned char 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  4    1[COMMON] unsigned char 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3347 ;;      Params:         4       0       0       0       0       0       0       0
  3348 ;;      Locals:         0       6       0       0       0       0       0       0
  3349 ;;      Temps:          4       0       0       0       0       0       0       0
  3350 ;;      Totals:         8       6       0       0       0       0       0       0
  3351 ;;Total ram usage:       14 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 1
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_Analog_read_percent
  3358 ;;		_I2C_SHT4x_read
  3359 ;;		_Analog_read_voltage
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363     027C                     ___xxtofl:	
  3364                           ;psect for function ___xxtofl
  3365                           
  3366                           
  3367                           ;incstack = 0
  3368                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3369                           ;___xxtofl@sign stored from wreg
  3370     027C  0140               	movlb	0	; select bank0
  3371     027D  00A0               	movwf	___xxtofl@sign
  3372     027E                     l1727:
  3373     027E  0820               	movf	___xxtofl@sign,w
  3374     027F  1903               	btfsc	3,2
  3375     0280  2A82               	goto	u1321
  3376     0281  2A83               	goto	u1320
  3377     0282                     u1321:
  3378     0282  2A97               	goto	l1733
  3379     0283                     u1320:
  3380     0283                     l1729:
  3381     0283  1FF4               	btfss	___xxtofl@val+3,7
  3382     0284  2A86               	goto	u1331
  3383     0285  2A87               	goto	u1330
  3384     0286                     u1331:
  3385     0286  2A97               	goto	l1733
  3386     0287                     u1330:
  3387     0287                     l1731:
  3388     0287  0971               	comf	___xxtofl@val,w
  3389     0288  00A2               	movwf	___xxtofl@arg
  3390     0289  0972               	comf	___xxtofl@val+1,w
  3391     028A  00A3               	movwf	___xxtofl@arg+1
  3392     028B  0973               	comf	___xxtofl@val+2,w
  3393     028C  00A4               	movwf	___xxtofl@arg+2
  3394     028D  0974               	comf	___xxtofl@val+3,w
  3395     028E  00A5               	movwf	___xxtofl@arg+3
  3396     028F  0AA2               	incf	___xxtofl@arg,f
  3397     0290  1903               	skipnz
  3398     0291  0AA3               	incf	___xxtofl@arg+1,f
  3399     0292  1903               	skipnz
  3400     0293  0AA4               	incf	___xxtofl@arg+2,f
  3401     0294  1903               	skipnz
  3402     0295  0AA5               	incf	___xxtofl@arg+3,f
  3403     0296  2A9F               	goto	l754
  3404     0297                     l1733:
  3405     0297  0874               	movf	___xxtofl@val+3,w
  3406     0298  00A5               	movwf	___xxtofl@arg+3
  3407     0299  0873               	movf	___xxtofl@val+2,w
  3408     029A  00A4               	movwf	___xxtofl@arg+2
  3409     029B  0872               	movf	___xxtofl@val+1,w
  3410     029C  00A3               	movwf	___xxtofl@arg+1
  3411     029D  0871               	movf	___xxtofl@val,w
  3412     029E  00A2               	movwf	___xxtofl@arg
  3413     029F                     l754:
  3414     029F  0874               	movf	___xxtofl@val+3,w
  3415     02A0  0473               	iorwf	___xxtofl@val+2,w
  3416     02A1  0472               	iorwf	___xxtofl@val+1,w
  3417     02A2  0471               	iorwf	___xxtofl@val,w
  3418     02A3  1D03               	skipz
  3419     02A4  2AA6               	goto	u1341
  3420     02A5  2AA7               	goto	u1340
  3421     02A6                     u1341:
  3422     02A6  2AB0               	goto	l1739
  3423     02A7                     u1340:
  3424     02A7                     l1735:
  3425     02A7  3000               	movlw	0
  3426     02A8  00F4               	movwf	?___xxtofl+3
  3427     02A9  3000               	movlw	0
  3428     02AA  00F3               	movwf	?___xxtofl+2
  3429     02AB  3000               	movlw	0
  3430     02AC  00F2               	movwf	?___xxtofl+1
  3431     02AD  3000               	movlw	0
  3432     02AE  00F1               	movwf	?___xxtofl
  3433     02AF  2B26               	goto	l756
  3434     02B0                     l1739:
  3435     02B0  3096               	movlw	150
  3436     02B1  00A1               	movwf	___xxtofl@exp
  3437     02B2  2ABE               	goto	l1743
  3438     02B3                     l1741:
  3439     02B3  3001               	movlw	1
  3440     02B4  00F5               	movwf	??___xxtofl
  3441     02B5  0875               	movf	??___xxtofl,w
  3442     02B6  07A1               	addwf	___xxtofl@exp,f
  3443     02B7  3001               	movlw	1
  3444     02B8                     u1355:
  3445     02B8  36A5               	lsrf	___xxtofl@arg+3,f
  3446     02B9  0CA4               	rrf	___xxtofl@arg+2,f
  3447     02BA  0CA3               	rrf	___xxtofl@arg+1,f
  3448     02BB  0CA2               	rrf	___xxtofl@arg,f
  3449     02BC  0B89               	decfsz	9,f
  3450     02BD  2AB8               	goto	u1355
  3451     02BE                     l1743:
  3452     02BE  30FE               	movlw	254
  3453     02BF  0525               	andwf	___xxtofl@arg+3,w
  3454     02C0  1D03               	btfss	3,2
  3455     02C1  2AC3               	goto	u1361
  3456     02C2  2AC4               	goto	u1360
  3457     02C3                     u1361:
  3458     02C3  2AB3               	goto	l1741
  3459     02C4                     u1360:
  3460     02C4  2AD8               	goto	l760
  3461     02C5                     l1745:
  3462     02C5  3001               	movlw	1
  3463     02C6  00F5               	movwf	??___xxtofl
  3464     02C7  0875               	movf	??___xxtofl,w
  3465     02C8  07A1               	addwf	___xxtofl@exp,f
  3466     02C9                     l1747:
  3467     02C9  3001               	movlw	1
  3468     02CA  07A2               	addwf	___xxtofl@arg,f
  3469     02CB  3000               	movlw	0
  3470     02CC  3DA3               	addwfc	___xxtofl@arg+1,f
  3471     02CD  3000               	movlw	0
  3472     02CE  3DA4               	addwfc	___xxtofl@arg+2,f
  3473     02CF  3000               	movlw	0
  3474     02D0  3DA5               	addwfc	___xxtofl@arg+3,f
  3475     02D1                     l1749:
  3476     02D1  3001               	movlw	1
  3477     02D2                     u1375:
  3478     02D2  36A5               	lsrf	___xxtofl@arg+3,f
  3479     02D3  0CA4               	rrf	___xxtofl@arg+2,f
  3480     02D4  0CA3               	rrf	___xxtofl@arg+1,f
  3481     02D5  0CA2               	rrf	___xxtofl@arg,f
  3482     02D6  0B89               	decfsz	9,f
  3483     02D7  2AD2               	goto	u1375
  3484     02D8                     l760:
  3485     02D8  30FF               	movlw	255
  3486     02D9  0525               	andwf	___xxtofl@arg+3,w
  3487     02DA  1D03               	btfss	3,2
  3488     02DB  2ADD               	goto	u1381
  3489     02DC  2ADE               	goto	u1380
  3490     02DD                     u1381:
  3491     02DD  2AC5               	goto	l1745
  3492     02DE                     u1380:
  3493     02DE  2AE8               	goto	l1753
  3494     02DF                     l1751:
  3495     02DF  3001               	movlw	1
  3496     02E0  02A1               	subwf	___xxtofl@exp,f
  3497     02E1  3001               	movlw	1
  3498     02E2                     u1395:
  3499     02E2  35A2               	lslf	___xxtofl@arg,f
  3500     02E3  0DA3               	rlf	___xxtofl@arg+1,f
  3501     02E4  0DA4               	rlf	___xxtofl@arg+2,f
  3502     02E5  0DA5               	rlf	___xxtofl@arg+3,f
  3503     02E6  0B89               	decfsz	9,f
  3504     02E7  2AE2               	goto	u1395
  3505     02E8                     l1753:
  3506     02E8  1BA4               	btfsc	___xxtofl@arg+2,7
  3507     02E9  2AEB               	goto	u1401
  3508     02EA  2AEC               	goto	u1400
  3509     02EB                     u1401:
  3510     02EB  2AF2               	goto	l767
  3511     02EC                     u1400:
  3512     02EC                     l1755:
  3513     02EC  3002               	movlw	2
  3514     02ED  0221               	subwf	___xxtofl@exp,w
  3515     02EE  1803               	skipnc
  3516     02EF  2AF1               	goto	u1411
  3517     02F0  2AF2               	goto	u1410
  3518     02F1                     u1411:
  3519     02F1  2ADF               	goto	l1751
  3520     02F2                     u1410:
  3521     02F2                     l767:
  3522     02F2  1821               	btfsc	___xxtofl@exp,0
  3523     02F3  2AF5               	goto	u1421
  3524     02F4  2AF6               	goto	u1420
  3525     02F5                     u1421:
  3526     02F5  2AFE               	goto	l768
  3527     02F6                     u1420:
  3528     02F6                     l1757:
  3529     02F6  30FF               	movlw	255
  3530     02F7  05A2               	andwf	___xxtofl@arg,f
  3531     02F8  30FF               	movlw	255
  3532     02F9  05A3               	andwf	___xxtofl@arg+1,f
  3533     02FA  307F               	movlw	127
  3534     02FB  05A4               	andwf	___xxtofl@arg+2,f
  3535     02FC  30FF               	movlw	255
  3536     02FD  05A5               	andwf	___xxtofl@arg+3,f
  3537     02FE                     l768:
  3538     02FE  1003               	clrc
  3539     02FF  0CA1               	rrf	___xxtofl@exp,f
  3540     0300                     l1759:
  3541     0300  0821               	movf	___xxtofl@exp,w
  3542     0301  00F5               	movwf	??___xxtofl
  3543     0302  01F6               	clrf	??___xxtofl+1
  3544     0303  01F7               	clrf	??___xxtofl+2
  3545     0304  01F8               	clrf	??___xxtofl+3
  3546     0305  3018               	movlw	24
  3547     0306                     u1435:
  3548     0306  35F5               	lslf	??___xxtofl,f
  3549     0307  0DF6               	rlf	??___xxtofl+1,f
  3550     0308  0DF7               	rlf	??___xxtofl+2,f
  3551     0309  0DF8               	rlf	??___xxtofl+3,f
  3552     030A                     u1430:
  3553     030A  0B89               	decfsz	9,f
  3554     030B  2B06               	goto	u1435
  3555     030C  0875               	movf	??___xxtofl,w
  3556     030D  04A2               	iorwf	___xxtofl@arg,f
  3557     030E  0876               	movf	??___xxtofl+1,w
  3558     030F  04A3               	iorwf	___xxtofl@arg+1,f
  3559     0310  0877               	movf	??___xxtofl+2,w
  3560     0311  04A4               	iorwf	___xxtofl@arg+2,f
  3561     0312  0878               	movf	??___xxtofl+3,w
  3562     0313  04A5               	iorwf	___xxtofl@arg+3,f
  3563     0314                     l1761:
  3564     0314  0820               	movf	___xxtofl@sign,w
  3565     0315  1903               	btfsc	3,2
  3566     0316  2B18               	goto	u1441
  3567     0317  2B19               	goto	u1440
  3568     0318                     u1441:
  3569     0318  2B1E               	goto	l1767
  3570     0319                     u1440:
  3571     0319                     l1763:
  3572     0319  1FF4               	btfss	___xxtofl@val+3,7
  3573     031A  2B1C               	goto	u1451
  3574     031B  2B1D               	goto	u1450
  3575     031C                     u1451:
  3576     031C  2B1E               	goto	l1767
  3577     031D                     u1450:
  3578     031D                     l1765:
  3579     031D  17A5               	bsf	___xxtofl@arg+3,7
  3580     031E                     l1767:
  3581     031E  0825               	movf	___xxtofl@arg+3,w
  3582     031F  00F4               	movwf	?___xxtofl+3
  3583     0320  0824               	movf	___xxtofl@arg+2,w
  3584     0321  00F3               	movwf	?___xxtofl+2
  3585     0322  0823               	movf	___xxtofl@arg+1,w
  3586     0323  00F2               	movwf	?___xxtofl+1
  3587     0324  0822               	movf	___xxtofl@arg,w
  3588     0325  00F1               	movwf	?___xxtofl
  3589     0326                     l756:
  3590     0326  0008               	return
  3591     0327                     __end_of___xxtofl:
  3592                           
  3593                           	psect	text26
  3594     03BD                     __ptext26:	
  3595 ;; *************** function ___fltol *****************
  3596 ;; Defined at:
  3597 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  f1              4   32[BANK0 ] unsigned char 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;  exp1            1   11[COMMON] unsigned char 
  3602 ;;  sign1           1   10[COMMON] unsigned char 
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  4   32[BANK0 ] long 
  3605 ;; Registers used:
  3606 ;;		wreg, status,2, status,0
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3612 ;;      Params:         0       4       0       0       0       0       0       0
  3613 ;;      Locals:         2       0       0       0       0       0       0       0
  3614 ;;      Temps:          0       4       0       0       0       0       0       0
  3615 ;;      Totals:         2       8       0       0       0       0       0       0
  3616 ;;Total ram usage:       10 bytes
  3617 ;; Hardware stack levels used: 1
  3618 ;; Hardware stack levels required when called: 1
  3619 ;; This function calls:
  3620 ;;		Nothing
  3621 ;; This function is called by:
  3622 ;;		_Analog_read_percent
  3623 ;;		_Analog_read_voltage
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627     03BD                     ___fltol:	
  3628                           ;psect for function ___fltol
  3629                           
  3630     03BD                     l1551:	
  3631                           ;incstack = 0
  3632                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3633                           
  3634     03BD  1003               	clrc
  3635     03BE  0140               	movlb	0	; select bank0
  3636     03BF  0D42               	rlf	___fltol@f1+2,w
  3637     03C0  0D43               	rlf	___fltol@f1+3,w
  3638     03C1  00FB               	movwf	___fltol@exp1
  3639     03C2  087B               	movf	___fltol@exp1,w
  3640     03C3  1D03               	btfss	3,2
  3641     03C4  2BC6               	goto	u961
  3642     03C5  2BC7               	goto	u960
  3643     03C6                     u961:
  3644     03C6  2BD0               	goto	l1557
  3645     03C7                     u960:
  3646     03C7                     l1553:
  3647     03C7  3000               	movlw	0
  3648     03C8  00C3               	movwf	?___fltol+3
  3649     03C9  3000               	movlw	0
  3650     03CA  00C2               	movwf	?___fltol+2
  3651     03CB  3000               	movlw	0
  3652     03CC  00C1               	movwf	?___fltol+1
  3653     03CD  3000               	movlw	0
  3654     03CE  00C0               	movwf	?___fltol
  3655     03CF  2C2D               	goto	l507
  3656     03D0                     l1557:
  3657     03D0  0840               	movf	___fltol@f1,w
  3658     03D1  00C4               	movwf	??___fltol
  3659     03D2  0841               	movf	___fltol@f1+1,w
  3660     03D3  00C5               	movwf	??___fltol+1
  3661     03D4  0842               	movf	___fltol@f1+2,w
  3662     03D5  00C6               	movwf	??___fltol+2
  3663     03D6  0843               	movf	___fltol@f1+3,w
  3664     03D7  00C7               	movwf	??___fltol+3
  3665     03D8  301F               	movlw	31
  3666     03D9                     u975:
  3667     03D9  36C7               	lsrf	??___fltol+3,f
  3668     03DA  0CC6               	rrf	??___fltol+2,f
  3669     03DB  0CC5               	rrf	??___fltol+1,f
  3670     03DC  0CC4               	rrf	??___fltol,f
  3671     03DD                     u970:
  3672     03DD  0B89               	decfsz	9,f
  3673     03DE  2BD9               	goto	u975
  3674     03DF  0844               	movf	??___fltol,w
  3675     03E0  00FA               	movwf	___fltol@sign1
  3676     03E1                     l1559:
  3677     03E1  17C2               	bsf	___fltol@f1+2,7
  3678     03E2                     l1561:
  3679     03E2  30FF               	movlw	255
  3680     03E3  05C0               	andwf	___fltol@f1,f
  3681     03E4  30FF               	movlw	255
  3682     03E5  05C1               	andwf	___fltol@f1+1,f
  3683     03E6  30FF               	movlw	255
  3684     03E7  05C2               	andwf	___fltol@f1+2,f
  3685     03E8  3000               	movlw	0
  3686     03E9  05C3               	andwf	___fltol@f1+3,f
  3687     03EA                     l1563:
  3688     03EA  3096               	movlw	150
  3689     03EB  02FB               	subwf	___fltol@exp1,f
  3690     03EC                     l1565:
  3691     03EC  1FFB               	btfss	___fltol@exp1,7
  3692     03ED  2BEF               	goto	u981
  3693     03EE  2BF0               	goto	u980
  3694     03EF                     u981:
  3695     03EF  2C08               	goto	l1575
  3696     03F0                     u980:
  3697     03F0                     l1567:
  3698     03F0  087B               	movf	___fltol@exp1,w
  3699     03F1  3A80               	xorlw	128
  3700     03F2  3E97               	addlw	151
  3701     03F3  1803               	skipnc
  3702     03F4  2BF6               	goto	u991
  3703     03F5  2BF7               	goto	u990
  3704     03F6                     u991:
  3705     03F6  2BF8               	goto	l1573
  3706     03F7                     u990:
  3707     03F7  2BC7               	goto	l1553
  3708     03F8                     l1573:
  3709     03F8  3001               	movlw	1
  3710     03F9                     u1005:
  3711     03F9  36C3               	lsrf	___fltol@f1+3,f
  3712     03FA  0CC2               	rrf	___fltol@f1+2,f
  3713     03FB  0CC1               	rrf	___fltol@f1+1,f
  3714     03FC  0CC0               	rrf	___fltol@f1,f
  3715     03FD  0B89               	decfsz	9,f
  3716     03FE  2BF9               	goto	u1005
  3717     03FF  3001               	movlw	1
  3718     0400  00C4               	movwf	??___fltol
  3719     0401  0844               	movf	??___fltol,w
  3720     0402  07FB               	addwf	___fltol@exp1,f
  3721     0403  1D03               	btfss	3,2
  3722     0404  2C06               	goto	u1011
  3723     0405  2C07               	goto	u1010
  3724     0406                     u1011:
  3725     0406  2BF8               	goto	l1573
  3726     0407                     u1010:
  3727     0407  2C1D               	goto	l1583
  3728     0408                     l1575:
  3729     0408  3020               	movlw	32
  3730     0409  027B               	subwf	___fltol@exp1,w
  3731     040A  1C03               	skipc
  3732     040B  2C0D               	goto	u1021
  3733     040C  2C0E               	goto	u1020
  3734     040D                     u1021:
  3735     040D  2C18               	goto	l514
  3736     040E                     u1020:
  3737     040E  2BC7               	goto	l1553
  3738     040F                     l1581:
  3739     040F  3001               	movlw	1
  3740     0410                     u1035:
  3741     0410  35C0               	lslf	___fltol@f1,f
  3742     0411  0DC1               	rlf	___fltol@f1+1,f
  3743     0412  0DC2               	rlf	___fltol@f1+2,f
  3744     0413  0DC3               	rlf	___fltol@f1+3,f
  3745     0414  0B89               	decfsz	9,f
  3746     0415  2C10               	goto	u1035
  3747     0416  3001               	movlw	1
  3748     0417  02FB               	subwf	___fltol@exp1,f
  3749     0418                     l514:
  3750     0418  087B               	movf	___fltol@exp1,w
  3751     0419  1D03               	btfss	3,2
  3752     041A  2C1C               	goto	u1041
  3753     041B  2C1D               	goto	u1040
  3754     041C                     u1041:
  3755     041C  2C0F               	goto	l1581
  3756     041D                     u1040:
  3757     041D                     l1583:
  3758     041D  087A               	movf	___fltol@sign1,w
  3759     041E  1903               	btfsc	3,2
  3760     041F  2C21               	goto	u1051
  3761     0420  2C22               	goto	u1050
  3762     0421                     u1051:
  3763     0421  2C2D               	goto	l517
  3764     0422                     u1050:
  3765     0422                     l1585:
  3766     0422  09C0               	comf	___fltol@f1,f
  3767     0423  09C1               	comf	___fltol@f1+1,f
  3768     0424  09C2               	comf	___fltol@f1+2,f
  3769     0425  09C3               	comf	___fltol@f1+3,f
  3770     0426  0AC0               	incf	___fltol@f1,f
  3771     0427  1903               	skipnz
  3772     0428  0AC1               	incf	___fltol@f1+1,f
  3773     0429  1903               	skipnz
  3774     042A  0AC2               	incf	___fltol@f1+2,f
  3775     042B  1903               	skipnz
  3776     042C  0AC3               	incf	___fltol@f1+3,f
  3777     042D                     l517:
  3778     042D                     l507:
  3779     042D  0008               	return
  3780     042E                     __end_of___fltol:
  3781                           
  3782                           	psect	text27
  3783     0041                     __ptext27:	
  3784 ;; *************** function ___flmul *****************
  3785 ;; Defined at:
  3786 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  3787 ;; Parameters:    Size  Location     Type
  3788 ;;  b               4    6[BANK0 ] long 
  3789 ;;  a               4   10[BANK0 ] long 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;  prod            4   26[BANK0 ] struct .
  3792 ;;  grs             4   20[BANK0 ] unsigned long 
  3793 ;;  temp            2   30[BANK0 ] struct .
  3794 ;;  bexp            1   25[BANK0 ] unsigned char 
  3795 ;;  aexp            1   24[BANK0 ] unsigned char 
  3796 ;;  sign            1   19[BANK0 ] unsigned char 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  4    6[BANK0 ] unsigned char 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, status,0, pclath, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3806 ;;      Params:         0       8       0       0       0       0       0       0
  3807 ;;      Locals:         0      13       0       0       0       0       0       0
  3808 ;;      Temps:          0       5       0       0       0       0       0       0
  3809 ;;      Totals:         0      26       0       0       0       0       0       0
  3810 ;;Total ram usage:       26 bytes
  3811 ;; Hardware stack levels used: 1
  3812 ;; Hardware stack levels required when called: 2
  3813 ;; This function calls:
  3814 ;;		__Umul8_16
  3815 ;; This function is called by:
  3816 ;;		_Analog_read_percent
  3817 ;;		_I2C_SHT4x_read
  3818 ;;		_Analog_read_voltage
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822     0041                     ___flmul:	
  3823                           ;psect for function ___flmul
  3824                           
  3825     0041                     l1587:	
  3826                           ;incstack = 0
  3827                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  3828                           
  3829     0041  0140               	movlb	0	; select bank0
  3830     0042  0829               	movf	___flmul@b+3,w
  3831     0043  3980               	andlw	128
  3832     0044  00B3               	movwf	___flmul@sign
  3833     0045                     l1589:
  3834     0045  3529               	lslf	___flmul@b+3,w
  3835     0046  00B9               	movwf	___flmul@bexp
  3836     0047                     l1591:
  3837     0047  1FA8               	btfss	___flmul@b+2,7
  3838     0048  284A               	goto	u1061
  3839     0049  284B               	goto	u1060
  3840     004A                     u1061:
  3841     004A  284C               	goto	l1595
  3842     004B                     u1060:
  3843     004B                     l1593:
  3844     004B  1439               	bsf	___flmul@bexp,0
  3845     004C                     l1595:
  3846     004C  0839               	movf	___flmul@bexp,w
  3847     004D  1903               	btfsc	3,2
  3848     004E  2850               	goto	u1071
  3849     004F  2851               	goto	u1070
  3850     0050                     u1071:
  3851     0050  2860               	goto	l1603
  3852     0051                     u1070:
  3853     0051                     l1597:
  3854     0051  0A39               	incf	___flmul@bexp,w
  3855     0052  1D03               	btfss	3,2
  3856     0053  2855               	goto	u1081
  3857     0054  2856               	goto	u1080
  3858     0055                     u1081:
  3859     0055  285E               	goto	l1601
  3860     0056                     u1080:
  3861     0056                     l1599:
  3862     0056  3000               	movlw	0
  3863     0057  00A9               	movwf	___flmul@b+3
  3864     0058  3000               	movlw	0
  3865     0059  00A8               	movwf	___flmul@b+2
  3866     005A  3000               	movlw	0
  3867     005B  00A7               	movwf	___flmul@b+1
  3868     005C  3000               	movlw	0
  3869     005D  00A6               	movwf	___flmul@b
  3870     005E                     l1601:
  3871     005E  17A8               	bsf	___flmul@b+2,7
  3872     005F  2868               	goto	l1605
  3873     0060                     l1603:
  3874     0060  3000               	movlw	0
  3875     0061  00A9               	movwf	___flmul@b+3
  3876     0062  3000               	movlw	0
  3877     0063  00A8               	movwf	___flmul@b+2
  3878     0064  3000               	movlw	0
  3879     0065  00A7               	movwf	___flmul@b+1
  3880     0066  3000               	movlw	0
  3881     0067  00A6               	movwf	___flmul@b
  3882     0068                     l1605:
  3883     0068  082D               	movf	___flmul@a+3,w
  3884     0069  3980               	andlw	128
  3885     006A  00AE               	movwf	??___flmul
  3886     006B  082E               	movf	??___flmul,w
  3887     006C  06B3               	xorwf	___flmul@sign,f
  3888     006D                     l1607:
  3889     006D  352D               	lslf	___flmul@a+3,w
  3890     006E  00B8               	movwf	___flmul@aexp
  3891     006F                     l1609:
  3892     006F  1FAC               	btfss	___flmul@a+2,7
  3893     0070  2872               	goto	u1091
  3894     0071  2873               	goto	u1090
  3895     0072                     u1091:
  3896     0072  2874               	goto	l1613
  3897     0073                     u1090:
  3898     0073                     l1611:
  3899     0073  1438               	bsf	___flmul@aexp,0
  3900     0074                     l1613:
  3901     0074  0838               	movf	___flmul@aexp,w
  3902     0075  1903               	btfsc	3,2
  3903     0076  2878               	goto	u1101
  3904     0077  2879               	goto	u1100
  3905     0078                     u1101:
  3906     0078  2888               	goto	l1621
  3907     0079                     u1100:
  3908     0079                     l1615:
  3909     0079  0A38               	incf	___flmul@aexp,w
  3910     007A  1D03               	btfss	3,2
  3911     007B  287D               	goto	u1111
  3912     007C  287E               	goto	u1110
  3913     007D                     u1111:
  3914     007D  2886               	goto	l1619
  3915     007E                     u1110:
  3916     007E                     l1617:
  3917     007E  3000               	movlw	0
  3918     007F  00AD               	movwf	___flmul@a+3
  3919     0080  3000               	movlw	0
  3920     0081  00AC               	movwf	___flmul@a+2
  3921     0082  3000               	movlw	0
  3922     0083  00AB               	movwf	___flmul@a+1
  3923     0084  3000               	movlw	0
  3924     0085  00AA               	movwf	___flmul@a
  3925     0086                     l1619:
  3926     0086  17AC               	bsf	___flmul@a+2,7
  3927     0087  2890               	goto	l1623
  3928     0088                     l1621:
  3929     0088  3000               	movlw	0
  3930     0089  00AD               	movwf	___flmul@a+3
  3931     008A  3000               	movlw	0
  3932     008B  00AC               	movwf	___flmul@a+2
  3933     008C  3000               	movlw	0
  3934     008D  00AB               	movwf	___flmul@a+1
  3935     008E  3000               	movlw	0
  3936     008F  00AA               	movwf	___flmul@a
  3937     0090                     l1623:
  3938     0090  0838               	movf	___flmul@aexp,w
  3939     0091  1903               	btfsc	3,2
  3940     0092  2894               	goto	u1121
  3941     0093  2895               	goto	u1120
  3942     0094                     u1121:
  3943     0094  289A               	goto	l1627
  3944     0095                     u1120:
  3945     0095                     l1625:
  3946     0095  0839               	movf	___flmul@bexp,w
  3947     0096  1D03               	btfss	3,2
  3948     0097  2899               	goto	u1131
  3949     0098  289A               	goto	u1130
  3950     0099                     u1131:
  3951     0099  28A3               	goto	l1631
  3952     009A                     u1130:
  3953     009A                     l1627:
  3954     009A  3000               	movlw	0
  3955     009B  00A9               	movwf	?___flmul+3
  3956     009C  3000               	movlw	0
  3957     009D  00A8               	movwf	?___flmul+2
  3958     009E  3000               	movlw	0
  3959     009F  00A7               	movwf	?___flmul+1
  3960     00A0  3000               	movlw	0
  3961     00A1  00A6               	movwf	?___flmul
  3962     00A2  2A7B               	goto	l710
  3963     00A3                     l1631:
  3964     00A3  0826               	movf	___flmul@b,w
  3965     00A4  00F1               	movwf	__Umul8_16@multiplicand
  3966     00A5  082C               	movf	___flmul@a+2,w
  3967     00A6  3186  265D  3180   	fcall	__Umul8_16
  3968     00A9  0872               	movf	?__Umul8_16+1,w
  3969     00AA  0140               	movlb	0	; select bank0
  3970     00AB  00BF               	movwf	___flmul@temp+1
  3971     00AC  0871               	movf	?__Umul8_16,w
  3972     00AD  00BE               	movwf	___flmul@temp
  3973     00AE                     l1633:
  3974     00AE  083E               	movf	___flmul@temp,w
  3975     00AF  00AE               	movwf	??___flmul
  3976     00B0  01AF               	clrf	??___flmul+1
  3977     00B1  01B0               	clrf	??___flmul+2
  3978     00B2  01B1               	clrf	??___flmul+3
  3979     00B3  0831               	movf	??___flmul+3,w
  3980     00B4  00B7               	movwf	___flmul@grs+3
  3981     00B5  0830               	movf	??___flmul+2,w
  3982     00B6  00B6               	movwf	___flmul@grs+2
  3983     00B7  082F               	movf	??___flmul+1,w
  3984     00B8  00B5               	movwf	___flmul@grs+1
  3985     00B9  082E               	movf	??___flmul,w
  3986     00BA  00B4               	movwf	___flmul@grs
  3987     00BB                     l1635:
  3988     00BB  083F               	movf	___flmul@temp+1,w
  3989     00BC  00AE               	movwf	??___flmul
  3990     00BD  01AF               	clrf	??___flmul+1
  3991     00BE  01B0               	clrf	??___flmul+2
  3992     00BF  01B1               	clrf	??___flmul+3
  3993     00C0  0831               	movf	??___flmul+3,w
  3994     00C1  00BD               	movwf	___flmul@prod+3
  3995     00C2  0830               	movf	??___flmul+2,w
  3996     00C3  00BC               	movwf	___flmul@prod+2
  3997     00C4  082F               	movf	??___flmul+1,w
  3998     00C5  00BB               	movwf	___flmul@prod+1
  3999     00C6  082E               	movf	??___flmul,w
  4000     00C7  00BA               	movwf	___flmul@prod
  4001     00C8  0827               	movf	___flmul@b+1,w
  4002     00C9  00F1               	movwf	__Umul8_16@multiplicand
  4003     00CA  082B               	movf	___flmul@a+1,w
  4004     00CB  3186  265D  3180   	fcall	__Umul8_16
  4005     00CE  0872               	movf	?__Umul8_16+1,w
  4006     00CF  0140               	movlb	0	; select bank0
  4007     00D0  00BF               	movwf	___flmul@temp+1
  4008     00D1  0871               	movf	?__Umul8_16,w
  4009     00D2  00BE               	movwf	___flmul@temp
  4010     00D3                     l1637:
  4011     00D3  083E               	movf	___flmul@temp,w
  4012     00D4  00AE               	movwf	??___flmul
  4013     00D5  01AF               	clrf	??___flmul+1
  4014     00D6  01B0               	clrf	??___flmul+2
  4015     00D7  01B1               	clrf	??___flmul+3
  4016     00D8  082E               	movf	??___flmul,w
  4017     00D9  07B4               	addwf	___flmul@grs,f
  4018     00DA  082F               	movf	??___flmul+1,w
  4019     00DB  3DB5               	addwfc	___flmul@grs+1,f
  4020     00DC  0830               	movf	??___flmul+2,w
  4021     00DD  3DB6               	addwfc	___flmul@grs+2,f
  4022     00DE  0831               	movf	??___flmul+3,w
  4023     00DF  3DB7               	addwfc	___flmul@grs+3,f
  4024     00E0                     l1639:
  4025     00E0  083F               	movf	___flmul@temp+1,w
  4026     00E1  00AE               	movwf	??___flmul
  4027     00E2  01AF               	clrf	??___flmul+1
  4028     00E3  01B0               	clrf	??___flmul+2
  4029     00E4  01B1               	clrf	??___flmul+3
  4030     00E5  082E               	movf	??___flmul,w
  4031     00E6  07BA               	addwf	___flmul@prod,f
  4032     00E7  082F               	movf	??___flmul+1,w
  4033     00E8  3DBB               	addwfc	___flmul@prod+1,f
  4034     00E9  0830               	movf	??___flmul+2,w
  4035     00EA  3DBC               	addwfc	___flmul@prod+2,f
  4036     00EB  0831               	movf	??___flmul+3,w
  4037     00EC  3DBD               	addwfc	___flmul@prod+3,f
  4038     00ED  0828               	movf	___flmul@b+2,w
  4039     00EE  00F1               	movwf	__Umul8_16@multiplicand
  4040     00EF  082A               	movf	___flmul@a,w
  4041     00F0  3186  265D  3180   	fcall	__Umul8_16
  4042     00F3  0872               	movf	?__Umul8_16+1,w
  4043     00F4  0140               	movlb	0	; select bank0
  4044     00F5  00BF               	movwf	___flmul@temp+1
  4045     00F6  0871               	movf	?__Umul8_16,w
  4046     00F7  00BE               	movwf	___flmul@temp
  4047     00F8                     l1641:
  4048     00F8  083E               	movf	___flmul@temp,w
  4049     00F9  00AE               	movwf	??___flmul
  4050     00FA  01AF               	clrf	??___flmul+1
  4051     00FB  01B0               	clrf	??___flmul+2
  4052     00FC  01B1               	clrf	??___flmul+3
  4053     00FD  082E               	movf	??___flmul,w
  4054     00FE  07B4               	addwf	___flmul@grs,f
  4055     00FF  082F               	movf	??___flmul+1,w
  4056     0100  3DB5               	addwfc	___flmul@grs+1,f
  4057     0101  0830               	movf	??___flmul+2,w
  4058     0102  3DB6               	addwfc	___flmul@grs+2,f
  4059     0103  0831               	movf	??___flmul+3,w
  4060     0104  3DB7               	addwfc	___flmul@grs+3,f
  4061     0105                     l1643:
  4062     0105  083F               	movf	___flmul@temp+1,w
  4063     0106  00AE               	movwf	??___flmul
  4064     0107  01AF               	clrf	??___flmul+1
  4065     0108  01B0               	clrf	??___flmul+2
  4066     0109  01B1               	clrf	??___flmul+3
  4067     010A  082E               	movf	??___flmul,w
  4068     010B  07BA               	addwf	___flmul@prod,f
  4069     010C  082F               	movf	??___flmul+1,w
  4070     010D  3DBB               	addwfc	___flmul@prod+1,f
  4071     010E  0830               	movf	??___flmul+2,w
  4072     010F  3DBC               	addwfc	___flmul@prod+2,f
  4073     0110  0831               	movf	??___flmul+3,w
  4074     0111  3DBD               	addwfc	___flmul@prod+3,f
  4075     0112                     l1645:
  4076     0112  3008               	movlw	8
  4077     0113                     u1145:
  4078     0113  35B4               	lslf	___flmul@grs,f
  4079     0114  0DB5               	rlf	___flmul@grs+1,f
  4080     0115  0DB6               	rlf	___flmul@grs+2,f
  4081     0116  0DB7               	rlf	___flmul@grs+3,f
  4082     0117  0B89               	decfsz	9,f
  4083     0118  2913               	goto	u1145
  4084     0119                     l1647:
  4085     0119  0827               	movf	___flmul@b+1,w
  4086     011A  00F1               	movwf	__Umul8_16@multiplicand
  4087     011B  082A               	movf	___flmul@a,w
  4088     011C  3186  265D  3180   	fcall	__Umul8_16
  4089     011F  0872               	movf	?__Umul8_16+1,w
  4090     0120  0140               	movlb	0	; select bank0
  4091     0121  00BF               	movwf	___flmul@temp+1
  4092     0122  0871               	movf	?__Umul8_16,w
  4093     0123  00BE               	movwf	___flmul@temp
  4094     0124                     l1649:
  4095     0124  083E               	movf	___flmul@temp,w
  4096     0125  07B4               	addwf	___flmul@grs,f
  4097     0126  083F               	movf	___flmul@temp+1,w
  4098     0127  3DB5               	addwfc	___flmul@grs+1,f
  4099     0128  3000               	movlw	0
  4100     0129  3DB6               	addwfc	___flmul@grs+2,f
  4101     012A  3DB7               	addwfc	___flmul@grs+3,f
  4102     012B                     l1651:
  4103     012B  0826               	movf	___flmul@b,w
  4104     012C  00F1               	movwf	__Umul8_16@multiplicand
  4105     012D  082B               	movf	___flmul@a+1,w
  4106     012E  3186  265D  3180   	fcall	__Umul8_16
  4107     0131  0872               	movf	?__Umul8_16+1,w
  4108     0132  0140               	movlb	0	; select bank0
  4109     0133  00BF               	movwf	___flmul@temp+1
  4110     0134  0871               	movf	?__Umul8_16,w
  4111     0135  00BE               	movwf	___flmul@temp
  4112     0136                     l1653:
  4113     0136  083E               	movf	___flmul@temp,w
  4114     0137  07B4               	addwf	___flmul@grs,f
  4115     0138  083F               	movf	___flmul@temp+1,w
  4116     0139  3DB5               	addwfc	___flmul@grs+1,f
  4117     013A  3000               	movlw	0
  4118     013B  3DB6               	addwfc	___flmul@grs+2,f
  4119     013C  3DB7               	addwfc	___flmul@grs+3,f
  4120     013D                     l1655:
  4121     013D  3008               	movlw	8
  4122     013E                     u1155:
  4123     013E  35B4               	lslf	___flmul@grs,f
  4124     013F  0DB5               	rlf	___flmul@grs+1,f
  4125     0140  0DB6               	rlf	___flmul@grs+2,f
  4126     0141  0DB7               	rlf	___flmul@grs+3,f
  4127     0142  0B89               	decfsz	9,f
  4128     0143  293E               	goto	u1155
  4129     0144  0826               	movf	___flmul@b,w
  4130     0145  00F1               	movwf	__Umul8_16@multiplicand
  4131     0146  082A               	movf	___flmul@a,w
  4132     0147  3186  265D  3180   	fcall	__Umul8_16
  4133     014A  0872               	movf	?__Umul8_16+1,w
  4134     014B  0140               	movlb	0	; select bank0
  4135     014C  00BF               	movwf	___flmul@temp+1
  4136     014D  0871               	movf	?__Umul8_16,w
  4137     014E  00BE               	movwf	___flmul@temp
  4138     014F                     l1657:
  4139     014F  083E               	movf	___flmul@temp,w
  4140     0150  07B4               	addwf	___flmul@grs,f
  4141     0151  083F               	movf	___flmul@temp+1,w
  4142     0152  3DB5               	addwfc	___flmul@grs+1,f
  4143     0153  3000               	movlw	0
  4144     0154  3DB6               	addwfc	___flmul@grs+2,f
  4145     0155  3DB7               	addwfc	___flmul@grs+3,f
  4146     0156                     l1659:
  4147     0156  0827               	movf	___flmul@b+1,w
  4148     0157  00F1               	movwf	__Umul8_16@multiplicand
  4149     0158  082C               	movf	___flmul@a+2,w
  4150     0159  3186  265D  3180   	fcall	__Umul8_16
  4151     015C  0872               	movf	?__Umul8_16+1,w
  4152     015D  0140               	movlb	0	; select bank0
  4153     015E  00BF               	movwf	___flmul@temp+1
  4154     015F  0871               	movf	?__Umul8_16,w
  4155     0160  00BE               	movwf	___flmul@temp
  4156     0161  083E               	movf	___flmul@temp,w
  4157     0162  07BA               	addwf	___flmul@prod,f
  4158     0163  083F               	movf	___flmul@temp+1,w
  4159     0164  3DBB               	addwfc	___flmul@prod+1,f
  4160     0165  3000               	movlw	0
  4161     0166  3DBC               	addwfc	___flmul@prod+2,f
  4162     0167  3DBD               	addwfc	___flmul@prod+3,f
  4163     0168                     l1661:
  4164     0168  0828               	movf	___flmul@b+2,w
  4165     0169  00F1               	movwf	__Umul8_16@multiplicand
  4166     016A  082B               	movf	___flmul@a+1,w
  4167     016B  3186  265D  3180   	fcall	__Umul8_16
  4168     016E  0872               	movf	?__Umul8_16+1,w
  4169     016F  0140               	movlb	0	; select bank0
  4170     0170  00BF               	movwf	___flmul@temp+1
  4171     0171  0871               	movf	?__Umul8_16,w
  4172     0172  00BE               	movwf	___flmul@temp
  4173     0173                     l1663:
  4174     0173  083E               	movf	___flmul@temp,w
  4175     0174  07BA               	addwf	___flmul@prod,f
  4176     0175  083F               	movf	___flmul@temp+1,w
  4177     0176  3DBB               	addwfc	___flmul@prod+1,f
  4178     0177  3000               	movlw	0
  4179     0178  3DBC               	addwfc	___flmul@prod+2,f
  4180     0179  3DBD               	addwfc	___flmul@prod+3,f
  4181     017A  0828               	movf	___flmul@b+2,w
  4182     017B  00F1               	movwf	__Umul8_16@multiplicand
  4183     017C  082C               	movf	___flmul@a+2,w
  4184     017D  3186  265D  3180   	fcall	__Umul8_16
  4185     0180  0872               	movf	?__Umul8_16+1,w
  4186     0181  0140               	movlb	0	; select bank0
  4187     0182  00BF               	movwf	___flmul@temp+1
  4188     0183  0871               	movf	?__Umul8_16,w
  4189     0184  00BE               	movwf	___flmul@temp
  4190     0185                     l1665:
  4191     0185  083E               	movf	___flmul@temp,w
  4192     0186  00AE               	movwf	??___flmul
  4193     0187  083F               	movf	___flmul@temp+1,w
  4194     0188  00AF               	movwf	??___flmul+1
  4195     0189  01B0               	clrf	??___flmul+2
  4196     018A  01B1               	clrf	??___flmul+3
  4197     018B  3008               	movlw	8
  4198     018C                     u1165:
  4199     018C  35AE               	lslf	??___flmul,f
  4200     018D  0DAF               	rlf	??___flmul+1,f
  4201     018E  0DB0               	rlf	??___flmul+2,f
  4202     018F  0DB1               	rlf	??___flmul+3,f
  4203     0190                     u1160:
  4204     0190  0B89               	decfsz	9,f
  4205     0191  298C               	goto	u1165
  4206     0192  082E               	movf	??___flmul,w
  4207     0193  07BA               	addwf	___flmul@prod,f
  4208     0194  082F               	movf	??___flmul+1,w
  4209     0195  3DBB               	addwfc	___flmul@prod+1,f
  4210     0196  0830               	movf	??___flmul+2,w
  4211     0197  3DBC               	addwfc	___flmul@prod+2,f
  4212     0198  0831               	movf	??___flmul+3,w
  4213     0199  3DBD               	addwfc	___flmul@prod+3,f
  4214     019A                     l1667:
  4215     019A  0834               	movf	___flmul@grs,w
  4216     019B  00AE               	movwf	??___flmul
  4217     019C  0835               	movf	___flmul@grs+1,w
  4218     019D  00AF               	movwf	??___flmul+1
  4219     019E  0836               	movf	___flmul@grs+2,w
  4220     019F  00B0               	movwf	??___flmul+2
  4221     01A0  0837               	movf	___flmul@grs+3,w
  4222     01A1  00B1               	movwf	??___flmul+3
  4223     01A2  3018               	movlw	24
  4224     01A3                     u1175:
  4225     01A3  36B1               	lsrf	??___flmul+3,f
  4226     01A4  0CB0               	rrf	??___flmul+2,f
  4227     01A5  0CAF               	rrf	??___flmul+1,f
  4228     01A6  0CAE               	rrf	??___flmul,f
  4229     01A7                     u1170:
  4230     01A7  0B89               	decfsz	9,f
  4231     01A8  29A3               	goto	u1175
  4232     01A9  082E               	movf	??___flmul,w
  4233     01AA  07BA               	addwf	___flmul@prod,f
  4234     01AB  082F               	movf	??___flmul+1,w
  4235     01AC  3DBB               	addwfc	___flmul@prod+1,f
  4236     01AD  0830               	movf	??___flmul+2,w
  4237     01AE  3DBC               	addwfc	___flmul@prod+2,f
  4238     01AF  0831               	movf	??___flmul+3,w
  4239     01B0  3DBD               	addwfc	___flmul@prod+3,f
  4240     01B1                     l1669:
  4241     01B1  3008               	movlw	8
  4242     01B2                     u1185:
  4243     01B2  35B4               	lslf	___flmul@grs,f
  4244     01B3  0DB5               	rlf	___flmul@grs+1,f
  4245     01B4  0DB6               	rlf	___flmul@grs+2,f
  4246     01B5  0DB7               	rlf	___flmul@grs+3,f
  4247     01B6  0B89               	decfsz	9,f
  4248     01B7  29B2               	goto	u1185
  4249     01B8                     l1671:
  4250     01B8  0839               	movf	___flmul@bexp,w
  4251     01B9  0738               	addwf	___flmul@aexp,w
  4252     01BA  00AE               	movwf	??___flmul
  4253     01BB  01AF               	clrf	??___flmul+1
  4254     01BC  0DAF               	rlf	??___flmul+1,f
  4255     01BD  082E               	movf	??___flmul,w
  4256     01BE  3E82               	addlw	130
  4257     01BF  00BE               	movwf	___flmul@temp
  4258     01C0  30FF               	movlw	255
  4259     01C1  3D2F               	addwfc	??___flmul+1,w
  4260     01C2  00BF               	movwf	___flmul@temp+1
  4261     01C3  29DB               	goto	l1683
  4262     01C4                     l1673:
  4263     01C4  3001               	movlw	1
  4264     01C5                     u1195:
  4265     01C5  35BA               	lslf	___flmul@prod,f
  4266     01C6  0DBB               	rlf	___flmul@prod+1,f
  4267     01C7  0DBC               	rlf	___flmul@prod+2,f
  4268     01C8  0DBD               	rlf	___flmul@prod+3,f
  4269     01C9  0B89               	decfsz	9,f
  4270     01CA  29C5               	goto	u1195
  4271     01CB                     l1675:
  4272     01CB  1FB7               	btfss	___flmul@grs+3,7
  4273     01CC  29CE               	goto	u1201
  4274     01CD  29CF               	goto	u1200
  4275     01CE                     u1201:
  4276     01CE  29D0               	goto	l1679
  4277     01CF                     u1200:
  4278     01CF                     l1677:
  4279     01CF  143A               	bsf	___flmul@prod,0
  4280     01D0                     l1679:
  4281     01D0  3001               	movlw	1
  4282     01D1                     u1215:
  4283     01D1  35B4               	lslf	___flmul@grs,f
  4284     01D2  0DB5               	rlf	___flmul@grs+1,f
  4285     01D3  0DB6               	rlf	___flmul@grs+2,f
  4286     01D4  0DB7               	rlf	___flmul@grs+3,f
  4287     01D5  0B89               	decfsz	9,f
  4288     01D6  29D1               	goto	u1215
  4289     01D7                     l1681:
  4290     01D7  30FF               	movlw	255
  4291     01D8  07BE               	addwf	___flmul@temp,f
  4292     01D9  30FF               	movlw	255
  4293     01DA  3DBF               	addwfc	___flmul@temp+1,f
  4294     01DB                     l1683:
  4295     01DB  1FBC               	btfss	___flmul@prod+2,7
  4296     01DC  29DE               	goto	u1221
  4297     01DD  29DF               	goto	u1220
  4298     01DE                     u1221:
  4299     01DE  29C4               	goto	l1673
  4300     01DF                     u1220:
  4301     01DF                     l1685:
  4302     01DF  01B8               	clrf	___flmul@aexp
  4303     01E0                     l1687:
  4304     01E0  1FB7               	btfss	___flmul@grs+3,7
  4305     01E1  29E3               	goto	u1231
  4306     01E2  29E4               	goto	u1230
  4307     01E3                     u1231:
  4308     01E3  2A00               	goto	l1695
  4309     01E4                     u1230:
  4310     01E4                     l1689:
  4311     01E4  30FF               	movlw	255
  4312     01E5  0534               	andwf	___flmul@grs,w
  4313     01E6  00AE               	movwf	??___flmul
  4314     01E7  30FF               	movlw	255
  4315     01E8  0535               	andwf	___flmul@grs+1,w
  4316     01E9  00AF               	movwf	??___flmul+1
  4317     01EA  30FF               	movlw	255
  4318     01EB  0536               	andwf	___flmul@grs+2,w
  4319     01EC  00B0               	movwf	??___flmul+2
  4320     01ED  307F               	movlw	127
  4321     01EE  0537               	andwf	___flmul@grs+3,w
  4322     01EF  00B1               	movwf	??___flmul+3
  4323     01F0  0831               	movf	??___flmul+3,w
  4324     01F1  0430               	iorwf	??___flmul+2,w
  4325     01F2  042F               	iorwf	??___flmul+1,w
  4326     01F3  042E               	iorwf	??___flmul,w
  4327     01F4  1903               	skipnz
  4328     01F5  29F7               	goto	u1241
  4329     01F6  29F8               	goto	u1240
  4330     01F7                     u1241:
  4331     01F7  29FB               	goto	l716
  4332     01F8                     u1240:
  4333     01F8                     l1691:
  4334     01F8  01B8               	clrf	___flmul@aexp
  4335     01F9  0AB8               	incf	___flmul@aexp,f
  4336     01FA  2A00               	goto	l1695
  4337     01FB                     l716:
  4338     01FB  1C3A               	btfss	___flmul@prod,0
  4339     01FC  29FE               	goto	u1251
  4340     01FD  29FF               	goto	u1250
  4341     01FE                     u1251:
  4342     01FE  2A00               	goto	l1695
  4343     01FF                     u1250:
  4344     01FF  29F8               	goto	l1691
  4345     0200                     l1695:
  4346     0200  0838               	movf	___flmul@aexp,w
  4347     0201  1903               	btfsc	3,2
  4348     0202  2A04               	goto	u1261
  4349     0203  2A05               	goto	u1260
  4350     0204                     u1261:
  4351     0204  2A2D               	goto	l1705
  4352     0205                     u1260:
  4353     0205                     l1697:
  4354     0205  3001               	movlw	1
  4355     0206  07BA               	addwf	___flmul@prod,f
  4356     0207  3000               	movlw	0
  4357     0208  3DBB               	addwfc	___flmul@prod+1,f
  4358     0209  3000               	movlw	0
  4359     020A  3DBC               	addwfc	___flmul@prod+2,f
  4360     020B  3000               	movlw	0
  4361     020C  3DBD               	addwfc	___flmul@prod+3,f
  4362     020D                     l1699:
  4363     020D  1C3D               	btfss	___flmul@prod+3,0
  4364     020E  2A10               	goto	u1271
  4365     020F  2A11               	goto	u1270
  4366     0210                     u1271:
  4367     0210  2A2D               	goto	l1705
  4368     0211                     u1270:
  4369     0211                     l1701:
  4370     0211  083A               	movf	___flmul@prod,w
  4371     0212  00AE               	movwf	??___flmul
  4372     0213  083B               	movf	___flmul@prod+1,w
  4373     0214  00AF               	movwf	??___flmul+1
  4374     0215  083C               	movf	___flmul@prod+2,w
  4375     0216  00B0               	movwf	??___flmul+2
  4376     0217  083D               	movf	___flmul@prod+3,w
  4377     0218  00B1               	movwf	??___flmul+3
  4378     0219  3001               	movlw	1
  4379     021A  00B2               	movwf	??___flmul+4
  4380     021B                     u1285:
  4381     021B  37B1               	asrf	??___flmul+3,f
  4382     021C  0CB0               	rrf	??___flmul+2,f
  4383     021D  0CAF               	rrf	??___flmul+1,f
  4384     021E  0CAE               	rrf	??___flmul,f
  4385     021F                     u1280:
  4386     021F  0BB2               	decfsz	??___flmul+4,f
  4387     0220  2A1B               	goto	u1285
  4388     0221  0831               	movf	??___flmul+3,w
  4389     0222  00BD               	movwf	___flmul@prod+3
  4390     0223  0830               	movf	??___flmul+2,w
  4391     0224  00BC               	movwf	___flmul@prod+2
  4392     0225  082F               	movf	??___flmul+1,w
  4393     0226  00BB               	movwf	___flmul@prod+1
  4394     0227  082E               	movf	??___flmul,w
  4395     0228  00BA               	movwf	___flmul@prod
  4396     0229                     l1703:
  4397     0229  3001               	movlw	1
  4398     022A  07BE               	addwf	___flmul@temp,f
  4399     022B  3000               	movlw	0
  4400     022C  3DBF               	addwfc	___flmul@temp+1,f
  4401     022D                     l1705:
  4402     022D  083F               	movf	___flmul@temp+1,w
  4403     022E  3A80               	xorlw	128
  4404     022F  00AE               	movwf	??___flmul
  4405     0230  3080               	movlw	128
  4406     0231  022E               	subwf	??___flmul,w
  4407     0232  1D03               	skipz
  4408     0233  2A36               	goto	u1295
  4409     0234  30FF               	movlw	255
  4410     0235  023E               	subwf	___flmul@temp,w
  4411     0236                     u1295:
  4412     0236  1C03               	skipc
  4413     0237  2A39               	goto	u1291
  4414     0238  2A3A               	goto	u1290
  4415     0239                     u1291:
  4416     0239  2A44               	goto	l1709
  4417     023A                     u1290:
  4418     023A                     l1707:
  4419     023A  307F               	movlw	127
  4420     023B  0140               	movlb	0	; select bank0
  4421     023C  00BD               	movwf	___flmul@prod+3
  4422     023D  3080               	movlw	128
  4423     023E  00BC               	movwf	___flmul@prod+2
  4424     023F  3000               	movlw	0
  4425     0240  00BB               	movwf	___flmul@prod+1
  4426     0241  3000               	movlw	0
  4427     0242  00BA               	movwf	___flmul@prod
  4428     0243  2A6F               	goto	l722
  4429     0244                     l1709:
  4430     0244  0140               	movlb	0	; select bank0
  4431     0245  083F               	movf	___flmul@temp+1,w
  4432     0246  3A80               	xorlw	128
  4433     0247  00AE               	movwf	??___flmul
  4434     0248  3080               	movlw	128
  4435     0249  022E               	subwf	??___flmul,w
  4436     024A  1D03               	skipz
  4437     024B  2A4E               	goto	u1305
  4438     024C  3001               	movlw	1
  4439     024D  023E               	subwf	___flmul@temp,w
  4440     024E                     u1305:
  4441     024E  1803               	skipnc
  4442     024F  2A51               	goto	u1301
  4443     0250  2A52               	goto	u1300
  4444     0251                     u1301:
  4445     0251  2A5D               	goto	l1715
  4446     0252                     u1300:
  4447     0252                     l1711:
  4448     0252  3000               	movlw	0
  4449     0253  0140               	movlb	0	; select bank0
  4450     0254  00BD               	movwf	___flmul@prod+3
  4451     0255  3000               	movlw	0
  4452     0256  00BC               	movwf	___flmul@prod+2
  4453     0257  3000               	movlw	0
  4454     0258  00BB               	movwf	___flmul@prod+1
  4455     0259  3000               	movlw	0
  4456     025A  00BA               	movwf	___flmul@prod
  4457     025B                     l1713:
  4458     025B  01B3               	clrf	___flmul@sign
  4459     025C  2A6F               	goto	l722
  4460     025D                     l1715:
  4461     025D  0140               	movlb	0	; select bank0
  4462     025E  083E               	movf	___flmul@temp,w
  4463     025F  00B9               	movwf	___flmul@bexp
  4464     0260  30FF               	movlw	255
  4465     0261  05BA               	andwf	___flmul@prod,f
  4466     0262  30FF               	movlw	255
  4467     0263  05BB               	andwf	___flmul@prod+1,f
  4468     0264  307F               	movlw	127
  4469     0265  05BC               	andwf	___flmul@prod+2,f
  4470     0266  3000               	movlw	0
  4471     0267  05BD               	andwf	___flmul@prod+3,f
  4472     0268                     l1717:
  4473     0268  1C39               	btfss	___flmul@bexp,0
  4474     0269  2A6B               	goto	u1311
  4475     026A  2A6C               	goto	u1310
  4476     026B                     u1311:
  4477     026B  2A6D               	goto	l1721
  4478     026C                     u1310:
  4479     026C                     l1719:
  4480     026C  17BC               	bsf	___flmul@prod+2,7
  4481     026D                     l1721:
  4482     026D  3639               	lsrf	___flmul@bexp,w
  4483     026E  00BD               	movwf	___flmul@prod+3
  4484     026F                     l722:
  4485     026F  0833               	movf	___flmul@sign,w
  4486     0270  00AE               	movwf	??___flmul
  4487     0271  082E               	movf	??___flmul,w
  4488     0272  04BD               	iorwf	___flmul@prod+3,f
  4489     0273                     l1723:
  4490     0273  083D               	movf	___flmul@prod+3,w
  4491     0274  00A9               	movwf	?___flmul+3
  4492     0275  083C               	movf	___flmul@prod+2,w
  4493     0276  00A8               	movwf	?___flmul+2
  4494     0277  083B               	movf	___flmul@prod+1,w
  4495     0278  00A7               	movwf	?___flmul+1
  4496     0279  083A               	movf	___flmul@prod,w
  4497     027A  00A6               	movwf	?___flmul
  4498     027B                     l710:
  4499     027B  0008               	return
  4500     027C                     __end_of___flmul:
  4501                           
  4502                           	psect	text28
  4503     065D                     __ptext28:	
  4504 ;; *************** function __Umul8_16 *****************
  4505 ;; Defined at:
  4506 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul8_16.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  multiplier      1    wreg     unsigned char 
  4509 ;;  multiplicand    1    1[COMMON] unsigned char 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;  multiplier      1    9[COMMON] unsigned char 
  4512 ;;  word_mpld       2    7[COMMON] unsigned int 
  4513 ;;  product         2    5[COMMON] unsigned int 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  2    1[COMMON] unsigned int 
  4516 ;; Registers used:
  4517 ;;		wreg, status,2, status,0
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4523 ;;      Params:         2       0       0       0       0       0       0       0
  4524 ;;      Locals:         5       0       0       0       0       0       0       0
  4525 ;;      Temps:          2       0       0       0       0       0       0       0
  4526 ;;      Totals:         9       0       0       0       0       0       0       0
  4527 ;;Total ram usage:        9 bytes
  4528 ;; Hardware stack levels used: 1
  4529 ;; Hardware stack levels required when called: 1
  4530 ;; This function calls:
  4531 ;;		Nothing
  4532 ;; This function is called by:
  4533 ;;		___flmul
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537     065D                     __Umul8_16:	
  4538                           ;psect for function __Umul8_16
  4539                           
  4540                           
  4541                           ;incstack = 0
  4542                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4543                           ;__Umul8_16@multiplier stored from wreg
  4544     065D  00F9               	movwf	__Umul8_16@multiplier
  4545     065E                     l1453:
  4546     065E  01F5               	clrf	__Umul8_16@product
  4547     065F  01F6               	clrf	__Umul8_16@product+1
  4548     0660                     l1455:
  4549     0660  0871               	movf	__Umul8_16@multiplicand,w
  4550     0661  00F3               	movwf	??__Umul8_16
  4551     0662  01F4               	clrf	??__Umul8_16+1
  4552     0663  0873               	movf	??__Umul8_16,w
  4553     0664  00F7               	movwf	__Umul8_16@word_mpld
  4554     0665  0874               	movf	??__Umul8_16+1,w
  4555     0666  00F8               	movwf	__Umul8_16@word_mpld+1
  4556     0667                     l1457:
  4557     0667  1C79               	btfss	__Umul8_16@multiplier,0
  4558     0668  2E6A               	goto	u861
  4559     0669  2E6B               	goto	u860
  4560     066A                     u861:
  4561     066A  2E6F               	goto	l729
  4562     066B                     u860:
  4563     066B                     l1459:
  4564     066B  0877               	movf	__Umul8_16@word_mpld,w
  4565     066C  07F5               	addwf	__Umul8_16@product,f
  4566     066D  0878               	movf	__Umul8_16@word_mpld+1,w
  4567     066E  3DF6               	addwfc	__Umul8_16@product+1,f
  4568     066F                     l729:
  4569     066F  3001               	movlw	1
  4570     0670                     u875:
  4571     0670  35F7               	lslf	__Umul8_16@word_mpld,f
  4572     0671  0DF8               	rlf	__Umul8_16@word_mpld+1,f
  4573     0672  0B89               	decfsz	9,f
  4574     0673  2E70               	goto	u875
  4575     0674  1003               	clrc
  4576     0675  0CF9               	rrf	__Umul8_16@multiplier,f
  4577     0676                     l1461:
  4578     0676  0879               	movf	__Umul8_16@multiplier,w
  4579     0677  1D03               	btfss	3,2
  4580     0678  2E7A               	goto	u881
  4581     0679  2E7B               	goto	u880
  4582     067A                     u881:
  4583     067A  2E67               	goto	l1457
  4584     067B                     u880:
  4585     067B                     l1463:
  4586     067B  0876               	movf	__Umul8_16@product+1,w
  4587     067C  00F2               	movwf	?__Umul8_16+1
  4588     067D  0875               	movf	__Umul8_16@product,w
  4589     067E  00F1               	movwf	?__Umul8_16
  4590     067F                     l731:
  4591     067F  0008               	return
  4592     0680                     __end_of__Umul8_16:
  4593                           
  4594                           	psect	text29
  4595     074D                     __ptext29:	
  4596 ;; *************** function _Analog_read_raw *****************
  4597 ;; Defined at:
  4598 ;;		line 18 in file "./analog_driver.h"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;		None
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;		None
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  2    1[COMMON] unsigned short 
  4605 ;; Registers used:
  4606 ;;		wreg
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4612 ;;      Params:         2       0       0       0       0       0       0       0
  4613 ;;      Locals:         0       0       0       0       0       0       0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0
  4615 ;;      Totals:         2       0       0       0       0       0       0       0
  4616 ;;Total ram usage:        2 bytes
  4617 ;; Hardware stack levels used: 1
  4618 ;; Hardware stack levels required when called: 1
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_Analog_read_percent
  4623 ;;		_Analog_read_voltage
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627     074D                     _Analog_read_raw:	
  4628                           ;psect for function _Analog_read_raw
  4629                           
  4630     074D                     l1505:	
  4631                           ;incstack = 0
  4632                           ; Regs used in _Analog_read_raw: [wreg]
  4633                           
  4634                           
  4635                           ;./analog_driver.h: 19:     ADCON0bits.ON = 1;
  4636     074D  0141               	movlb	1	; select bank1
  4637     074E  141D               	bsf	29,0	;volatile
  4638                           
  4639                           ;./analog_driver.h: 20:     ADCON0bits.GO = 1;
  4640     074F  149D               	bsf	29,1	;volatile
  4641     0750                     l178:	
  4642                           ;./analog_driver.h: 21:     while(ADCON0bits.GO);
  4643                           
  4644     0750  189D               	btfsc	29,1	;volatile
  4645     0751  2F53               	goto	u911
  4646     0752  2F54               	goto	u910
  4647     0753                     u911:
  4648     0753  2F50               	goto	l178
  4649     0754                     u910:
  4650     0754                     l1507:
  4651                           
  4652                           ;./analog_driver.h: 23:     return ADRES;
  4653     0754  081C               	movf	28,w	;volatile
  4654     0755  00F2               	movwf	?_Analog_read_raw+1
  4655     0756  081B               	movf	27,w	;volatile
  4656     0757  00F1               	movwf	?_Analog_read_raw
  4657     0758                     l181:
  4658     0758  0008               	return
  4659     0759                     __end_of_Analog_read_raw:
  4660                           
  4661                           	psect	intentry
  4662     0004                     __pintentry:	
  4663 ;; *************** function _ISR *****************
  4664 ;; Defined at:
  4665 ;;		line 81 in file "main.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;		None
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      void 
  4672 ;; Registers used:
  4673 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4679 ;;      Params:         0       0       0       0       0       0       0       0
  4680 ;;      Locals:         0       0       0       0       0       0       0       0
  4681 ;;      Temps:          1       0       0       0       0       0       0       0
  4682 ;;      Totals:         1       0       0       0       0       0       0       0
  4683 ;;Total ram usage:        1 bytes
  4684 ;; Hardware stack levels used: 1
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		Interrupt level 1
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692     0004                     _ISR:
  4693                           
  4694                           ;incstack = 0
  4695     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4696                           
  4697                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4698     0005  3180               	pagesel	$
  4699     0006                     i1l1957:
  4700                           
  4701                           ;main.c: 83:     if(PIR1bits.RC1IF){
  4702     0006  014E               	movlb	14	; select bank14
  4703     0007  1E0D               	btfss	13,4	;volatile
  4704     0008  280A               	goto	u150_21
  4705     0009  280B               	goto	u150_20
  4706     000A                     u150_21:
  4707     000A  2829               	goto	i1l226
  4708     000B                     u150_20:
  4709     000B                     i1l1959:
  4710                           
  4711                           ;main.c: 85:         if(RX_index < 80){
  4712     000B  3050               	movlw	80
  4713     000C  027C               	subwf	_RX_index,w
  4714     000D  1803               	skipnc
  4715     000E  2810               	goto	u151_21
  4716     000F  2811               	goto	u151_20
  4717     0010                     u151_21:
  4718     0010  281C               	goto	i1l1965
  4719     0011                     u151_20:
  4720     0011                     i1l1961:
  4721                           
  4722                           ;main.c: 86:             RX_buffer[RX_index] = RC1REG;
  4723     0011  087C               	movf	_RX_index,w
  4724     0012  3EA0               	addlw	(low (_RX_buffer| 0))& (0+255)
  4725     0013  0086               	movwf	6
  4726     0014  0187               	clrf	7
  4727     0015  0142               	movlb	2	; select bank2
  4728     0016  0819               	movf	25,w	;volatile
  4729     0017  0081               	movwf	1
  4730     0018                     i1l1963:
  4731                           
  4732                           ;main.c: 87:             RX_index ++;
  4733     0018  3001               	movlw	1
  4734     0019  00F0               	movwf	??_ISR
  4735     001A  0870               	movf	??_ISR,w
  4736     001B  07FC               	addwf	_RX_index,f
  4737     001C                     i1l1965:
  4738                           
  4739                           ;main.c: 90:         if(RC1STAbits.FERR){
  4740     001C  0142               	movlb	2	; select bank2
  4741     001D  1D1D               	btfss	29,2	;volatile
  4742     001E  2820               	goto	u152_21
  4743     001F  2821               	goto	u152_20
  4744     0020                     u152_21:
  4745     0020  2823               	goto	i1l228
  4746     0021                     u152_20:
  4747     0021                     i1l1967:
  4748                           
  4749                           ;main.c: 92:             RC1STAbits.SPEN = 0;
  4750     0021  139D               	bcf	29,7	;volatile
  4751                           
  4752                           ;main.c: 93:             RC1STAbits.SPEN = 1;
  4753     0022  179D               	bsf	29,7	;volatile
  4754     0023                     i1l228:	
  4755                           ;main.c: 95:         }
  4756                           
  4757                           
  4758                           ;main.c: 96:         if(RC1STAbits.OERR){
  4759     0023  1C9D               	btfss	29,1	;volatile
  4760     0024  2826               	goto	u153_21
  4761     0025  2827               	goto	u153_20
  4762     0026                     u153_21:
  4763     0026  2829               	goto	i1l226
  4764     0027                     u153_20:
  4765     0027                     i1l1969:
  4766                           
  4767                           ;main.c: 98:             RC1STAbits.CREN = 0;
  4768     0027  121D               	bcf	29,4	;volatile
  4769                           
  4770                           ;main.c: 99:             RC1STAbits.CREN = 1;
  4771     0028  161D               	bsf	29,4	;volatile
  4772     0029                     i1l226:	
  4773                           ;main.c: 103:     }
  4774                           
  4775                           
  4776                           ;main.c: 105:     if(PIR1bits.SSP1IF){
  4777     0029  014E               	movlb	14	; select bank14
  4778     002A  1C8D               	btfss	13,1	;volatile
  4779     002B  282D               	goto	u154_21
  4780     002C  282E               	goto	u154_20
  4781     002D                     u154_21:
  4782     002D  2830               	goto	i1l231
  4783     002E                     u154_20:
  4784     002E                     i1l1971:
  4785                           
  4786                           ;main.c: 111:         PIR1bits.SSP1IF = 0;
  4787     002E  108D               	bcf	13,1	;volatile
  4788                           
  4789                           ;main.c: 112:         PIR1bits.BCL1IF = 0;
  4790     002F  110D               	bcf	13,2	;volatile
  4791     0030                     i1l231:
  4792     0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4793     0031  0009               	retfie
  4794     0032                     __end_of_ISR:
  4795     007E                     btemp	set	126	;btemp
  4796     007E                     int$flags	set	126
  4797     007E                     wtemp0	set	126
  4798                           
  4799                           	psect	idloc
  4800                           
  4801                           ;Config register IDLOC0 @ 0x8000
  4802                           ;	unspecified, using default values
  4803     8000                     	org	32768
  4804     8000  3FFF               	dw	16383
  4805                           
  4806                           ;Config register IDLOC1 @ 0x8001
  4807                           ;	unspecified, using default values
  4808     8001                     	org	32769
  4809     8001  3FFF               	dw	16383
  4810                           
  4811                           ;Config register IDLOC2 @ 0x8002
  4812                           ;	unspecified, using default values
  4813     8002                     	org	32770
  4814     8002  3FFF               	dw	16383
  4815                           
  4816                           ;Config register IDLOC3 @ 0x8003
  4817                           ;	unspecified, using default values
  4818     8003                     	org	32771
  4819     8003  3FFF               	dw	16383
  4820                           
  4821                           	psect	config
  4822                           
  4823                           ;Config register CONFIG1 @ 0x8007
  4824                           ;	External Oscillator Mode Selection bits
  4825                           ;	FEXTOSC = OFF, Oscillator not enabled
  4826                           ;	Power-up Default Value for COSC bits
  4827                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
  4828                           ;	Clock Out Enable bit
  4829                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
  4830                           ;	VDD Range Analog Calibration Selection bit
  4831                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
  4832     8007                     	org	32775
  4833     8007  3FED               	dw	16365
  4834                           
  4835                           ;Config register CONFIG2 @ 0x8008
  4836                           ;	Master Clear Enable bit
  4837                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
  4838                           ;	Power-up Timer Selection bits
  4839                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  4840                           ;	WDT Operating Mode bits
  4841                           ;	WDTE = ON, WDT enabled regardless of Sleep; SEN bit is ignored
  4842                           ;	Brown-out Reset Enable bits
  4843                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  4844                           ;	Brown-out Reset Voltage Selection bit
  4845                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
  4846                           ;	PPSLOCKED One-Way Set Enable bit
  4847                           ;	PPS1WAY = ON, The PPSLOCKED bit can be set once after an unlocking sequence is execute
      +                          d; once PPSLOCKED is set, all future changes to PPS registers are prevented
  4848                           ;	Stack Overflow/Underflow Reset Enable bit
  4849                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  4850     8008                     	org	32776
  4851     8008  3FFF               	dw	16383
  4852                           
  4853                           ;Config register CONFIG3 @ 0x8009
  4854                           ;	unspecified, using default values
  4855     8009                     	org	32777
  4856     8009  3FFF               	dw	16383
  4857                           
  4858                           ;Config register CONFIG4 @ 0x800A
  4859                           ;	Boot Block Size Selection bits
  4860                           ;	BBSIZE = BB512, 512 words boot block size
  4861                           ;	Boot Block Enable bit
  4862                           ;	BBEN = OFF, Boot Block is disabled
  4863                           ;	SAF Enable bit
  4864                           ;	SAFEN = OFF, SAF is disabled
  4865                           ;	Application Block Write Protection bit
  4866                           ;	WRTAPP = OFF, Application Block is not write-protected
  4867                           ;	Boot Block Write Protection bit
  4868                           ;	WRTB = OFF, Boot Block is not write-protected
  4869                           ;	Configuration Registers Write Protection bit
  4870                           ;	WRTC = OFF, Configuration Registers are not write-protected
  4871                           ;	Storage Area Flash (SAF) Write Protection bit
  4872                           ;	WRTSAF = OFF, SAF is not write-protected
  4873                           ;	Low Voltage Programming Enable bit
  4874                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
  4875     800A                     	org	32778
  4876     800A  3FFF               	dw	16383
  4877                           
  4878                           ;Config register CONFIG5 @ 0x800B
  4879                           ;	User Program Flash Memory Code Protection bit
  4880                           ;	CP = OFF, User Program Flash Memory code protection is disabled
  4881     800B                     	org	32779
  4882     800B  3FFF               	dw	16383

Data Sizes:
    Strings     98
    Constant    16
    Data        0
    BSS         81
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     55      55
    BANK1            80      0      80
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    AT_command@at_command	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_14(CODE[11]), STR_13(CODE[12]), STR_1(CODE[11]), 

    AT_command_check@expected_response	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_18(CODE[22]), STR_10(CODE[22]), STR_5(CODE[8]), 

    AT_command_check@at_command	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_17(CODE[8]), STR_9(CODE[8]), STR_4(CODE[3]), 

    I2C_SHT4x_read_raw@raw_rh	PTR unsigned short  size(1) Largest target is 2
		 -> main@rawhum(BANK0[2]), 

    I2C_SHT4x_read_raw@raw_temp	PTR unsigned short  size(1) Largest target is 2
		 -> main@rawtemp(BANK0[2]), 

    I2C_read_query@data	PTR unsigned char  size(1) Largest target is 11
		 -> I2C_MCP23008_read@rx_data(COMMON[11]), I2C_SHT4x_read_raw@rx_data(BANK0[6]), I2C_SHT4x_read@rx_data(COMMON[6]), 

    EUSART_clear_buffer@buffer	PTR unsigned char  size(1) Largest target is 80
		 -> RX_buffer(BANK1[80]), 

    EUSART_print@string	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_17(CODE[8]), STR_14(CODE[11]), STR_13(CODE[12]), STR_12(CODE[11]), 
		 -> STR_11(CODE[12]), STR_9(CODE[8]), STR_6(CODE[11]), STR_4(CODE[3]), 
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_AT_command_check
    _LoRa_setup->_AT_command_check
    _AT_command_check->_EUSART_print
    _AT_command->_EUSART_print
    _LoRa_send_data->_EUSART_print
    _EUSART_print_hex->_EUSART_write
    _EUSART_print->_EUSART_write
    _I2C_SHT4x_read_raw->_I2C_read_query
    _I2C_write_query->_I2C_write
    _I2C_read_query->_I2C_read
    _I2C_read_query->_I2C_write
    _Analog_read_percent->___fltol
    ___flmul->__Umul8_16

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Analog_read_percent
    _LoRa_setup->_AT_command_check
    _Analog_read_percent->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   13890
                                             47 BANK0      8     8      0
                         _AT_command
                   _AT_command_check
                _Analog_read_percent
                       _Analog_setup
                _EUSART_clear_buffer
                       _EUSART_setup
                 _I2C_SHT4x_read_raw
                          _I2C_setup
                    _I2C_setup_slave
                     _LoRa_send_data
                         _LoRa_setup
                        _SLEEP_start
                          _WDT_setup
                       _remote_check
 ---------------------------------------------------------------------------------
 (1) _remote_check                                         2     0      2       0
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _WDT_setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SLEEP_start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoRa_setup                                           3     3      0    3623
                                              5 BANK0      3     3      0
                         _AT_command
                   _AT_command_check
                       _EUSART_print
 ---------------------------------------------------------------------------------
 (2) _AT_command_check                                    10     5      5    2060
                                              8 COMMON     4     4      0
                                              0 BANK0      5     0      5
                _EUSART_clear_buffer
                       _EUSART_print
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (3) _EUSART_clear_buffer                                  4     3      1     382
                                              1 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _AT_command                                           3     1      2     943
                                              8 COMMON     3     1      2
                       _EUSART_print
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (1) _LoRa_send_data                                       6     1      5    1228
                                              8 COMMON     1     1      0
                                              0 BANK0      5     0      5
                       _EUSART_print
                   _EUSART_print_hex
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (2) _EUSART_print_hex                                     3     3      0     161
                                              2 COMMON     3     3      0
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (2) _EUSART_print                                         6     4      2     611
                                              2 COMMON     6     4      2
                       _EUSART_write
 ---------------------------------------------------------------------------------
 (3) _EUSART_write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_setup_slave                                      1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_setup                                            1     1      0       1
 ---------------------------------------------------------------------------------
 (1) _I2C_SHT4x_read_raw                                   9     8      1    1145
                                              8 COMMON     2     1      1
                                              0 BANK0      7     7      0
                     _I2C_read_query
                    _I2C_write_query
 ---------------------------------------------------------------------------------
 (2) _I2C_write_query                                      2     1      1     241
                                              2 COMMON     2     1      1
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (2) _I2C_read_query                                       6     4      2     636
                                              2 COMMON     6     4      2
                           _I2C_read
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (3) _I2C_write                                            1     1      0      22
                                              1 COMMON     1     1      0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (3) _I2C_stop                                             0     0      0       0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (3) _I2C_start                                            0     0      0       0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (3) _I2C_read                                             1     1      0      23
                                              1 COMMON     1     1      0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (4) _I2C_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_setup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Analog_setup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Analog_read_percent                                  7     7      0    4276
                                             40 BANK0      7     7      0
                    _Analog_read_raw
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             10 COMMON     2     2      0
                                             32 BANK0      8     4      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3025
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) _Analog_read_raw                                      2     0      2       0
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AT_command
     _EUSART_print
       _EUSART_write
     _EUSART_write
   _AT_command_check
     _EUSART_clear_buffer
     _EUSART_print
     _EUSART_write
   _Analog_read_percent
     _Analog_read_raw
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Analog_setup
   _EUSART_clear_buffer
   _EUSART_setup
   _I2C_SHT4x_read_raw
     _I2C_read_query
       _I2C_read
         _I2C_wait
       _I2C_start
         _I2C_wait
       _I2C_stop
         _I2C_wait
       _I2C_write
         _I2C_wait
     _I2C_write_query
       _I2C_start
       _I2C_stop
       _I2C_write
   _I2C_setup
   _I2C_setup_slave
   _LoRa_send_data
     _EUSART_print
     _EUSART_print_hex
       _EUSART_write
     _EUSART_write
   _LoRa_setup
     _AT_command
     _AT_command_check
     _EUSART_print
   _SLEEP_start
   _WDT_setup
   _remote_check

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      94       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     37      37       6       68.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      94      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed May 22 13:35:21 2024

                               l81 07A7                                 l90 077B  
                               l84 07B9                                 l93 0783  
                               l87 071B                __Umul8_16@word_mpld 0077  
                              l105 0615                                l113 0639  
                              l122 069C                                l210 04F8  
                              l131 074C                                l203 04A7  
                              l140 07AD                                l125 065C  
                              l221 06CA                                l134 07B3  
                              l214 06F3                                l143 079B  
                              l119 06DF                                l128 0741  
                              l152 0707                                l146 06A5  
                              l218 06BF                                l219 06BE  
                              l181 0758                                l149 06B4  
                              l158 0575                                l166 05C9  
                              l175 0728                                l178 0750  
                              l514 0418                                l194 0547  
                              l507 042D                                l187 0497  
                              l517 042D                                l710 027B  
                              l198 05A2                                l722 026F  
                              l731 067F                                l716 01FB  
                              l760 02D8                                l729 066F  
                              l754 029F                                l756 0326  
                              l767 02F2                                l768 02FE  
                              _ISR 0004                                u810 0746  
                              u811 0745                                u820 074C  
                              u900 0572                                u821 074B  
                              u901 0571                                u910 0754  
                              u911 0753                                u905 056E  
                              u850 06AA                                u851 06A9  
                              u860 066B                                u861 066A  
                              u880 067B                                u960 03C7  
                              u881 067A                                u961 03C6  
                              u970 03DD                                u875 0670  
                              u980 03F0                                u981 03EF  
                              u990 03F7                                u991 03F6  
                              u975 03D9                                wreg 0009  
                     ___flmul@aexp 0038                       ___flmul@bexp 0039  
                     ___flmul@sign 0033                       ___flmul@temp 003E  
                     ___flmul@prod 003A                        main@battery 0051  
                     _BAUD1CONbits 011F                               ?_ISR 0070  
           LoRa_send_data@humidity 0022                       ___fltol@exp1 007B  
                             l2101 051B                               l2031 05F2  
                             l2111 0540                               l2025 077B  
                             l2033 0601                               l2041 06D5  
                             l2105 051D                               l2027 0780  
                             l2035 0605                               l2051 062E  
                             l2115 0576                               l2043 06D9  
                             l2107 052A                               l2131 0329  
                 ?_Analog_read_raw 0071                               l1405 0741  
                             l1501 0572                               l2029 05F0  
                             l2045 0617                               l2117 0596  
                             l2053 06E0                               l2037 06CC  
                             l2061 049E                               l2109 052D  
                             l2141 0348                               l2133 032D  
                             l1407 0746                               l1431 07AB  
                             l2047 0620                               l2119 059A  
                             l2055 06E7                               l2039 06CE  
                             l2071 04B8                               l2063 04A0  
                             l2151 0367                               l2143 034E  
                             l2135 0336                               l1505 074D  
                             l1601 005E                               l1441 06AA  
                             l1425 07AE                               l1433 0795  
                             l2049 062B                               l2057 06EB  
                             l2081 04EA                               l2073 04CB  
                             l2065 04A2                               l2161 037B  
                             l2153 036A                               l2145 0354  
                             l2137 033A                               l2129 0327  
                             l1507 0754                               l1611 0073  
                             l1603 0060                               l1443 06AD  
                             l1427 07B1                               l1435 0798  
                             l2075 04CF                               l2067 04AC  
                             l2059 0498                               l2171 039D  
                             l2163 0380                               l2155 036C  
                             l2147 0357                               l2139 033F  
                             l1461 0676                               l1453 065E  
                             l1701 0211                               l1621 0088  
                             l1613 0074                               l1605 0068  
                             l1445 06B0                               l1437 069D  
                             l1429 07A8                               l2085 04EC  
                             l2077 04D1                               l2069 04B4  
                             l2093 04F9                               l2173 03A0  
                             l2165 0381                               l2157 0373  
                             l2149 0364                               l1463 067B  
                             l1455 0660                               l1711 0252  
                             l1703 0229                               l1631 00A3  
                             l1623 0090                               l1615 0079  
                             l1607 006D                               l1551 03BD  
                             l1447 06B2                               l1439 06A0  
                             l2079 04D3                               l2087 04F0  
                             l2095 0500                               l2175 03A2  
                             l2167 0388                               l2159 0376  
                             l1457 0667                               l1721 026D  
                             l1713 025B                               l1705 022D  
                             l1641 00F8                               l1633 00AE  
                             l1625 0095                               l1617 007E  
                             l1609 006F                               l1561 03E2  
                             l1553 03C7                               l1449 06B3  
                             l1481 0700                               l1801 0694  
                             l2089 04F7                               l2097 0513  
                             l2177 03A8                               l2169 039B  
                             l1459 066B                               l1723 0273  
                             l1715 025D                               l1707 023A  
                             l1651 012B                               l1643 0105  
                             l1635 00BB                               l1627 009A  
                             l1619 0086                               l1563 03EA  
                             l1731 0287                               l1491 054F  
                             l1483 0704                               l1475 06F5  
                             l1811 069B                               l1803 0696  
                             l2099 051A                               l2179 03AD  
                             l1717 0268                               l1709 0244  
                             l1661 0168                               l1653 0136  
                             l1645 0112                               l1637 00D3  
                             l1581 040F                               l1573 03F8  
                             l1565 03EC                               l1557 03D0  
                             l1741 02B3                               l1733 0297  
                             l1493 0554                               l1477 06F8  
                             l1805 0697                               l1821 0650  
                             l1813 063B                               l1719 026C  
                             l1671 01B8                               l1663 0173  
                             l1655 013D                               l1647 0119  
                             l1639 00E0                               l1591 0047  
                             l1583 041D                               l1567 03F0  
                             l1575 0408                               l1559 03E1  
                             l1751 02DF                               l1743 02BE  
                             l1735 02A7                               l1727 027E  
                             l1495 0557                               l1487 0549  
                             l1479 06FB                               l1807 0699  
                             l1831 0657                               l1823 0651  
                             l1815 0641                               l1903 06C8  
                             l1681 01D7                               l1673 01C4  
                             l1665 0185                               l1657 014F  
                             l1649 0124                               l1593 004B  
                             l1585 0422                               l1761 0314  
                             l1753 02E8                               l1745 02C5  
                             l1729 0283                               l1497 0561  
                             l1489 054C                               l1841 05A5  
                             l1809 069A                               l1833 0658  
                             l1825 0652                               l1817 064A  
                             l1691 01F8                               l1675 01CB  
                             l1683 01DB                               l1667 019A  
                             l1659 0156                               l1595 004C  
                             l1587 0041                               l1763 0319  
                             l1755 02EC                               l1747 02C9  
                             l1739 02B0                               l1851 0720  
                             l1499 0565                               l1843 05AB  
                             l1835 0659                               l1827 0654  
                             l1819 064C                               l1771 07A2  
                             l1685 01DF                               l1677 01CF  
                             l1669 01B1                               l1597 0051  
                             l1589 0045                               l1765 031D  
                             l1757 02F6                               l1749 02D1  
                             l1861 0469                               l1853 0727  
                             l1781 0712                               l1845 05B2  
                             l1837 065A                               l1829 0655  
                             l1773 07B7                               l1695 0200  
                             l1687 01E0                               l1679 01D0  
                             l1599 0056                               l1767 031E  
                             l1759 0300                               l1863 0496  
                             l1855 042E                               l1783 0715  
                             l1775 0708                               l1791 0680  
                             l1839 065B                               l1697 0205  
                             l1689 01E4                               l1857 0436  
                             l1849 071C                               l1785 0718  
                             l1777 070F                               l1793 0682  
                             l1699 020D                               l1859 0465  
                             l1787 071A                               l1779 0711  
                             l1795 068D                               l1797 068F  
                             l1789 0680                               l1799 0693  
                             l1895 06B5                               l1897 06BC  
                             l1899 06C3                               STR_1 0759  
                             STR_2 07B4                               STR_3 0784  
                             STR_4 07B4                               STR_5 0784  
                             STR_6 076F                               STR_7 078C  
                             STR_8 05DA                               STR_9 078C  
                             u1010 0407                               u1011 0406  
                             u1100 0079                               u1020 040E  
                             u1101 0078                               u1021 040D  
                             u1005 03F9                               u1110 007E  
                             u1111 007D                               u1200 01CF  
                             u1120 0095                               u1040 041D  
                             u1201 01CE                               u1121 0094  
                             u1041 041C                               u1130 009A  
                             u1050 0422                               u1131 0099  
                             u1051 0421                               u1035 0410  
                             u1300 0252                               u1220 01DF  
                             u1060 004B                               u1301 0251  
                             u1221 01DE                               u1061 004A  
                             u1310 026C                               u1230 01E4  
                             u1070 0051                               u1311 026B  
                             u1231 01E3                               u1215 01D1  
                             u1071 0050                               u1240 01F8  
                             u1160 0190                               u1080 0056  
                             u1400 02EC                               u1320 0283  
                             u1305 024E                               u1241 01F7  
                             u1145 0113                               u1081 0055  
                             u1401 02EB                               u1321 0282  
                             u1250 01FF                               u1170 01A7  
                             u1090 0073                               u1410 02F2  
                             u1330 0287                               u1251 01FE  
                             u1155 013E                               u1091 0072  
                             u1411 02F1                               u1331 0286  
                             u1260 0205                               u1420 02F6  
                             u1340 02A7                               u1261 0204  
                             u1165 018C                               u1421 02F5  
                             u1341 02A6                               u1270 0211  
                             u1430 030A                               u1271 0210  
                             u1175 01A3                               u1280 021F  
                             u1440 0319                               u1360 02C4  
                             u1600 06DF                               u1185 01B2  
                             u1441 0318                               u1361 02C3  
                             u1601 06DE                               u1290 023A  
                             u1450 031D                               u1291 0239  
                             u1195 01C5                               u1451 031C  
                             u1435 0306                               u1355 02B8  
                             u1380 02DE                               u1620 04A7  
                             u1700 039B                               u1285 021B  
                             u1381 02DD                               u1621 04A6  
                             u1701 039A                               u1630 04CB  
                             u1295 0236                               u1375 02D2  
                             u1615 061A                               u1631 04CA  
                             u1640 04EA                               u1480 06BC  
                             u1641 04E9                               u1481 06BB  
                             u1650 04F7                               u1490 06C3  
                             u1395 02E2                               u1651 04F6  
                             u1635 04C7                               u1491 06C2  
                             u1580 0780                               u1660 0513  
                             u1581 077F                               u1661 0512  
                             u1717 0343                               u1590 0615  
                             u1670 0540                               u1591 0614  
                             u1671 053F                               u1727 035D  
                             u1680 0336                               u1737 0523  
                             u1681 0335                               u1690 0380  
                             u1747 04CC                               u1691 037F  
                             u1757 06EE                               u1767 059D  
                             u1777 05AE                               _main 0327  
                      main@rawtemp 0053                               fsr0h 0005  
                             fsr1h 0007                               indf0 0000  
                             fsr0l 0004                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                 __end_of_I2C_read 06B5                   ??_LoRa_send_data 0078  
                 __end_of_I2C_wait 074D                               start 0032  
                 __end_of_I2C_stop 07AE           __end_of_AT_command_check 04F9  
               EUSART_write@txData 0071        __end_of_Analog_read_percent 0498  
                      ?_AT_command 0078                   ??_I2C_read_query 0074  
                            ??_ISR 0070                      I2C_write@data 0071  
                    ___fltol@sign1 007A                              ?_main 0070  
                            _ADRES 009B                              STR_10 05DA  
                            STR_11 0729                              STR_12 0764  
                            STR_13 0735                              STR_14 0759  
                            STR_17 078C                              STR_18 05DA  
                  __end_of___flmul 027C                      ?_EUSART_setup 0070  
                    ?_EUSART_print 0072                    __end_of___fltol 042E  
                    ?_EUSART_write 0070                              i1l231 0030  
                            i1l226 0029                              i1l228 0023  
                            _PORTA 000C                              _TRISA 0012  
  Analog_read_percent@batt_voltage 004C                         _LoRa_setup 04F9  
        EUSART_clear_buffer@buffer 0073                  __end_of_I2C_setup 069D  
                            status 0003                  __end_of_I2C_start 07B4  
                            wtemp0 007E                  __end_of_I2C_write 079C  
       AT_command_check@at_command 0020        __end_ofEUSART_print_hex@ref 05DA  
          EUSART_clear_buffer@size 0071                    __initialization 0034  
         __end_of_EUSART_print_hex 063A                       __end_of_main 03BD  
                   ??_EUSART_setup 0071                     ??_EUSART_print 0074  
                   ??_EUSART_write 0071                             ??_main 004F  
         I2C_SHT4x_read_raw@raw_rh 0078               Analog_read_percent@a 0048  
                     ?_SLEEP_start 0070                             _ANSELA 1F38  
                           _RA1PPS 1F11                             _RC1REG 0119  
                           _RA2PPS 1F12                             _RA5PPS 1F15  
                           i1l1961 0011                             i1l1971 002E  
                           i1l1963 0018                             i1l1965 001C  
                           i1l1957 0006                             i1l1967 0021  
                           i1l1959 000B                             i1l1969 0027  
                           u150_20 000B                             u150_21 000A  
                           u151_20 0011                             u151_21 0010  
                           u152_20 0021                             u152_21 0020  
                           u153_20 0027                             u153_21 0026  
                           u154_20 002E                             u154_21 002D  
                           _RX1PPS 1ECB                             _TX1REG 011A  
                 __end_of___xxtofl 0327                          ??___flmul 002E  
                        ??___fltol 0044                       _Analog_setup 071C  
                        ?_I2C_read 0070                          ?_I2C_wait 0070  
           I2C_write_query@address 0073                          ?_I2C_stop 0070  
                __end_of_WDT_setup 07A8                        ?_LoRa_setup 0070  
                     ___xxtofl@arg 0022                       ___xxtofl@exp 0021  
                     ___xxtofl@val 0071            __end_of__initialization 003D  
      I2C_setup_slave@slaveAddress 0071                         ___fltol@f1 0040  
                   __pcstackCOMMON 0070                  ??_I2C_setup_slave 0071  
                       ??_I2C_read 0071                         ??_I2C_wait 0071  
                       ??_I2C_stop 0071                         __pbssBANK1 00A0  
             __end_of_EUSART_setup 071C               __end_of_EUSART_print 0616  
             __end_of_EUSART_write 0784                  __end_of__Umul8_16 0680  
                ?_AT_command_check 0020                       ??_AT_command 007A  
                       __pmaintext 0327                 ??_AT_command_check 0078  
                       __pintentry 0004                          ?___xxtofl 0071  
                          _SP1BRGH 011C                            _SP1BRGL 011B  
                          _SSP1ADD 018D                            _SSP1BUF 018C  
               __end_of_AT_command 06F4                      ?_remote_check 0071  
                ??_I2C_write_query 0073                          _I2C_setup 0680  
                        _I2C_start 07AE                          _I2C_write 0794  
                ?_EUSART_print_hex 0070                            ___flmul 0041  
                          ___fltol 03BD                 ??_EUSART_print_hex 0072  
                          __ptext1 06B5                            __ptext2 07A2  
                          __ptext3 07B7                            __ptext4 04F9  
                          __ptext5 0498                            __ptext6 06CB  
                          __ptext7 06E0                            __ptext8 0576  
                          __ptext9 0616                         ??___xxtofl 0075  
                          clrloop0 079D               end_of_initialization 003D  
                   ??_remote_check 0073         __end_of_I2C_SHT4x_read_raw 05CA  
                       ?_I2C_setup 0070                         ?_I2C_start 0070  
                       ?_I2C_write 0070                          _PORTAbits 000C  
                    EUSART_print@c 0077                      ___xxtofl@sign 0020  
                        _TRISAbits 0012                  main@sleep_counter 0052  
AT_command_check@expected_response 0022                       ??_LoRa_setup 0025  
            LoRa_send_data@battery 0024               AT_command@at_command 0078  
                        _WDT_setup 07A2                        ___flmul@grs 0034  
                  _I2C_setup_slave 063A                         main@rawhum 0055  
                ??_Analog_read_raw 0073                 __end_of_LoRa_setup 0548  
                        _RX_buffer 00A0                       _EUSART_setup 0708  
                     _EUSART_print 05F0                       _EUSART_write 077A  
              start_initialization 0034                        __end_of_ISR 0032  
              _EUSART_clear_buffer 06CB                         ?_WDT_setup 0070  
                      ??_I2C_setup 0071                        ??_I2C_start 0071  
       Analog_read_percent@percent 004E                        ??_I2C_write 0071  
                        __Umul8_16 065D         Analog_read_percent@voltage 004A  
             ?_EUSART_clear_buffer 0071               __end_of_remote_check 06CB  
                AT_command_check@i 007B                          ___flmul@a 002A  
                        ___flmul@b 0026                        __pbssCOMMON 007C  
                        ___latbits 0001                      __pcstackBANK0 0020  
          __end_of_I2C_setup_slave 065D                    _I2C_write_query 06F4  
              _Analog_read_percent 042E                           ?___flmul 0026  
                         ?___fltol 0040                         ?__Umul8_16 0071  
            ??_EUSART_clear_buffer 0072               ?_Analog_read_percent 0070  
                   _LoRa_send_data 0576                     _I2C_read_query 0548  
                    ??_SLEEP_start 0071                           _I2C_read 069D  
                         _I2C_wait 0741                           _I2C_stop 07A8  
           EUSART_print_hex@number 0073                        ??_WDT_setup 0071  
              EUSART_print_hex@ref 05CA                          clear_ram0 079C  
                         _PIE1bits 0717                           _PIR1bits 070D  
               I2C_read_query@data 0072                        I2C_read@tmp 0071  
                         _SSP1CON2 0191             __end_of_LoRa_send_data 05A3  
                         _SSP1STAT 018F              ??_Analog_read_percent 007C  
           __end_of_I2C_read_query 0576                 _I2C_SHT4x_read_raw 05A3  
                       _ADCON0bits 009D                         _ADCON1bits 009E  
                    ?_Analog_setup 0070            __end_of_I2C_write_query 0708  
              ?_I2C_SHT4x_read_raw 0078                   ?_I2C_setup_slave 0070  
                         _RX_index 007C                __end_of_SLEEP_start 07BA  
              I2C_write_query@data 0072                    _Analog_read_raw 074D  
             ??_I2C_SHT4x_read_raw 0079         I2C_SHT4x_read_raw@raw_temp 0026  
                  ?_LoRa_send_data 0020                        ??__Umul8_16 0073  
                  ?_I2C_read_query 0072                     ??_Analog_setup 0071  
                 _AT_command_check 0498                           ___xxtofl 027C  
               EUSART_print@string 0072                           __ptext10 05F0  
                         __ptext11 077A                           __ptext20 069D  
                         __ptext12 063A                           __ptext21 0741  
                         __ptext13 0680                           __ptext22 0708  
                         __ptext14 05A3                           __ptext23 071C  
                         __ptext15 06F4                           __ptext24 042E  
                         __ptext16 0548                           __ptext25 027C  
                         __ptext17 0794                           __ptext26 03BD  
                         __ptext18 07A8                           __ptext27 0041  
                         __ptext19 07AE                           __ptext28 065D  
                         __ptext29 074D                       _SSP1CON1bits 0190  
                     _SSP1CON2bits 0191                       _SSP1CON3bits 0192  
                  I2C_read_query@i 0075                       _remote_check 06B5  
            I2C_read_query@address 0077                         _RC1STAbits 011D  
                         int$flags 007E                         _ODCONAbits 1F3A  
                     _SSP1STATbits 018F      AT_command_check@response_size 0024  
             EUSART_clear_buffer@i 0074                   ?_I2C_write_query 0072  
                       _INTCONbits 000B                        _SLEEP_start 07B7  
                   __pstringtext10 0000                   _EUSART_print_hex 0616  
          __end_of_Analog_read_raw 0759          I2C_SHT4x_read_raw@rx_data 0020  
                         intlevel1 0000                  EUSART_print_hex@a 0074  
                       _AT_command 06E0                 LoRa_setup@attempts 0027  
                    __pstringtext1 05CA                      __pstringtext2 0729  
                    __pstringtext3 0735                      __pstringtext4 0759  
                    __pstringtext5 0764                      __pstringtext6 076F  
                    __pstringtext7 0784                      __pstringtext8 078C  
                    __pstringtext9 07B4             __Umul8_16@multiplicand 0071  
                       _SSP1DATPPS 1EC6                         _SSP1CLKPPS 1EC5  
                       _WDTCONbits 080C                         _TX1STAbits 011E  
    I2C_read_query@number_of_bytes 0073               __Umul8_16@multiplier 0079  
             __end_of_Analog_setup 0729        __end_of_EUSART_clear_buffer 06E0  
        LoRa_send_data@temperature 0020                  __Umul8_16@product 0075  
